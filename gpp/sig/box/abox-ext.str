/**
 * This module provides abstractions on top of the Box language.
 */
module abox-ext
imports Box

/**
 * The following overlays define abbreviations of frequently used constructs.
 */
overlays

  EmptyBox = H([],[])

  H0(xs)  = H([SOpt(HS(),"0")],xs)
  H1(xs)  = H([],xs)
  H2(xs)  = H([SOpt(HS(),"2")],xs)

  V0(xs)  = V([SOpt(VS(),"0")],xs)
  V1(xs)  = V([SOpt(VS(),"1")],xs)

  HV1(xs) = HV([],xs)

  Keyword(x) = FBOX(KW(), x)
  Parens(x)  = H0([S("("), x, S(")")])
  Indent(x)  = H0([S("  "), x])

/**
 * Constructor Strategies
 */
rules

  MkS : x -> S(x)
  MkParens : x -> Parens(x)


/**
 * The following strategies define various ways to format lists with separators.
 */
strategies

  sep-list(s1, s2) = map(s1); separate-by(!S(<s2>()))

  hpref-sep-list(s1, s2, s3) = 
        map(s1); 
        ([] + [ \ x -> H1([<s2>(), x]) \ | hpref(s3)])

  hpref(s) = map(\ x -> H1([<s>(), x]) \)

  hpost-sep-list(s1, s2) = 
    rec y([] + [s1] <+ [\ x -> H0([<s1> x, <s2>()]) \ | y])

  semicolons = hpost-sep-list(id,!S(";"))

  presemicolons(s) = hpref-sep-list(id, s, !S(";"))
  prebars(s)       = hpref-sep-list(id, s, !S("|"))

  commas = sep-list(id,!",")
  post-commas = hpost-sep-list(id,!S(","))

rules

  HPost(s) : [x | xs] -> [H0([x, <s>()]) | xs]

  Quote : x -> H0([S(quote), x, S(quote)])
          where <implode-string> [34] => quote

  Quote' : x -> H0([S(quote), x, S(quote)])
          where <implode-string> [92, 34] => quote

  CommaList(s) : x -> H0(<sep-list(s,!", ")> x)

  MkParens : x -> Parens(x)
