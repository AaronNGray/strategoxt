module lib-parse-pp-table-args
imports verbose dir xtc-proc stratego-xt-xtc-tools

strategies

  create-pp-table-args =
    get-config-p
    ; map(ensure-pp-table-parsed; \x -> ["-p", x]\); concat
    ; if-verbose5(debug(!"INFO: pretty print table argumets: "))

  get-config-p =
    <get-config> "-p" <+ ![]
                       // Merijn: Specifyng  pretty-print tables
                       // _should_ be optional. Hence no call to
                       // fatal-error here when pretty-print tables are not
                       // specified. Instead return an emtpy list
                       // <fatal-error> ["** ERROR: no pretty-print tables specified with -p arguments"]

  pp-options =
    ArgOption("-p"
    , where(<extend-config> ("-p", [<id>]))
    , !"-p file   Use pretty-print table in file"
    )

strategies // to parse a pretty-print table in pp-table syntax to aterms

  ensure-pp-table-parsed =
       has-extension(!"pp.af")
    <+ must-be-pp; lookup-or-parse

  must-be-pp =
        has-extension(!"pp")
    <+ <fatal-error> ["** ERROR: pretty-print table must have extension .pp.af or .pp :", <id>]

  lookup-or-parse =
       lookup-pp-af <+ parse-to-temp-file

  lookup-pp-af =
      !(<add-extension; file-exists> (<id>, "af"), <id>)
    ; where((modification-time, modification-time); geq)
    ; Fst
    ; if-verbose2(debug(!"** INFO: Using existing parsed pretty print-table: "))

  parse-to-temp-file =
      ?pp
    ; xtc-temp-files(
        !FILE(pp)
      ; xtc-parse-pp-table
      ; rename-to(new-file)
      )
    ; ?FILE(<id>)
    ; if-verbose2(debug(!"** INFO: Using temporary file for parsed print-table: "))

