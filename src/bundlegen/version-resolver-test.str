\literate[version-resolver-test]

 Autobundle -- Tool suite for automated source tree composition

 Author: Merijn de Jonge (M.de.Jonge@tue.nl)

 $Id: autobundle-sig.r,v 1.4 2002/05/27 21:51:17 mdejonge Exp $

\begin{code}
module version-resolver-test

imports
   sunit version-resolver

strategies
version-resolver-test =
   test-suite(!"version-resolver-test",
   test-a;
   test-b;
   test-c;
   test-d;
   test-e;
   test-e2;
   test-e3;
   test-f;
   test-g;
   test-h )


// Case a
//   a1   d1
// b1  c1 c2  => [a1,b1,c2,d1]
//     b2 b1
//     e1
test-a =
   apply-test( !"unreachable constraint",
   resolve-version-constraints,
    ![
    pkg(pkg-id("root","0"),[pkg-dep("a",GTE("1")),pkg-dep("d",GTE("1"))]),
    pkg(pkg-id("a", "1"), [pkg-dep("b",GTE("1")), pkg-dep("c", GTE("1"))]),
    pkg(pkg-id("b", "1"), []),
    pkg(pkg-id("c", "1"), [pkg-dep("b",GTE("2"))]),
    pkg(pkg-id("b", "2"), [pkg-dep("e",GTE("1"))]),
    pkg(pkg-id("e", "1"), []),
    pkg(pkg-id("d", "1"), [pkg-dep("c",GTE("2"))]),
    pkg(pkg-id("c", "2"), [pkg-dep("b",GTE("1"))])
    ],
    ![pkg-id("b","1"),pkg-id("c","2"),pkg-id("d","1"),pkg-id("a","1")]
)

// Case b
//   a1   d1 f1
// b1  c1 c2 c3 ==> [a1,b2,c3,d1,e1]
//     b2 b1 b2
//     e1
test-b =
   apply-test( !"version-down-upgrade",
   resolve-version-constraints,
    ![
    pkg(pkg-id("root","0"),[pkg-dep("a",GTE("1")),pkg-dep("d",GTE("1")),pkg-dep("f",GTE("1"))]),
    pkg(pkg-id("a", "1"), [pkg-dep("b",GTE("1")), pkg-dep("c", GTE("1"))]),
    pkg(pkg-id("b", "1"), []),
    pkg(pkg-id("c", "1"), [pkg-dep("b",GTE("2"))]),
    pkg(pkg-id("b", "2"), [pkg-dep("e",GTE("1"))]),
    pkg(pkg-id("e", "1"), []),
    pkg(pkg-id("d", "1"), [pkg-dep("c",GTE("2"))]),
    pkg(pkg-id("c", "2"), [pkg-dep("b",GTE("1"))]),
    pkg(pkg-id("f", "1"), [pkg-dep("c",GTE("3"))]),
    pkg(pkg-id("c", "3"), [pkg-dep("b",GTE("2"))])
    ],
    ![pkg-id("e","1"),pkg-id("c","3"),pkg-id("b","2"),pkg-id("f","1"),pkg-id("d","1"),pkg-id("a","1")]
)

// Case c
//   a1   f1
// b1  c1     => [a1,b2,c1,f1]
// f2  b2
//     f1
test-c =
   apply-test( !"multi-level comparison",
   resolve-version-constraints,
    ![
    pkg(pkg-id("root","0"),[pkg-dep("a",GTE("1")),pkg-dep("f",GTE("1"))]),
    pkg(pkg-id("a","1"),[pkg-dep("b",GTE("1")),pkg-dep("c",GTE("1"))]),
    pkg(pkg-id("b","1"),[pkg-dep("f",GTE("2"))]),
    pkg(pkg-id("c","1"),[pkg-dep("b",GTE("2")),pkg-dep("f",GTE("1"))]),
    pkg(pkg-id("b","2"),[]),
    pkg(pkg-id("f","1"),[]),
    pkg(pkg-id("f","2"),[])
   ],
   ![pkg-id("c","1"),pkg-id("b","2"),pkg-id("f","1"),pkg-id("a","1")]
   )

// Case d
//   a1   d1
// b1  c1 e1  => [a1,b1,c2,d1,e1]
//     b2 c2
test-d =
   apply-test( !"multi-level unreachable constraint",
   resolve-version-constraints,
    ![
     pkg(pkg-id("root","0"),[pkg-dep("a",GTE("1")),pkg-dep("d",GTE("1"))]),
     pkg(pkg-id("a","1"),[pkg-dep("b",GTE("1")),pkg-dep("c",GTE("1"))]),
     pkg(pkg-id("b","1"),[]),
     pkg(pkg-id("c","1"),[pkg-dep("b",GTE("2"))]),
     pkg(pkg-id("b","2"),[]),
     pkg(pkg-id("d","1"),[pkg-dep("e",GTE("1"))]),
     pkg(pkg-id("e","1"),[pkg-dep("c",GTE("2"))]),
     pkg(pkg-id("c","2"),[])
     ],
    ![pkg-id("b","1"),pkg-id("e","1"),pkg-id("c","2"),pkg-id("d","1"),pkg-id("a","1")]
    )

// Case e
//   a1
//   b1   => [a1,b1,c1]
//   c1
//   a1
test-e =
   apply-test( !"circular dependencies",
   resolve-version-constraints,
    ![
     pkg(pkg-id("root","0"),[pkg-dep("a",GTE("1"))]),
     pkg(pkg-id("a","1"),[pkg-dep("b",GTE("1"))]),
     pkg(pkg-id("b","1"),[pkg-dep("c",GTE("1"))]),
     pkg(pkg-id("c","1"),[pkg-dep("a",GTE("1"))])
     ],
    ![pkg-id("b","1"),pkg-id("c","1"),pkg-id("a","1")]
    )

// Case e2
//   a1
//   b2   => [a1,b2,c1]
//   c1
//   b1
test-e2 =
   apply-test( !"circular dependencies2",
   resolve-version-constraints,
    ![
     pkg(pkg-id("root","0"),[pkg-dep("a",GTE("1"))]),
     pkg(pkg-id("a","1"),[pkg-dep("b",GTE("2"))]),
     pkg(pkg-id("b","2"),[pkg-dep("c",GTE("1"))]),
     pkg(pkg-id("c","1"),[pkg-dep("b",GTE("1"))])
     ],
    ![pkg-id("c","1"),pkg-id("b","2"),pkg-id("a","1")]
    )

// Case e3
//   a1
//   b2   => [d1,c1,b2,a1]
//  c1 d1
//  b1 b2
test-e3 =
   apply-test( !"circular dependencies3",
   resolve-version-constraints,
    ![
     pkg(pkg-id("root","0"),[pkg-dep("a",GTE("1"))]),
     pkg(pkg-id("a","1"),[pkg-dep("b",GTE("2"))]),
     pkg(pkg-id("b","2"),[pkg-dep("c",GTE("1")),pkg-dep("d",GTE("1"))]),
     pkg(pkg-id("c","1"),[pkg-dep("b",GTE("1"))]),
     pkg(pkg-id("d","1"),[pkg-dep("b",GTE("2"))]),
     pkg(pkg-id("b","1"),[])
     ],
    ![pkg-id("d","1"),pkg-id("c","1"),pkg-id("b","2"),pkg-id("a","1")]
    )

// Case f
//   a1
//   b1   =>  [a1,b1,c1,d1]
//   c1
//   (d1)
test-f =
   apply-test( !"unresolved dependencies",
   resolve-version-constraints,
    ![
     pkg(pkg-id("root","0"),[pkg-dep("a",GTE("1"))]),
     pkg(pkg-id("a","1"),[pkg-dep("b",GTE("1"))]),
     pkg(pkg-id("b","1"),[pkg-dep("c",GTE("1"))]),
     pkg(pkg-id("c","1"),[pkg-dep("d",GTE("1"))])
     ],
    ![pkg-id("c","1"),pkg-id("b","1"),pkg-id("d","1"),pkg-id("a","1")]
    )

// Case g
//   a1
// (b1) (b2)  => [a1,b2]
test-g =
   apply-test( !"unresolved1",
   resolve-version-constraints,
    ![
     pkg(pkg-id("root","0"),[pkg-dep("a",GTE("1"))]),
     pkg(pkg-id("a","1"),[pkg-dep("b",GTE("1")),pkg-dep("b",GTE("2"))])
     ],
    ![pkg-id("b","2"),pkg-id("a","1")]
    )

// Case h
//   a1
// b1 (b2)  => [a1,b2]
test-h =
   apply-test( !"unresolved1",
   resolve-version-constraints,
    ![
     pkg(pkg-id("root","0"),[pkg-dep("a",GTE("1"))]),
     pkg(pkg-id("a","1"),[pkg-dep("b",GTE("1")),pkg-dep("b",GTE("2"))]),
     pkg(pkg-id("b","1"),[])
     ],
    ![pkg-id("b","2"),pkg-id("a","1")]
    )

\end{code}
% Copyright (C) 2002-2003 Merijn de Jonge <M.de.Jonge@tue.nl>
%
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 2, or (at your option)
% any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
% 02111-1307, USA.
