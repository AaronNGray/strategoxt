module XtcTemplate
exports
  sorts Template
  context-free syntax

    TType "template" "{" 
      TLayout? 
    "}"                                      -> Template {cons("Template")}

    "explicit"                               -> TType {cons("Explicit")}
    "implicit"                               -> TType {cons("Implicit")}
    "regular"                                -> TType {cons("Regular")}

    "layout" "=" TArgs                       -> TLayout {cons("Layout")}
    {TArg ","}*                              -> TArgs

    "(" TArg ")" 		             -> TArg {bracket}   
    {TArg ","}+ "|" {TArg ","}+              -> TArg {cons("TOr")}

    "$" TVar                                 -> TArg {cons("TVarSpec")} 
    "input"                                  -> TVar {cons("Input")}
    "output"                                 -> TVar {cons("Output")}
    "error"                                  -> TVar {cons("Error")}
    "arguments"                              -> TVar {cons("Arguments")}

    TVarType "?" 
    TArgKeys TDefault? TValType?             -> TArgVar {cons("TVarOpt")}
    TVarType     
    TArgKeys TDefault? TValType?             -> TArgVar {cons("TVarOne")} 
    TVarType "+" 
    TArgKeys TDefault? TValType?             -> TArgVar {cons("TVarPlus")} 
    TVarType "*" 
    TArgKeys TDefault? TValType?             -> TArgVar {cons("TVarStar")}

    "{" TDefaultVal "}"                      -> TDefault {cons("Default")}
    TArgVals                                 -> TDefaultVal {cons("Values")}
    "on"                                     -> TDefaultVal {cons("On")}
    "off"                                    -> TDefaultVal {cons("Off")}
    "option"                                 -> TVarType {cons("Option")}
    "argoption"                              -> TVarType {cons("ArgOption")}
    TArgVar                                  -> TArg
    { ArgKey "|"}*                           -> TArgKeys
    {ArgVal ","}*                            -> TArgVals

    "::" Identifier                          -> TValType {cons("Type")}

    