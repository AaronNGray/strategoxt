/** 
 * XTC Repository Module
 * 
 * @author Niels Janssen (njanssen@cs.uu.nl)
 */
module xtc-repository
imports Xtd Repository Runtime 
imports xtc-convert

strategies

  /** 
   * Determines location of XTC repository
   */
  xtc-location =
    <getenv> "XTC_REPOSITORY" 
 <+ GetInternalDefaultXtcRepository
 <+ prim("XTC_REPOSITORY") 

  external GetInternalDefaultXtcRepository(|)

  /** 
   * Resets all run-time XTC repository data
   */  
  xtc-reset = 
    where( <table-destroy> XtcReg
         ; <table-destroy> XtcRef
         ; <xtc-create-tables> [XtcReg,XtcRef]
         )

  /** 
   * Flush the XtcCache table by destroying it
   */
  xtc-flush = 
    where( <table-destroy> XtcCache )

  /** 
   * Create all tables to store run-time XTC repository data
   */
  xtc-create-tables = 
    where(map(table-create))

/** 
 * Initialize run-time XTC repository data
 */
strategies

  xtc-init          = xtc-init(|<xtc-location>,[])
  xtc-init(|f)      = xtc-init(|f,[])
  xtc-init(|f,meta) = 
    where ( <table-keys> XtcReg ; not([]) <+ <xtc-load(|meta)> f )

/** 
 * Load XTC repository from file/url
 */
strategies

  xtc-load        = xtc-load(|[])
  xtc-load(|meta) =
    ?f 
  ; if is-url-http then 
      xtc-load-url 
    else 
      xtc-load-file 
    end
  ; ( Repository(id) 
    + where(<notice(|"Converting legacy XTC repository")> f)
    ; xtc-convert-repository
    ) 
  ; Repository(id)
  ; xtc-aterm2table(|meta)

  xtc-load-file = 
    <read-from> FILE(<id>)
  + where(xtc-create-new)
  ; <read-from> FILE(<id>)
  + err(|"Unable to read from repository file")
  ; fail

  xtc-load-url = 
    <read-from> URL(<id>)
  + err(|"Unable to read from repository URL")
  ; fail

strategies

  /**
   * Create new XTC repository file
   */
  xtc-create-new = 
    ?f
  ; not(file-exists)
  ; !Repository([]) 
  ; xtc-save-file(|f)  

/** 
 * Dump run-time XTC repository data
 */
strategies

  xtc-dump     = xtc-dump(|<xtc-location>)
  xtc-dump(|f) = 
    xtc-table2aterm(id,id)
  ; xtc-save-file(|f)

/** 
 * Save run-time XTC repository data (filters all data acquired from references)
 */
strategies
  
  xtc-save     = xtc-save(|<xtc-location>)
  xtc-save(|f) =
    xtc-table2aterm(
      where(not(xtc-is-imported))
    , not(?XtcLoaded)
    )
  ; xtc-save-file(|f)

/** 
 * Save XTC repository term to file
 */
strategies

  xtc-save-file     = xtc-save-file(|<xtc-location>)
  xtc-save-file(|f) = 
    where(<can-write-file <+ xtc-create-file> f)
  < <WriteToBinaryFile> (f,<id>)
  + <err(|"Unable to write to repository file")> f
  ; fail

strategies
 
 /** 
  * Import one XTC repository reference   
  * 
  * @note Strategy prefers local repositories over remote ones
  */
  xtc-import = 
    <table-getlist> XtcRef
  ; ( one(xtc-import-ref-local) <+ one(xtc-import-ref-remote) )
  ; <table-putlist> (XtcRef,<id>)

 /** 
  * Import one XTC repository reference   
  * 
  * @note Strategy prefers local repositories over remote ones
  */
  xtc-import-local = 
    <table-getlist> XtcRef
  ; one(xtc-import-ref-local) 
  ; <table-putlist> (XtcRef,<id>)

 /** 
  * Import all available local XTC repository references
  */
  xtc-import-all-local = 
    repeat(xtc-import-local)

 /** 
  * Import all available XTC repository references
  */
  xtc-import-all = 
    repeat(xtc-import)

 /** 
  * Import an XTC repository reference
  * 
  * @note All meta-information associated with the reference will be 
  *       inherited by everything imported from this reference.
  */
  xtc-import-ref :
    (l,meta) -> (l,meta')
    where <not(one(?XtcLoaded))> meta
        ; <filter(not(XtcImported))> meta => inherit
        ; <union> (meta,[XtcLoaded]) => meta'
        ; <xtc-load(|<conc> ([XtcImported],inherit))> l

 /** 
  * Import a local XTC repository reference
  */
  xtc-import-ref-local : 
    (l,meta) -> (l,meta')
    where where(<file-exists> l)
        ; xtc-import-ref => (_,meta')

 /** 
  * Import a non-local XTC repository reference
  */
  xtc-import-ref-remote : 
    (l,meta) -> (l,meta')
    where where(<not(file-exists)> l)
        ; xtc-import-ref => (_,meta')
    
 /** 
  * Creates a file
  */
  xtc-create-file = 
    not(file-exists)
  ; can-create-file 
  ; creat
  
/** 
 * Registers all data in an XTC repository term in tables
 */
strategies

  xtc-aterm2table        = xtc-aterm2table(|[])
  xtc-aterm2table(|meta) =
    Repository(map(xtc-register(|meta)))  

strategies

  /** 
   * Stores the contents of the tables in an XTC repository term 
   */
  xtc-table2aterm(filterImport,filterLoaded) = 
    split(
      xtc-reg2aterm(filterImport)
    , xtc-ref2aterm(filterImport,filterLoaded)
    )
  ; !Repository(<conc>)

  /** 
   * Stores the contents of the XtcReg table in an XTC repository subterm 
   */
  xtc-reg2aterm(filterImport) =
    <table-getlist> XtcReg
  ; map( (id,filter(filterImport)) )
  ; filter(!Registration(<Fst>,<Snd ; not([])>))

  /** 
   * Stores the contents of the XtcReg table in an XTC repository subterm 
   */
  xtc-ref2aterm(filterImport,filterLoaded) =
    <table-getlist> XtcRef
  ; filter(filterImport)
  ; some((id,filter(filterLoaded)))
  ; not([])
  < ![Reference(<id>)]
  + ![]

  /** 
   * Checks whether a reference is already imported 
   */ 
  xtc-is-imported = 
    (id,one(?XtcImported))
   
