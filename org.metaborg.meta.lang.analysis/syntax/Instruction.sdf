module Instruction
imports Common Term Task

exports
  context-free syntax
    "note"                                                      -> MsgType     {cons("Note")}
    "warning"                                                   -> MsgType     {cons("Warn")}
    "error"                                                     -> MsgType     {cons("Err")}
    "fails"                                                     -> MsgTrigger  {cons("Fail")}
    "succeeds"                                                  -> MsgTrigger  {cons("Succ")}
    "has" "multiple" "results"                                  -> MsgTrigger  {cons("Mult")}
    "show" MsgType Term "on" Term "when" Term MsgTrigger        -> Instruction {cons("Msg")}
    "choose" {Term "<+"}*                                       -> Instruction {cons("Choice")}
    "concat" {Term "+"}*                                        -> Instruction {cons("Concat")}
    "produce" Term                                              -> Instruction {cons("PropCalc")}
    "lookup" "property" Term "on" Term                          -> Instruction {cons("PropLookup")}
    "rewrite" Term "using" "relation" Term                      -> Instruction {cons("Rewrite")}
    "match" Term "using" "relation" Term "with" "bindings" Term -> Instruction {cons("Match")}
    "resolve" "definition" Term Term "in" Term                  -> Instruction {cons("ResolveDefs")}
    "resolve" "import" Term Term "in" Term                      -> Instruction {cons("ResolveNamedImports")}
    "disambiguate" "definitions" Term                           -> Instruction {cons("DisambiguateDefs")}

  context-free syntax
    CONTENTCOMPLETE -> MsgType     {cons("COMPLETION-MsgType")}
    CONTENTCOMPLETE -> MsgTrigger  {cons("COMPLETION-MsgTrigger")}
    CONTENTCOMPLETE -> Instruction {cons("COMPLETION-Instruction")}