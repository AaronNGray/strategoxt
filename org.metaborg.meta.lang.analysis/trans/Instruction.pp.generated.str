module Instruction.pp.generated

strategies
  prettyprint-MsgType :
    Note() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("note")]
                )
              ]

  prettyprint-MsgType :
    Warn() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("warning")]
                )
              ]

  prettyprint-MsgType :
    Err() -> [ H(
                 [SOpt(HS(), "0")]
               , [S("error")]
               )
             ]

  prettyprint-MsgTrigger :
    Fail() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("fails")]
                )
              ]

  prettyprint-MsgTrigger :
    Succ() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("succeeds")]
                )
              ]

  prettyprint-MsgTrigger :
    Mult() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("has multiple results")]
                )
              ]

  prettyprint-Instruction :
    Msg(a, b, c, d, e) -> [ H(
                              [SOpt(HS(), "0")]
                            , [ S("show ")
                              , a7
                              , S(" ")
                              , b4
                              , S(" on ")
                              , c1
                              , S(" when ")
                              , d0
                              , S(" ")
                              , e0
                              ]
                            )
                          ]
    where a7 := <pp-one-Z(prettyprint-MsgType)> a
    where b4 := <pp-one-Z(prettyprint-Term)> b
    where c1 := <pp-one-Z(prettyprint-Term)> c
    where d0 := <pp-one-Z(prettyprint-Term)> d
    where e0 := <pp-one-Z(prettyprint-MsgTrigger)> e

  prettyprint-Instruction :
    Choice(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("choose "), a8]
                   )
                 ]
    where a8 := <pp-H-list(prettyprint-Term|" <+ ")> a

  prettyprint-Instruction :
    Sequence(a) -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("sequence "), a9]
                     )
                   ]
    where a9 := <pp-H-list(prettyprint-Term|" ; ")> a

  prettyprint-Instruction :
    Combine(a) -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("concat "), a10]
                    )
                  ]
    where a10 := <pp-H-list(prettyprint-Term|" + ")> a

  prettyprint-Instruction :
    Id(a) -> [ H(
                 [SOpt(HS(), "0")]
               , [S("produce "), a11]
               )
             ]
    where a11 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Instruction :
    PropLookup(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ S("lookup ")
                            , a12
                            , S(" prop on ")
                            , b5
                            ]
                          )
                        ]
    where a12 := <pp-one-Z(prettyprint-Term)> a
    where b5 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Instruction :
    PropsLookup(a, b) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ S("lookup ")
                             , a13
                             , S(" props on ")
                             , b6
                             ]
                           )
                         ]
    where a13 := <pp-one-Z(prettyprint-Term)> a
    where b6 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Instruction :
    PropCheck(a, b, c, d) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ S("check ")
                                 , a14
                                 , S(" prop ")
                                 , b7
                                 , S(" against ")
                                 , c2
                                 , S(" wrt ")
                                 , d1
                                 ]
                               )
                             ]
    where a14 := <pp-one-Z(prettyprint-Term)> a
    where b7 := <pp-one-Z(prettyprint-Term)> b
    where c2 := <pp-one-Z(prettyprint-Term)> c
    where d1 := <pp-one-Z(prettyprint-Term)> d

  prettyprint-Instruction :
    Rewrite(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [ S("rewrite ")
                         , a15
                         , S(" wrt ")
                         , b8
                         ]
                       )
                     ]
    where a15 := <pp-one-Z(prettyprint-Term)> a
    where b8 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Instruction :
    Match(a, b, c) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("match ")
                          , a16
                          , S(" using relation ")
                          , b9
                          , S(" wrt bindings ")
                          , c3
                          ]
                        )
                      ]
    where a16 := <pp-one-Z(prettyprint-Term)> a
    where b9 := <pp-one-Z(prettyprint-Term)> b
    where c3 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-Instruction :
    ResolveDefs(a, b, c, d) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [ S("resolve ")
                                   , a17
                                   , S(" ")
                                   , b10
                                   , S(" in ")
                                   , c4
                                   , S(" wrt props ")
                                   , d2
                                   ]
                                 )
                               ]
    where a17 := <pp-one-Z(prettyprint-Term)> a
    where b10 := <pp-one-Z(prettyprint-Term)> b
    where c4 := <pp-one-Z(prettyprint-Term)> c
    where d2 := <pp-one-Z(prettyprint-Term)> d

  prettyprint-Instruction :
    CheckDefs(a, b) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ S("check ")
                           , a18
                           , S(" against namespace ")
                           , b11
                           ]
                         )
                       ]
    where a18 := <pp-one-Z(prettyprint-Term)> a
    where b11 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-MsgType

  prettyprint-example =
    prettyprint-MsgTrigger

  prettyprint-example =
    prettyprint-Instruction