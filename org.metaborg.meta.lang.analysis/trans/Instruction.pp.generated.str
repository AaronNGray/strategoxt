module Instruction.pp.generated

strategies
  prettyprint-MsgType :
    Note() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("note")]
                )
              ]

  prettyprint-MsgType :
    Warn() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("warning")]
                )
              ]

  prettyprint-MsgType :
    Err() -> [ H(
                 [SOpt(HS(), "0")]
               , [S("error")]
               )
             ]

  prettyprint-MsgTrigger :
    Fail() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("fails")]
                )
              ]

  prettyprint-MsgTrigger :
    Succ() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("succeeds")]
                )
              ]

  prettyprint-MsgTrigger :
    Mult() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("has multiple results")]
                )
              ]

  prettyprint-Instruction :
    Msg(a, b, c, d, e) -> [ H(
                              [SOpt(HS(), "0")]
                            , [ S("show ")
                              , a419
                              , S(" ")
                              , b188
                              , S(" on ")
                              , c109
                              , S(" when ")
                              , d57
                              , S(" ")
                              , e35
                              ]
                            )
                          ]
    where a419 := <pp-one-Z(prettyprint-MsgType)> a
    where b188 := <pp-one-Z(prettyprint-Term)> b
    where c109 := <pp-one-Z(prettyprint-Term)> c
    where d57 := <pp-one-Z(prettyprint-Term)> d
    where e35 := <pp-one-Z(prettyprint-MsgTrigger)> e

  prettyprint-Instruction :
    Choice(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("choose "), a420]
                   )
                 ]
    where a420 := <pp-H-list(prettyprint-Term|" <+ ")> a

  prettyprint-Instruction :
    Sequence(a) -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("sequence "), a421]
                     )
                   ]
    where a421 := <pp-H-list(prettyprint-Term|" ; ")> a

  prettyprint-Instruction :
    Combine(a) -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("concat "), a422]
                    )
                  ]
    where a422 := <pp-H-list(prettyprint-Term|" + ")> a

  prettyprint-Instruction :
    Id(a) -> [ H(
                 [SOpt(HS(), "0")]
               , [S("produce "), a423]
               )
             ]
    where a423 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Instruction :
    PropLookup(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ S("lookup property ")
                            , a424
                            , S(" on ")
                            , b189
                            ]
                          )
                        ]
    where a424 := <pp-one-Z(prettyprint-Term)> a
    where b189 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Instruction :
    PropsLookup(a, b) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ S("lookup properties ")
                             , a425
                             , S(" on ")
                             , b190
                             ]
                           )
                         ]
    where a425 := <pp-one-Z(prettyprint-Term)> a
    where b190 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Instruction :
    PropCheck(a, b, c, d) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ S("check prop ")
                                 , a426
                                 , S(" ")
                                 , b191
                                 , S(" against ")
                                 , c110
                                 , S(" using relation ")
                                 , d58
                                 ]
                               )
                             ]
    where a426 := <pp-one-Z(prettyprint-Term)> a
    where b191 := <pp-one-Z(prettyprint-Term)> b
    where c110 := <pp-one-Z(prettyprint-Term)> c
    where d58 := <pp-one-Z(prettyprint-Term)> d

  prettyprint-Instruction :
    Rewrite(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [ S("rewrite ")
                         , a427
                         , S(" using relation ")
                         , b192
                         ]
                       )
                     ]
    where a427 := <pp-one-Z(prettyprint-Term)> a
    where b192 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Instruction :
    Match(a, b, c) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("match ")
                          , a428
                          , S(" using relation ")
                          , b193
                          , S(" wrt bindings ")
                          , c111
                          ]
                        )
                      ]
    where a428 := <pp-one-Z(prettyprint-Term)> a
    where b193 := <pp-one-Z(prettyprint-Term)> b
    where c111 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-Instruction :
    ResolveDefs(a, b, c, d) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [ S("resolve ")
                                   , a429
                                   , S(" ")
                                   , b194
                                   , S(" definition in ")
                                   , c112
                                   , S(" wrt props ")
                                   , d59
                                   ]
                                 )
                               ]
    where a429 := <pp-one-Z(prettyprint-Term)> a
    where b194 := <pp-one-Z(prettyprint-Term)> b
    where c112 := <pp-one-Z(prettyprint-Term)> c
    where d59 := <pp-one-Z(prettyprint-Term)> d

  prettyprint-example =
    prettyprint-MsgType

  prettyprint-example =
    prettyprint-MsgTrigger

  prettyprint-example =
    prettyprint-Instruction