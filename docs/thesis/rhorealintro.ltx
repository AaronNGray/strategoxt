\begin{flushright}
{\em All language designers are arrogant.  Goes with the
  territory\ldots} \\
--- Larry Wall
\end{flushright}

In the previous two chapters we have looked at two useful languages for
program transformation: Stratego and Haskell.  In this chapter we
present the new language RhoStratego which combines the purity and
higher-order features of functional programming with the first class
pattern matching and generic traversals offered by Stratego.

We first give an overview of RhoStratego.  Next, we present the syntax
and semantics of the language (including the semantics of a strict
variant of the language).  Finally, we contrast RhoStratego's
pattern matching facilities to those in other functional languages,
and compare RhoStratego to the \rcalc{}. 

