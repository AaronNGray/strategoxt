#!/bin/sh
# Copyright (C) 2000 Merijn de Jonge <mdejonge@cwi.nl>,
#                    Eelco Visser <visser@acm.org>,
#                    Joost Visser <jvisser@cwi.nl>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
# 02111-1307, USA.

# $Id: getvalue.sh.src,v 1.1.1.1 2002/03/06 20:40:37 mdejonge Exp $


# This script retrieves Makefile variables from a makefile
#
# usage:
#   getvalue [-g <grammar>] [-h] <variable name>
#
# where
#    -g <grammar>  denotes for which grammar to obtain the information. If
#                  not specified, the grammar of the current directory is
#                  given.
#    -h            displays usage information.
#
# Examples:
#    > getvalue grammar
#       To retrieve the grammar name 
#    
#    > getvalue -g sdf.2.1 maturity
#       To obtain the matiruty level of a grammar
#

PREFIX=__PREFIX__
MAKE=__MAKE__

grammar=

usage() {
cat <<ENDCAT
This script retrieves Makefile variables from a makefile

usage:
  getvalue [-g <grammar>] [-h] <variable name>

where
   -g <grammar>  denotes for which grammar to obtain the information. If
                 not specified, the grammar of the current directory is
                 given.
   -h            displays usage information.
ENDCAT
}

# Parse command lie noptions
for d in *$
do
   case $1 in
      -g ) grammar=$2; shift; shift ;;
      -h ) usage; exit 0 ;;
      -* ) echo "Invalid option: $1"; exit 1 ;;
   esac
done

# If info for a specific grammar is requested, chdir to the corresponding
# grammar directory directory first.
if [ "a${grammar}" != "a" ]; then
  cd ${PREFIX}/../grammars/${grammar}
fi

# Retrieve the requested information by executing make.
${MAKE} --no-print-directory -s getvalue NAME=$1 2>/dev/null | grep -v '^creating'
