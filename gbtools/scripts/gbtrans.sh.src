#! /bin/sh

PREFIX=__PREFIX__
MAKE=__MAKE__
gbadd=${PREFIX}/bin/gbadd

out=$1

shift
grammars="$*"

trans () 
{
   grammar="`basename $1 | sed 's/\.[0-9.]*$//'`"
   version="`basename $1 | sed 's/^[^.]*\.//g'`"

   true \
   | EDITOR=true ${gbadd} -o ${out} -g ${grammar} -v ${version}

   # Copy sdf and pp files
   cp $1/*.sdf $1/*.pp  ${out}/${grammar}.${version}/syntax

   # Copy README.src
   cp $1/README.src ${out}/${grammar}.${version}

   # Copy data files
   cp `find $1/data -type f | grep -v CVS | grep -v Makefile` ${out}/${grammar}.${version}/data

   # Improve data/Makefile.am
   extra_dist="`grep EXTRA_DIST $1/data/Makefile.am`"
   grep -v EXTRA_DIST ${out}/${grammar}.${version}/data/Makefile.am > ${out}/${grammar}.${version}/data/Makefile.am.new
   echo "$extra_dist" >> ${out}/${grammar}.${version}/data/Makefile.am.new
   mv ${out}/${grammar}.${version}/data/Makefile.am.new ${out}/${grammar}.${version}/data/Makefile.am


   # Determine list of reused grammars
   reuses="`grep search_path $1/${grammar}.spec| cut -d = -f 2`"
   reuses="`echo ${reuses} | perl -p -e 's#\.\./##g;s#\./##g;s#(^| )\.( |\$)##g;s#([0-9])\s#\1-0 #g'`"

   # Create grammar.spec file
   cat $1/${grammar}.spec \
   | sed 's/ = /     = /g' \
   | perl -p -e 's@(# \$Id.*\$\n)@\1\n# Specify name and version of the grammar\ngrammar         = _grammar_\ngrammar_version = _version_\n@' \
   | sed "s/_grammar_/${grammar}/;s/_version_/${version}/;s/search_path.*\$/reuses          = ${reuses}/" \
   > ${out}/${grammar}.${version}/grammar.spec


   # re-generate configure.in from grammar.spec file
   ( 
    cd ${out}/${grammar}.${version}/
    rm configure.in
    ${MAKE} -f ${PREFIX}/share/gbtools/make_rules.gbtools configure.in GBTOOLS=${PREFIX}
   )

   echo "Dummy README file, top make automake happy" > ${out}/${grammar}.${version}/README
}

for g in ${grammars}
do
  trans $g
done
