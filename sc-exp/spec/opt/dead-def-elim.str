module dead-def-elim
imports Stratego stratlib lib pack-graph
strategies

  dead-def-elim-io = 
    iowrap(Specification([id,Strategies(dead-def-elim; map(local-dead-def-elim))]))

  dead-def-elim =
    !(["main_0_0"], <map(RegisterDefinition)>, [])
    ; graph-nodes-roots(Definition, svars, \ (_,x,d) -> [x|d] \ )

  RegisterDefinition =
    ?sdef@SDefT(f, xs, ys, s)
    ; rules(
        Definition : (f, _) -> sdef
      )
  
  local-dead-def-elim =
    rec x({| DefDead :
	     try(DeclareDead <+ DeclareNotDead)
	     ; all(x)
	     ; try(DeleteDeadDefinitions)
          |})

  DeclareDead =
    Let(map(DeclareDefDead), id)

  DeclareDefDead =
    ?SDefT(f, _, _, _)
    ; rules(DefDead : SDefT(f, _, _, _) -> ())

  DeleteDeadDefinitions =
     Let(filter(not(DefDead)), id)

  DeclareNotDead =
     ?CallT(SVar(f), _, _)
     ; override rules(DefDead : SDefT(f, _, _, _) -> Undefined)
  