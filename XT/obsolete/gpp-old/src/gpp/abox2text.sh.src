#! /bin/sh
# Copyright (C) 2000 Merijn de Jonge <mdejonge@cwi.nl>
#                    Eelco Visser <visser@acm.org>
#                    Joost Visser <jvisser@cwi.nl>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
# 02111-1307, USA.

# $Id: abox2text.sh.src,v 1.1.1.1 2001/06/05 09:11:47 mdejonge Exp $

# usage:
#   abox2text [-h] [-i abox] [-o text] [-w width]
#
# where
#   -h          Displays usage information.
#   -i abox     Specifies the BOX term to transform.
#   -o text     Specifies the file name of the resulting text term.
#   -w          Specifies max width of output

PREFIX=__PREFIX__

ABOX2TEXT=${PREFIX}/libexec/Abox2text

OUTPUT="cat"


# no core files
ulimit -c 0

usage () {
cat <<ENDCAT
usage:
  abox2text [-h] [-i abox] [-o text] [-w width]

where
  -h          Displays usage information.
  -i abox     Specifies the BOX term to transform.
  -o text    Specifies the file name of the resulting text term.
  -w          Specifies max width of output

This tool reads from standard input (or from the file specified with the
-i option) a BOX term containing formatting information and writes to
standard output (or to the file specified with the -o option)
corresponding formatted text.
ENDCAT
}

for arg in $*
do
   case $1 in
      -h ) usage; exit 0 ;;
      -i ) INPUT="-i $2"; shift; shift ;;
      -o ) OUTPUT="cat > $2"; shift ; shift ;;
      -w ) WIDTH="-w $2"; shift; shift ;;
      -* ) usage; exit 1 ;;
   esac
done

(
   ${ABOX2TEXT} ${WIDTH} ${INPUT}
) | eval ${OUTPUT}
