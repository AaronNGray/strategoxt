[
   SDefNoArgs                             -- _1 KW["="] _2,
   SDef                                   -- _1 KW["("] _2 KW[")"] KW["="] _3,
   SDef.2:iter-star-sep                   -- _1 KW[","],
   SDefT                                  -- _1 KW["("] _2 KW["|"] _3 KW[")"] KW["="] _4,
   SDefT.2:iter-star-sep                  -- _1 KW[","],
   SDefT.3:iter-star-sep                  -- _1 KW[","],
   ExtSDefInl                             -- KW["external"] _1 KW["("] _2 KW["|"] _3 KW[")"] KW["="] _4,
   ExtSDefInl.2:iter-star-sep             -- _1 KW[","],
   ExtSDefInl.3:iter-star-sep             -- _1 KW[","],
   ExtSDef                                -- KW["external"] _1 KW["("] _2 KW["|"] _3 KW[")"],
   ExtSDef.2:iter-star-sep                -- _1 KW[","],
   ExtSDef.3:iter-star-sep                -- _1 KW[","],
   DefaultVarDec                          -- _1,
   VarDec                                 -- _1 KW[":"] _2,
   ParenStrat                             -- KW["("] _1 KW[")"],
   Fail                                   -- KW["fail"],
   Id                                     -- KW["id"],
   SVar                                   -- _1,
   Let                                    -- KW["let"] _1 KW["in"] _2 KW["end"],
   Let.1:iter-star                        -- _1,
   Call                                   -- _1 KW["("] _2 KW[")"],
   Call.2:iter-star-sep                   -- _1 KW[","],
   CallT                                  -- _1 KW["("] _2 KW["|"] _3 KW[")"],
   CallT.2:iter-star-sep                  -- _1 KW[","],
   CallT.3:iter-star-sep                  -- _1 KW[","],
   Match                                  -- KW["?"] _1,
   Build                                  -- KW["!"] _1,
   ScopeDefault                           -- KW["{"] _1 KW["}"],
   Scope                                  -- KW["{"] _1 KW[":"] _2 KW["}"],
   Scope.1:iter-star-sep                  -- _1 KW[","],
   BA                                     -- _1 _2,
   Seq                                    -- _1 KW[";"] _2,
   LChoice                                -- _1 KW["<+"] _2,
   LGChoice                               -- _1 KW["<++"] _2,
   GuardedLChoice                         -- _1 KW["<"] _2 KW["+"] _3,
   Rec                                    -- KW["rec"] _1 KW["("] _2 KW[")"],
   Not                                    -- KW["not"] KW["("] _1 KW[")"],
   Where                                  -- KW["where"] KW["("] _1 KW[")"],
   Test                                   -- KW["test"] KW["("] _1 KW[")"],
   Bagof                                  -- KW["bagof"] KW["("] _1 KW[")"],
   PrimNoArgs                             -- KW["prim"] KW["("] _1 KW[")"],
   Prim                                   -- KW["prim"] KW["("] _1 KW[","] _2 KW[")"],
   Prim.2:iter-star-sep                   -- _1 KW[","],
   PrimT                                  -- KW["prim"] KW["("] _1 KW[","] _2 KW["|"] _3 KW[")"],
   PrimT.2:iter-star-sep                  -- _1 KW[","],
   PrimT.3:iter-star-sep                  -- _1 KW[","],
   Path                                   -- _1 _2,
   Some                                   -- KW["some"] KW["("] _1 KW[")"],
   One                                    -- KW["one"] KW["("] _1 KW[")"],
   All                                    -- KW["all"] KW["("] _1 KW[")"],
   Thread                                 -- KW["thread"] KW["("] _1 KW[")"],
   StrCong                                -- _1,
   IntCong                                -- _1,
   RealCong                               -- _1,
   CharCong                               -- _1,
   CongQ                                  -- _1 KW["("] _2 KW[")"],
   CongQ.2:iter-star-sep                  -- _1 KW[","],
   AnnoCong                               -- _1 _2,
   StrategyCurly                          -- KW["{"] _1 KW["}"],
   EmptyTupleCong                         -- KW["("] KW[")"],
   TupleCong                              -- KW["("] _1 KW[","] _2 KW[")"],
   TupleCong.2:iter-sep                   -- _1 KW[","],
   ModCongNoArgs                          -- _1,
   ModCong                                -- _1 KW["("] _2 KW[")"],
   ModCong.2:iter-star-sep                -- _1 KW[","],
   Mod                                    -- _1 KW["^"] _2,
   ListCongNoTail                         -- KW["["] _1 KW["]"],
   ListCongNoTail.1:iter-star-sep         -- _1 KW[","],
   ListCong                               -- KW["["] _1 KW["|"] _2 KW["]"],
   ListCong.1:iter-star-sep               -- _1 KW[","],
   ExplodeCong                            -- _1 KW["#"] _2,
   DynamicRules                           -- KW["rules"] KW["("] _1 KW[")"],
   DynamicRules.1:iter-star               -- _1,
   OverrideDynamicRules                   -- KW["override"] KW["rules"] KW["("] _1 KW[")"],
   OverrideDynamicRules.1:iter-star       -- _1,
   ExtendDynamicRules                     -- KW["extend"] KW["rules"] KW["("] _1 KW[")"],
   ExtendDynamicRules.1:iter-star         -- _1,
   ExtendOverrideDynamicRules             -- KW["extend"] KW["override"] KW["rules"] KW["("] _1 KW[")"],
   ExtendOverrideDynamicRules.1:iter-star -- _1,
   DynRuleScope                           -- KW["{|"] _1 KW[":"] _2 KW["|}"],
   DynRuleScope.1:iter-star-sep           -- _1 KW[","],
   CallNoArgs                             -- _1,
   LRule                                  -- KW["\\"] _1 KW["\\"],
   SRule                                  -- KW["("] _1 KW[")"],
   Choice                                 -- _1 KW["+"] _2,
   RChoice                                -- _1 KW["+>"] _2,
   GChoice                                -- _1 KW["++"] _2,
   RGChoice                               -- _1 KW["++>"] _2,
   AM                                     -- _1 KW["=>"] _2,
   OverlayNoArgs                          -- _1 KW["="] _2,
   Overlay                                -- _1 KW["("] _2 KW[")"] KW["="] _3,
   Overlay.2:iter-star-sep                -- _1 KW[","],
   RDefNoArgs                             -- _1 KW[":"] _2,
   RDef                                   -- _1 KW["("] _2 KW[")"] KW[":"] _3,
   RDef.2:iter-star-sep                   -- _1 KW[","],
   RDefT                                  -- _1 KW["("] _2 KW["|"] _3 KW[")"] KW[":"] _4,
   RDefT.2:iter-star-sep                  -- _1 KW[","],
   RDefT.3:iter-star-sep                  -- _1 KW[","],
   SRDefNoArgs                            -- _1 KW["::"] _2,
   SRDef                                  -- _1 KW["("] _2 KW[")"] KW["::"] _3,
   SRDef.2:iter-star-sep                  -- _1 KW[","],
   SRDefT                                 -- _1 KW["("] _2 KW["|"] _3 KW[")"] KW["::"] _4,
   SRDefT.2:iter-star-sep                 -- _1 KW[","],
   SRDefT.3:iter-star-sep                 -- _1 KW[","],
   RuleNoCond                             -- _1 KW["->"] _2,
   Rule                                   -- _1 KW["->"] _2 KW["where"] _3,
   StratRuleNoCond                        -- _1 KW["-->"] _2,
   StratRule                              -- _1 KW["-->"] _2 KW["where"] _3,
   Var                                    -- _1,
   ListVar                                -- _1,
   Var                                    -- _1,
   Int                                    -- _1,
   Real                                   -- _1,
   Str                                    -- _1,
   Char                                   -- _1,
   Wld                                    -- KW["_"],
   Op                                     -- _1 KW["("] _2 KW[")"],
   Op.2:iter-star-sep                     -- _1 KW[","],
   OpQ                                    -- _1 KW["("] _2 KW[")"],
   OpQ.2:iter-star-sep                    -- _1 KW[","],
   Explode                                -- _1 KW["#"] KW["("] _2 KW[")"],
   Anno                                   -- _1 KW["{"] _2 KW["}"],
   Anno.2:iter-star-sep                   -- _1 KW[","],
   App                                    -- KW["<"] _1 KW[">"] _2,
   RootApp                                -- _1,
   As                                     -- _1 KW["@"] _2,
   Tuple                                  -- KW["("] _1 KW[")"],
   Tuple.1:iter-star-sep                  -- _1 KW[","],
   List                                   -- KW["["] _1 KW["]"],
   List.1:iter-star-sep                   -- _1 KW[","],
   ListTail                               -- KW["["] _1 KW["|"] _2 KW["]"],
   ListTail.1:iter-star-sep               -- _1 KW[","],
   BuildDefault                           -- KW["_"] _1,
   Con1                                   -- _1 KW["["] _2 KW["]"],
   Con                                    -- _1 KW["["] _2 KW["]"] KW["("] _3 KW[")"],
   Con3                                   -- _1 KW["["] _2 KW["where"] _3 KW["]"],
   Con4                                   -- _1 KW["["] _2 KW["where"] _3 KW["]"] KW["("] _4 KW[")"],
   Sorts                                  -- V  [H  [KW["sorts"]] _1],
   Sorts.1:iter-star                      -- _1,
   Constructors                           -- V  [H  [KW["constructors"]] _1],
   Constructors.1:iter-star               -- _1,
   SortVar                                -- _1,
   SortNoArgs                             -- _1,
   Sort                                   -- _1 KW["("] _2 KW[")"],
   Sort.2:iter-star-sep                   -- _1 KW[","],
   SortList                               -- KW["["] _1 KW["]"],
   SortList.1:iter-star-sep               -- _1 KW[","],
   SortListTl                             -- KW["["] _1 KW["|"] _2 KW["]"],
   SortListTl.1:iter-star-sep             -- _1 KW[","],
   SortTuple                              -- KW["("] _1 KW[")"],
   SortTuple.1:iter-star-sep              -- _1 KW[","],
   Star                                   -- KW["*"],
   StarStar                               -- KW["**"],
   OpDecl                                 -- _1 KW[":"] _2,
   OpDeclQ                                -- _1 KW[":"] _2,
   OpDeclInj                              -- KW[":"] _1,
   ConstType                              -- _1,
   FunType                                -- _1 KW["->"] _2,
   FunType.1:iter-sep                     -- _1 KW["*"],
   Script                                 -- V  [H  [KW["stratego"] KW["script"]] _1],
   Script.1:iter-star                     -- _1,
   Command                                -- _1,
   Dump                                   -- KW[":dump"] _1,
   Load                                   -- KW[":load"] _1,
   Eval                                   -- KW[">"] _1,
   Module                                 -- KW["module"] _1 _2,
   Module.2:iter-star                     -- _1,
   Specification                          -- V  [H  [KW["specification"]] _1],
   Specification.1:iter-star              -- _1,
   Imports                                -- V  [H  [KW["imports"]] _1],
   Imports.1:iter-star                    -- _1,
   Rules                                  -- V  [H  [KW["rules"]] _1],
   Rules.1:iter-star                      -- _1,
   Strategies                             -- V  [H  [KW["strategies"]] _1],
   Strategies.1:iter-star                 -- _1,
   Signature                              -- V  [H  [KW["signature"]] _1],
   Signature.1:iter-star                  -- _1,
   Overlays                               -- V  [H  [KW["overlays"]] _1],
   Overlays.1:iter-star                   -- _1
]
