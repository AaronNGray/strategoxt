Specification([Signature([Constructors([OpDecl("SDefNoArgs",FunType([ConstType(Var("Id")),ConstType(Var("Strategy"))],ConstType(Var("StrategyDef")))),OpDecl("SDef",FunType([ConstType(Var("Id")),ConstType(Op("List",[Var("Typedid")])),ConstType(Var("Strategy"))],ConstType(Var("StrategyDef"))))])]),Signature([Constructors([OpDecl("DefaultVarDec",FunType([ConstType(Var("Id"))],ConstType(Var("Typedid")))),OpDecl("VarDec",FunType([ConstType(Var("Id")),ConstType(Var("Type"))],ConstType(Var("Typedid"))))])]),Signature([Constructors([OpDecl("ParenStrat",FunType([ConstType(Var("Strategy"))],ConstType(Var("StrategyParen")))),OpDecl("Fail",ConstType(Var("Strategy"))),OpDecl("Id",ConstType(Var("Strategy"))),OpDecl("SVar",FunType([ConstType(Var("Id"))],ConstType(Var("SVar")))),OpDecl("Let",FunType([ConstType(Op("List",[Var("Def")])),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Call",FunType([ConstType(Var("SVar")),ConstType(Op("List",[Var("Strategy")]))],ConstType(Var("Strategy")))),OpDecl("CallT",FunType([ConstType(Var("SVar")),ConstType(Op("List",[Var("Term")])),ConstType(Op("List",[Var("Strategy")]))],ConstType(Var("Strategy")))),OpDecl("Match",FunType([ConstType(Var("Term"))],ConstType(Var("Strategy")))),OpDecl("Build",FunType([ConstType(Var("Term"))],ConstType(Var("Strategy")))),OpDecl("ScopeDefault",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Scope",FunType([ConstType(Op("List",[Var("ID")])),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("BA",FunType([ConstType(Var("StrategyAngle")),ConstType(Var("Term"))],ConstType(Var("Strategy")))),OpDecl("Seq",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("LChoice",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("LGChoice",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("GuardedLChoice",FunType([ConstType(Var("Strategy")),ConstType(Var("StrategyMid")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Rec",FunType([ConstType(Var("Id")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Not",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Where",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Test",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Bagof",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("PrimNoArgs",FunType([ConstType(Var("String"))],ConstType(Var("Strategy")))),OpDecl("Prim",FunType([ConstType(Var("String")),ConstType(Op("List",[Var("Term")]))],ConstType(Var("Strategy")))),OpDecl("PrimTS",FunType([ConstType(Var("String")),ConstType(Op("List",[Var("Term")])),ConstType(Op("List",[Var("Strategy")]))],ConstType(Var("Strategy")))),OpDecl("PrimS",FunType([ConstType(Var("String")),ConstType(Op("List",[Var("Strategy")]))],ConstType(Var("Strategy")))),OpDecl("Path",FunType([ConstType(Var("Int")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Some",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("One",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("All",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Thread",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("StrCong",FunType([ConstType(Var("String"))],ConstType(Var("Strategy")))),OpDecl("IntCong",FunType([ConstType(Var("Int"))],ConstType(Var("Strategy")))),OpDecl("RealCong",FunType([ConstType(Var("Real"))],ConstType(Var("Strategy")))),OpDecl("AnnoCong",FunType([ConstType(Var("Strategy")),ConstType(Var("StrategyCurly"))],ConstType(Var("Strategy")))),OpDecl("StrategyCurly",FunType([ConstType(Var("Strategy"))],ConstType(Var("StrategyCurly")))),OpDecl("EmptyTupleCong",ConstType(Var("Strategy"))),OpDecl("TupleCong",FunType([ConstType(Var("Strategy")),ConstType(Op("List",[Var("Strategy")]))],ConstType(Var("Strategy")))),OpDecl("ModCongNoArgs",FunType([ConstType(Var("Mod"))],ConstType(Var("Strategy")))),OpDecl("ModCong",FunType([ConstType(Var("Mod")),ConstType(Op("List",[Var("Strategy")]))],ConstType(Var("Strategy")))),OpDecl("Mod",FunType([ConstType(Var("Id")),ConstType(Var("Id"))],ConstType(Var("Mod")))),OpDecl("ListCongNoTail",FunType([ConstType(Op("List",[Var("Strategy")]))],ConstType(Var("Strategy")))),OpDecl("ListCong",FunType([ConstType(Op("List",[Var("Strategy")])),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("ExplodeCong",FunType([ConstType(Var("Strategy")),ConstType(Var("StrategyParen"))],ConstType(Var("Strategy"))))])]),Signature([Constructors([OpDecl("DynamicRules",FunType([ConstType(Op("List",[Var("RuleDef")]))],ConstType(Var("Strategy")))),OpDecl("OverrideDynamicRules",FunType([ConstType(Op("List",[Var("RuleDef")]))],ConstType(Var("Strategy")))),OpDecl("DynRuleScope",FunType([ConstType(Op("List",[Var("Id")])),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("CallNoArgs",FunType([ConstType(Var("SVar"))],ConstType(Var("Strategy")))),OpDecl("LRule",FunType([ConstType(Var("Rule"))],ConstType(Var("Strategy")))),OpDecl("SRule",FunType([ConstType(Var("Rule"))],ConstType(Var("Strategy")))),OpDecl("Choice",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("RChoice",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("GChoice",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("RGChoice",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("AM",FunType([ConstType(Var("Strategy")),ConstType(Var("Term"))],ConstType(Var("Strategy"))))])])])
