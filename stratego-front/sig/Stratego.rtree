Specification([Signature([Constructors([OpDecl("Module",FunType([ConstType(Var("ModName")),ConstType(Op("List",[Var("Decl")]))],ConstType(Var("Module")))),OpDecl("Specification",FunType([ConstType(Op("List",[Var("Decl")]))],ConstType(Var("Module"))))])]),Signature([Constructors([OpDecl("Script",FunType([ConstType(Op("List",[Var("Command")]))],ConstType(Var("Script")))),OpDecl("Command",FunType([ConstType(Var("Decl"))],ConstType(Var("Command")))),OpDecl("Dump",FunType([ConstType(Var("String"))],ConstType(Var("Command")))),OpDecl("Load",FunType([ConstType(Var("String"))],ConstType(Var("Command")))),OpDecl("Eval",FunType([ConstType(Var("Strategy"))],ConstType(Var("Command"))))])]),Signature([Constructors([OpDecl("Imports",FunType([ConstType(Op("List",[Var("ModName")]))],ConstType(Var("Decl")))),OpDecl("Rules",FunType([ConstType(Op("List",[Var("Def")]))],ConstType(Var("Decl")))),OpDecl("Strategies",FunType([ConstType(Op("List",[Var("Def")]))],ConstType(Var("Decl")))),OpDecl("Signature",FunType([ConstType(Op("List",[Var("Sdecl")]))],ConstType(Var("Decl")))),OpDecl("Overlays",FunType([ConstType(Op("List",[Var("Overlay")]))],ConstType(Var("Decl"))))])]),Signature([Constructors([OpDecl("Sorts",FunType([ConstType(Op("List",[Var("Sort")]))],ConstType(Var("Sdecl")))),OpDecl("Constructors",FunType([ConstType(Op("List",[Var("Opdecl")]))],ConstType(Var("Sdecl"))))])]),Signature([Constructors([OpDecl("SortNoArgs",FunType([ConstType(Var("Id"))],ConstType(Var("Sort")))),OpDecl("Sort",FunType([ConstType(Var("Id")),ConstType(Op("List",[Var("Term")]))],ConstType(Var("Sort"))))])]),Signature([Constructors([OpDecl("Star",ConstType(Var("Kind"))),OpDecl("StarStar",ConstType(Var("Kind")))])]),Signature([Constructors([OpDecl("OpDecl",FunType([ConstType(Var("Id")),ConstType(Var("Type"))],ConstType(Var("Opdecl"))))])]),Signature([Constructors([OpDecl("ConstType",FunType([ConstType(Var("Term"))],ConstType(Var("Type")))),OpDecl("FunType",FunType([ConstType(Op("List",[Var("Type")])),ConstType(Var("Type"))],ConstType(Var("Type"))))])]),Signature([Constructors([OpDecl("Var",FunType([ConstType(Var("Id"))],ConstType(Var("Var")))),OpDecl("ListVar",FunType([ConstType(Var("LId"))],ConstType(Var("LID")))),OpDecl("Var",FunType([ConstType(Var("LID"))],ConstType(Var("Var"))))])]),Signature([Constructors([OpDecl("Wld",ConstType(Var("Term"))),OpDecl("Int",FunType([ConstType(Var("Int"))],ConstType(Var("Term")))),OpDecl("Real",FunType([ConstType(Var("Real"))],ConstType(Var("Term")))),OpDecl("Str",FunType([ConstType(Var("String"))],ConstType(Var("Term")))),OpDecl("BuildDefault",FunType([ConstType(Var("Term"))],ConstType(Var("Term")))),OpDecl("Con",FunType([ConstType(Var("Var")),ConstType(Var("Context"))],ConstType(Var("Term")))),OpDecl("Op",FunType([ConstType(Var("Id")),ConstType(Op("List",[Var("Term")]))],ConstType(Var("Term")))),OpDecl("As",FunType([ConstType(Var("Var")),ConstType(Var("Term"))],ConstType(Var("Term")))),OpDecl("Tuple",FunType([ConstType(Op("List",[Var("Term")]))],ConstType(Var("Term")))),OpDecl("App",FunType([ConstType(Var("Strategy")),ConstType(Var("Term"))],ConstType(Var("Term")))),OpDecl("List",FunType([ConstType(Op("List",[Var("Term")]))],ConstType(Var("Term")))),OpDecl("ListTail",FunType([ConstType(Op("List",[Var("Term")])),ConstType(Var("Term"))],ConstType(Var("Term")))),OpDecl("Explode",FunType([ConstType(Var("Term")),ConstType(Var("Term"))],ConstType(Var("Term")))),OpDecl("RootApp",FunType([ConstType(Var("StrategyAngle"))],ConstType(Var("Term")))),OpDecl("Anno",FunType([ConstType(Var("Term")),ConstType(Var("Term"))],ConstType(Var("Term"))))])]),Signature([Constructors([OpDecl("Con1",FunType([ConstType(Var("Term"))],ConstType(Var("Context")))),OpDecl("Con2",FunType([ConstType(Var("Term")),ConstType(Var("Id"))],ConstType(Var("Context")))),OpDecl("Con3",FunType([ConstType(Var("Term")),ConstType(Var("Strategy"))],ConstType(Var("Context")))),OpDecl("Con4",FunType([ConstType(Var("Term")),ConstType(Var("Strategy")),ConstType(Var("Id"))],ConstType(Var("Context"))))])]),Signature([Constructors([OpDecl("RDefNoArgs",FunType([ConstType(Var("Id")),ConstType(Var("Rule"))],ConstType(Var("RuleDef")))),OpDecl("RDef",FunType([ConstType(Var("Id")),ConstType(Op("List",[Var("Typedid")])),ConstType(Var("Rule"))],ConstType(Var("RuleDef"))))])]),Signature([Constructors([OpDecl("SRDefNoArgs",FunType([ConstType(Var("Id")),ConstType(Var("StratRule"))],ConstType(Var("RuleDef")))),OpDecl("SRDef",FunType([ConstType(Var("Id")),ConstType(Op("List",[Var("Typedid")])),ConstType(Var("StratRule"))],ConstType(Var("RuleDef"))))])]),Signature([Constructors([OpDecl("RuleNoCond",FunType([ConstType(Var("Term")),ConstType(Var("Term"))],ConstType(Var("Rule")))),OpDecl("Rule",FunType([ConstType(Var("Term")),ConstType(Var("Term")),ConstType(Var("Strategy"))],ConstType(Var("Rule"))))])]),Signature([Constructors([OpDecl("StratRuleNoCond",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("StratRule")))),OpDecl("StratRule",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("StratRule"))))])]),Signature([Constructors([OpDecl("Fail",ConstType(Var("Strategy"))),OpDecl("Id",ConstType(Var("Strategy"))),OpDecl("SVar",FunType([ConstType(Var("Id"))],ConstType(Var("SVar")))),OpDecl("Let",FunType([ConstType(Op("List",[Op("Either",[Var("StrategyDef"),Var("RuleDef")])])),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("CallNoArgs",FunType([ConstType(Var("SVar"))],ConstType(Var("Strategy")))),OpDecl("Call",FunType([ConstType(Var("SVar")),ConstType(Op("List",[Var("Strategy")]))],ConstType(Var("Strategy")))),OpDecl("Match",FunType([ConstType(Var("Term"))],ConstType(Var("Strategy")))),OpDecl("Build",FunType([ConstType(Var("Term"))],ConstType(Var("Strategy")))),OpDecl("ScopeDefault",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Scope",FunType([ConstType(Op("List",[Var("ID")])),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("BA",FunType([ConstType(Var("StrategyAngle")),ConstType(Var("Term"))],ConstType(Var("Strategy")))),OpDecl("AM",FunType([ConstType(Var("Strategy")),ConstType(Var("Term"))],ConstType(Var("Strategy")))),OpDecl("ParenStrat",FunType([ConstType(Var("Strategy"))],ConstType(Var("StrategyParen")))),OpDecl("LRule",FunType([ConstType(Var("Rule"))],ConstType(Var("Strategy")))),OpDecl("Seq",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Choice",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("LChoice",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("RChoice",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("GChoice",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("LGChoice",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("RGChoice",FunType([ConstType(Var("Strategy")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("GuardedLChoice",FunType([ConstType(Var("Strategy")),ConstType(Var("StrategyMid")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Rec",FunType([ConstType(Var("Id")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Not",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Where",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Test",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Bagof",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy"))))])]),Signature([Constructors([OpDecl("PrimNoArgs",FunType([ConstType(Var("String"))],ConstType(Var("Strategy")))),OpDecl("Prim",FunType([ConstType(Var("String")),ConstType(Op("List",[Var("Term")]))],ConstType(Var("Strategy")))),OpDecl("Path",FunType([ConstType(Var("Int")),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Some",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("One",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("All",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("Thread",FunType([ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("StrCong",FunType([ConstType(Var("String"))],ConstType(Var("Strategy")))),OpDecl("IntCong",FunType([ConstType(Var("Int"))],ConstType(Var("Strategy")))),OpDecl("RealCong",FunType([ConstType(Var("Real"))],ConstType(Var("Strategy")))),OpDecl("TupleCong",ConstType(Var("Strategy"))),OpDecl("TupleCong",FunType([ConstType(Var("Strategy")),ConstType(Op("List",[Var("Strategy")]))],ConstType(Var("Strategy")))),OpDecl("ModCongNoArgs",FunType([ConstType(Var("Mod"))],ConstType(Var("Strategy")))),OpDecl("ModCong",FunType([ConstType(Var("Mod")),ConstType(Op("List",[Var("Strategy")]))],ConstType(Var("Strategy")))),OpDecl("Mod",FunType([ConstType(Var("Id")),ConstType(Var("Id"))],ConstType(Var("Mod")))),OpDecl("ListCongNoTail",FunType([ConstType(Op("List",[Var("Strategy")]))],ConstType(Var("Strategy")))),OpDecl("ListCong",FunType([ConstType(Op("List",[Var("Strategy")])),ConstType(Var("Strategy"))],ConstType(Var("Strategy")))),OpDecl("ExplodeCong",FunType([ConstType(Var("Strategy")),ConstType(Var("StrategyParen"))],ConstType(Var("Strategy")))),OpDecl("DynamicRules",FunType([ConstType(Op("List",[Var("RuleDef")]))],ConstType(Var("Strategy")))),OpDecl("OverrideDynamicRules",FunType([ConstType(Op("List",[Var("RuleDef")]))],ConstType(Var("Strategy")))),OpDecl("DynRuleScope",FunType([ConstType(Op("List",[Var("Id")])),ConstType(Var("Strategy"))],ConstType(Var("Strategy"))))])]),Signature([Constructors([OpDecl("SDefNoArgs",FunType([ConstType(Var("Id")),ConstType(Var("Strategy"))],ConstType(Var("StrategyDef")))),OpDecl("SDef",FunType([ConstType(Var("Id")),ConstType(Op("List",[Var("Typedid")])),ConstType(Var("Strategy"))],ConstType(Var("StrategyDef"))))])]),Signature([Constructors([OpDecl("DefaultVarDec",FunType([ConstType(Var("Id"))],ConstType(Var("Typedid")))),OpDecl("VarDec",FunType([ConstType(Var("Id")),ConstType(Var("Type"))],ConstType(Var("Typedid"))))])]),Signature([Constructors([OpDecl("OverlayNoArgs",FunType([ConstType(Var("Id")),ConstType(Var("Term"))],ConstType(Var("Overlay")))),OpDecl("Overlay",FunType([ConstType(Var("Id")),ConstType(Op("List",[Var("Id")])),ConstType(Var("Term"))],ConstType(Var("Overlay"))))])])])