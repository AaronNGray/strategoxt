
regular tree grammar
  start Strategy Module
  productions
    ListStarOfSdecl_0     -> ListPlusOfSdecl_0
    ListStarOfSdecl_0     -> <nil>()
    ListStarOfSdecl_0     -> <conc>(ListStarOfSdecl_0,ListStarOfSdecl_0)
    ListPlusOfSdecl_0     -> <conc>(ListStarOfSdecl_0,ListPlusOfSdecl_0)
    ListPlusOfSdecl_0     -> <conc>(ListPlusOfSdecl_0,ListStarOfSdecl_0)
    ListPlusOfSdecl_0     -> <conc>(ListPlusOfSdecl_0,ListPlusOfSdecl_0)
    ListPlusOfSdecl_0     -> <cons>(Sdecl,ListStarOfSdecl_0)
    ListStarOfDef_0       -> ListPlusOfDef_0
    ListStarOfDef_0       -> <nil>()
    ListStarOfDef_0       -> <conc>(ListStarOfDef_0,ListStarOfDef_0)
    ListPlusOfDef_0       -> <conc>(ListStarOfDef_0,ListPlusOfDef_0)
    ListPlusOfDef_0       -> <conc>(ListPlusOfDef_0,ListStarOfDef_0)
    ListPlusOfDef_0       -> <conc>(ListPlusOfDef_0,ListPlusOfDef_0)
    ListPlusOfDef_0       -> <cons>(Def,ListStarOfDef_0)
    ListStarOfModName_0   -> ListPlusOfModName_0
    ListStarOfModName_0   -> <nil>()
    ListStarOfModName_0   -> <conc>(ListStarOfModName_0,ListStarOfModName_0)
    ListPlusOfModName_0   -> <conc>(ListStarOfModName_0,ListPlusOfModName_0)
    ListPlusOfModName_0   -> <conc>(ListPlusOfModName_0,ListStarOfModName_0)
    ListPlusOfModName_0   -> <conc>(ListPlusOfModName_0,ListPlusOfModName_0)
    ListPlusOfModName_0   -> <cons>(ModName,ListStarOfModName_0)
    ListStarOfDecl_0      -> ListPlusOfDecl_0
    ListStarOfDecl_0      -> <nil>()
    ListStarOfDecl_0      -> <conc>(ListStarOfDecl_0,ListStarOfDecl_0)
    ListPlusOfDecl_0      -> <conc>(ListStarOfDecl_0,ListPlusOfDecl_0)
    ListPlusOfDecl_0      -> <conc>(ListPlusOfDecl_0,ListStarOfDecl_0)
    ListPlusOfDecl_0      -> <conc>(ListPlusOfDecl_0,ListPlusOfDecl_0)
    ListPlusOfDecl_0      -> <cons>(Decl,ListStarOfDecl_0)
    ListStarOfTerm_0      -> ListPlusOfTerm_0
    ListStarOfTerm_0      -> <nil>()
    ListStarOfTerm_0      -> <conc>(ListStarOfTerm_0,ListStarOfTerm_0)
    ListPlusOfTerm_0      -> <conc>(ListStarOfTerm_0,ListPlusOfTerm_0)
    ListPlusOfTerm_0      -> <conc>(ListPlusOfTerm_0,ListStarOfTerm_0)
    ListPlusOfTerm_0      -> <conc>(ListPlusOfTerm_0,ListPlusOfTerm_0)
    ListPlusOfTerm_0      -> <cons>(Term,ListStarOfTerm_0)
    ListStarOfStrategy_0  -> ListPlusOfStrategy_0
    ListStarOfStrategy_0  -> <nil>()
    ListStarOfStrategy_0  -> <conc>(ListStarOfStrategy_0,ListStarOfStrategy_0)
    ListPlusOfStrategy_0  -> <conc>(ListStarOfStrategy_0,ListPlusOfStrategy_0)
    ListPlusOfStrategy_0  -> <conc>(ListPlusOfStrategy_0,ListStarOfStrategy_0)
    ListPlusOfStrategy_0  -> <conc>(ListPlusOfStrategy_0,ListPlusOfStrategy_0)
    ListPlusOfStrategy_0  -> <cons>(Strategy,ListStarOfStrategy_0)
    ListStarOfID_0        -> ListPlusOfID_0
    ListStarOfID_0        -> <nil>()
    ListStarOfID_0        -> <conc>(ListStarOfID_0,ListStarOfID_0)
    ListPlusOfID_0        -> <conc>(ListStarOfID_0,ListPlusOfID_0)
    ListPlusOfID_0        -> <conc>(ListPlusOfID_0,ListStarOfID_0)
    ListPlusOfID_0        -> <conc>(ListPlusOfID_0,ListPlusOfID_0)
    ListPlusOfID_0        -> <cons>(ID,ListStarOfID_0)
    ListStarOfTypedid_0   -> ListPlusOfTypedid_0
    ListStarOfTypedid_0   -> <nil>()
    ListStarOfTypedid_0   -> <conc>(ListStarOfTypedid_0,ListStarOfTypedid_0)
    ListPlusOfTypedid_0   -> <conc>(ListStarOfTypedid_0,ListPlusOfTypedid_0)
    ListPlusOfTypedid_0   -> <conc>(ListPlusOfTypedid_0,ListStarOfTypedid_0)
    ListPlusOfTypedid_0   -> <conc>(ListPlusOfTypedid_0,ListPlusOfTypedid_0)
    ListPlusOfTypedid_0   -> <cons>(Typedid,ListStarOfTypedid_0)
    ListStarOfType_0      -> ListPlusOfType_0
    ListStarOfType_0      -> <nil>()
    ListStarOfType_0      -> <conc>(ListStarOfType_0,ListStarOfType_0)
    ListPlusOfType_0      -> <conc>(ListStarOfType_0,ListPlusOfType_0)
    ListPlusOfType_0      -> <conc>(ListPlusOfType_0,ListStarOfType_0)
    ListPlusOfType_0      -> <conc>(ListPlusOfType_0,ListPlusOfType_0)
    ListPlusOfType_0      -> <cons>(Type,ListStarOfType_0)
    ListStarOfSort_0      -> ListPlusOfSort_0
    ListStarOfSort_0      -> <nil>()
    ListStarOfSort_0      -> <conc>(ListStarOfSort_0,ListStarOfSort_0)
    ListPlusOfSort_0      -> <conc>(ListStarOfSort_0,ListPlusOfSort_0)
    ListPlusOfSort_0      -> <conc>(ListPlusOfSort_0,ListStarOfSort_0)
    ListPlusOfSort_0      -> <conc>(ListPlusOfSort_0,ListPlusOfSort_0)
    ListPlusOfSort_0      -> <cons>(Sort,ListStarOfSort_0)
    ListStarOfOpdecl_0    -> ListPlusOfOpdecl_0
    ListStarOfOpdecl_0    -> <nil>()
    ListStarOfOpdecl_0    -> <conc>(ListStarOfOpdecl_0,ListStarOfOpdecl_0)
    ListPlusOfOpdecl_0    -> <conc>(ListStarOfOpdecl_0,ListPlusOfOpdecl_0)
    ListPlusOfOpdecl_0    -> <conc>(ListPlusOfOpdecl_0,ListStarOfOpdecl_0)
    ListPlusOfOpdecl_0    -> <conc>(ListPlusOfOpdecl_0,ListPlusOfOpdecl_0)
    ListPlusOfOpdecl_0    -> <cons>(Opdecl,ListStarOfOpdecl_0)
    ListStarOfSort_1      -> ListPlusOfSort_1
    ListStarOfSort_1      -> <nil>()
    ListStarOfSort_1      -> <conc>(ListStarOfSort_1,ListStarOfSort_1)
    ListPlusOfSort_1      -> <conc>(ListStarOfSort_1,ListPlusOfSort_1)
    ListPlusOfSort_1      -> <conc>(ListPlusOfSort_1,ListStarOfSort_1)
    ListPlusOfSort_1      -> <conc>(ListPlusOfSort_1,ListPlusOfSort_1)
    ListPlusOfSort_1      -> <cons>(Sort,ListStarOfSort_1)
    ListStarOfCommChar2_0 -> <string>
    ListPlusOfCommChar2_0 -> <string>
    ListStarOfCommChar1_0 -> <string>
    ListPlusOfCommChar1_0 -> <string>
    ListStarOfStrChar_0   -> <string>
    ListPlusOfStrChar_0   -> <string>
    Decl                  -> Signature(ListStarOfSdecl_0)
    Decl                  -> Strategies(ListStarOfDef_0)
    Decl                  -> Imports(ListStarOfModName_0)
    Module                -> Specification(ListStarOfDecl_0)
    Module                -> Module(ModName,ListStarOfDecl_0)
    Strategy              -> Thread(Strategy)
    Strategy              -> All(Strategy)
    Strategy              -> One(Strategy)
    Strategy              -> Some(Strategy)
    Strategy              -> Path(Int,Strategy)
    Strategy              -> PrimT(String,ListStarOfStrategy_0,ListStarOfTerm_0)
    Strategy              -> Bagof(Strategy)
    StrategyMid           -> Strategy
    Strategy              -> GuardedLChoice(Strategy,StrategyMid,Strategy)
    Strategy              -> LGChoice(Strategy,Strategy)
    Strategy              -> Seq(Strategy,Strategy)
    Strategy              -> Scope(ListStarOfID_0,Strategy)
    Strategy              -> Build(Term)
    Strategy              -> Match(Term)
    Strategy              -> Id()
    Strategy              -> Fail()
    StrategyParen         -> ParenStrat(Strategy)
    Typedid               -> VarDec(ID,Type)
    StrategyDef           -> ExtSDef(Id,ListStarOfTypedid_0,ListStarOfTypedid_0)
    StrategyDef           -> ExtSDefInl(Id,ListStarOfTypedid_0,ListStarOfTypedid_0,Strategy)
    StrategyDef           -> SDefT(Id,ListStarOfTypedid_0,ListStarOfTypedid_0,Strategy)
    Strategy              -> CallT(SVar,ListStarOfStrategy_0,ListStarOfTerm_0)
    Strategy              -> Let(ListStarOfDef_0,Strategy)
    SVar                  -> SVar(Id)
    Def                   -> StrategyDef
    Term                  -> As(Var,Term)
    Term                  -> Anno(PreTerm,PreTerm)
    PreTerm               -> Explode(Term,Term)
    PreTerm               -> OpQ(String,ListStarOfTerm_0)
    PreTerm               -> Op(Id,ListStarOfTerm_0)
    PreTerm               -> Str(String)
    PreTerm               -> Real(Real)
    PreTerm               -> Int(Int)
    Term                  -> Wld()
    PreTerm               -> Wld()
    Term                  -> Var
    PreTerm               -> Var
    Var                   -> SeqVar(Var)
    ID                    -> Id
    Var                   -> Var(Id)
    Type                  -> FunType(ListPlusOfType_0,Type)
    Type                  -> ConstType(Sort)
    Opdecl                -> OpDeclInj(Type)
    Opdecl                -> OpDeclQ(String,Type)
    Opdecl                -> OpDecl(Id,Type)
    Sort                  -> Sort(Id,ListStarOfSort_0)
    Sort                  -> SortNoArgs(UCID)
    Sort                  -> SortVar(LCID)
    Sdecl                 -> Constructors(ListStarOfOpdecl_0)
    Sdecl                 -> Sorts(ListStarOfSort_1)
    Asterisk2             -> <string>
    Asterisk1             -> <string>
    CommChar2             -> <string>
    CommChar1             -> <string>
    Eof                   -> <string>
    LongCom               -> <string>
    ShortCom              -> <string>
    Ws                    -> <string>
    UCID                  -> <string>
    LCID                  -> <string>
    LId                   -> <string>
    Id                    -> <string>
    ModName               -> <string>
    StrChar               -> <string>
    String                -> <string>
    Real                  -> <string>
    Int                   -> <string>
    Strategy              -> Cong(Id,n_0)
