module Generated
exports
  sorts Start

  context-free syntax
    Strategy -> Start {cons("Strategy")}
    MODULE Id Decl* -> Start {cons("MODULE-Id-Decl-s")}
    STRATEGO SCRIPT Command* -> Start {cons("STRATEGO-SCRIPT-Command-s")}
    LT Strategy GT Term -> Start {cons("LT-Strategy-GT-Term")}

  context-free syntax
    

  context-free syntax
    Decl -> Command {cons("Decl")}
    DUMP STRINGTOK -> Command {cons("DUMP-STRINGTOK")}
    LOAD STRINGTOK -> Command {cons("LOAD-STRINGTOK")}
    GT Strategy -> Command {cons("GT-Strategy")}

  context-free syntax
    

  context-free syntax
    

  context-free syntax
    IMPORTS Id* -> Decl {cons("IMPORTS-Id-s")}
    RULES ( StrategyDef | RuleDef )* -> Decl {cons("RULES-StrategyDef-or-RuleDef-s")}
    STRATEGIES ( StrategyDef | RuleDef )* -> Decl {cons("STRATEGIES-StrategyDef-or-RuleDef-s")}
    SIGNATURE Sdecl* -> Decl {cons("SIGNATURE-Sdecl-s")}
    OVERLAYS Overlay* -> Decl {cons("OVERLAYS-Overlay-s")}

  context-free syntax
    

  context-free syntax
    SORTS ( Id Optkind )* -> Sdecl {cons("SORTS-Id-Optkind-s")}
    CONSTRUCTORS Opdecl* -> Sdecl {cons("CONSTRUCTORS-Opdecl-s")}

  context-free syntax
    

  context-free syntax
    LPAREN {Term COMMA}* RPAREN -> Optkind {cons("LPAREN-Term-COMMA-s-RPAREN")}

  context-free syntax
    

  context-free syntax
    ASTERISK -> Kind {cons("ASTERISK")}
    STARSTAR -> Kind {cons("STARSTAR")}

  context-free syntax
    

  context-free syntax
    Id COLON Type -> Opdecl {cons("Id-COLON-Type")}

  context-free syntax
    Term -> Type {cons("Term")}
    {Type ASTERISK}+ ARROW Type -> Type {cons("Type-ASTERISK-p-ARROW-Type")}
    LPAREN Type RPAREN -> Type {cons("LPAREN-Type-RPAREN")}

  context-free syntax
    

  context-free syntax
    LCID -> Id {cons("LCID")}
    UCID -> Id {cons("UCID")}

  context-free syntax
    UNDERSCORE -> Term {cons("UNDERSCORE")}
    INT -> Term {cons("INT")}
    REAL -> Term {cons("REAL")}
    STRINGTOK -> Term {cons("STRINGTOK")}
    Id Optcont? -> Term {cons("Id-Optcont-opt")}
    UNDERSCORE Term -> Term {cons("UNDERSCORE-Term")}
    Id Opttermlist? -> Term {cons("Id-Opttermlist-opt")}
    Id AS Term -> Term {cons("Id-AS-Term")}
    LPAREN {Term COMMA}* RPAREN -> Term {cons("LPAREN-Term-COMMA-s-RPAREN1")}
    LT Strategy GT Term -> Term {cons("LT-Strategy-GT-Term1")}
    LBRACK {Term COMMA}* Tail? RBRACK -> Term {cons("LBRACK-Term-COMMA-s-Tail-opt-RBRACK")}
    Term EXPLODE LPAREN Term RPAREN -> Term {cons("Term-EXPLODE-LPAREN-Term-RPAREN")}

  context-free syntax
    BAR Term -> Tail {cons("BAR-Term")}

  context-free syntax
    LBRACK Term Optcond? RBRACK Trav? -> Optcont {cons("LBRACK-Term-Optcond-opt-RBRACK-Trav-opt")}

  context-free syntax
    LPAREN Id RPAREN -> Trav {cons("LPAREN-Id-RPAREN")}

  context-free syntax
    LPAREN {Term COMMA}* RPAREN -> Opttermlist {cons("LPAREN-Term-COMMA-s-RPAREN2")}

  context-free syntax
    

  context-free syntax
    

  context-free syntax
    

  context-free syntax
    Id Optvarlist? COLON Rule -> RuleDef {cons("Id-Optvarlist-opt-COLON-Rule")}
    Id Optvarlist? DOUBLECOLON Stratrule -> RuleDef {cons("Id-Optvarlist-opt-DOUBLECOLON-Stratrule")}

  context-free syntax
    Term ARROW Term Optcond? -> Rule {cons("Term-ARROW-Term-Optcond-opt")}

  context-free syntax
    Strategy LONGARROW Strategy Optcond? -> Stratrule {cons("Strategy-LONGARROW-Strategy-Optcond-opt")}

  context-free syntax
    WHERE Strategy -> Optcond {cons("WHERE-Strategy")}

  context-free syntax
    LEFTDOUBLEARROW Strategy -> Optapplication {cons("LEFTDOUBLEARROW-Strategy")}

  context-free syntax
    FAIL -> Strategy {cons("FAIL")}
    SUCC -> Strategy {cons("SUCC")}
    STRINGTOK -> Strategy {cons("STRINGTOK1")}
    INT -> Strategy {cons("INT1")}
    REAL -> Strategy {cons("REAL1")}
    Id Optstrategylist? -> Strategy {cons("Id-Optstrategylist-opt")}
    MATCHe Term -> Strategy {cons("MATCHe-Term")}
    BUILDe Term -> Strategy {cons("BUILDe-Term")}
    INT Strategy -> Strategy {cons("INT-Strategy")}
    BACKSLASH Rule BACKSLASH -> Strategy {cons("BACKSLASH-Rule-BACKSLASH")}
    Strategy DOUBLEARROW Term -> Strategy {cons("Strategy-DOUBLEARROW-Term")}
    LCURLY Strategy RCURLY -> Strategy {cons("LCURLY-Strategy-RCURLY")}
    Strategy SEMICOLON Strategy -> Strategy {cons("Strategy-SEMICOLON-Strategy")}
    Strategy PLUS Strategy -> Strategy {cons("Strategy-PLUS-Strategy")}
    Strategy LTPLUS Strategy -> Strategy {cons("Strategy-LTPLUS-Strategy")}
    LPAREN {Strategy COMMA}* RPAREN -> Strategy {cons("LPAREN-Strategy-COMMA-s-RPAREN")}
    Id MODIFIER Id Optstrategylist? -> Strategy {cons("Id-MODIFIER-Id-Optstrategylist-opt")}
    PRIM LPAREN STRINGTOK RPAREN -> Strategy {cons("PRIM-LPAREN-STRINGTOK-RPAREN")}
    LT Strategy GT Term -> Strategy {cons("LT-Strategy-GT-Term2")}
    RULES LPAREN RuleDef* RPAREN -> Strategy {cons("RULES-LPAREN-RuleDef-s-RPAREN")}
    NOT LPAREN Strategy RPAREN -> Strategy {cons("NOT-LPAREN-Strategy-RPAREN")}
    WHERE LPAREN Strategy RPAREN -> Strategy {cons("WHERE-LPAREN-Strategy-RPAREN")}
    TEST LPAREN Strategy RPAREN -> Strategy {cons("TEST-LPAREN-Strategy-RPAREN")}
    SOMETOK LPAREN Strategy RPAREN -> Strategy {cons("SOMETOK-LPAREN-Strategy-RPAREN")}
    ONE LPAREN Strategy RPAREN -> Strategy {cons("ONE-LPAREN-Strategy-RPAREN")}
    ALL LPAREN Strategy RPAREN -> Strategy {cons("ALL-LPAREN-Strategy-RPAREN")}
    THREAD LPAREN Strategy RPAREN -> Strategy {cons("THREAD-LPAREN-Strategy-RPAREN")}
    LBRACK {Strategy COMMA}* Strategytail? RBRACK -> Strategy {cons("LBRACK-Strategy-COMMA-s-Strategytail-opt-RBRACK")}
    LET ( StrategyDef | RuleDef )* IN Strategy -> Strategy {cons("LET-StrategyDef-or-RuleDef-s-IN-Strategy")}
    Strategy EXPLODE LPAREN Strategy RPAREN -> Strategy {cons("Strategy-EXPLODE-LPAREN-Strategy-RPAREN")}
    OVERRIDE RULES LPAREN RuleDef* RPAREN -> Strategy {cons("OVERRIDE-RULES-LPAREN-RuleDef-s-RPAREN")}
    LCURLY {Id COMMA}* COLON Strategy RCURLY -> Strategy {cons("LCURLY-Id-COMMA-s-COLON-Strategy-RCURLY")}
    LCURLYBAR {Id COMMA}* COLON Strategy BARRCURLY -> Strategy {cons("LCURLYBAR-Id-COMMA-s-COLON-Strategy-BARRCURLY")}
    MU Id LPAREN Strategy RPAREN -> Strategy {cons("MU-Id-LPAREN-Strategy-RPAREN")}
    PRIM LPAREN STRINGTOK COMMA {Term COMMA}* RPAREN -> Strategy {cons("PRIM-LPAREN-STRINGTOK-COMMA-Term-COMMA-s-RPAREN")}

  context-free syntax
    BAR Strategy -> Strategytail {cons("BAR-Strategy")}

  context-free syntax
    LPAREN {Strategy COMMA}* RPAREN -> Optstrategylist {cons("LPAREN-Strategy-COMMA-s-RPAREN1")}

  context-free syntax
    

  context-free syntax
    

  context-free syntax
    Id Optvarlist? EQ Strategy -> StrategyDef {cons("Id-Optvarlist-opt-EQ-Strategy")}

  context-free syntax
    LPAREN {Typedid COMMA}* RPAREN -> Optvarlist {cons("LPAREN-Typedid-COMMA-s-RPAREN")}

  context-free syntax
    

  context-free syntax
    Id -> Typedid {cons("Id")}
    Id COLON Type -> Typedid {cons("Id-COLON-Type1")}

  context-free syntax
    

  context-free syntax
    

  context-free syntax
    Id EQ Term -> Overlay {cons("Id-EQ-Term")}
    Id LPAREN {Id COMMA}* RPAREN EQ Term -> Overlay {cons("Id-LPAREN-Id-COMMA-s-RPAREN-EQ-Term")}
