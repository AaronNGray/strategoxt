module Stratego-Lex
exports
  lexical syntax
    [a-zA-Z\'\.\-\_] [a-zA-Z0-9\'\.\-\_]* -> Id

  lexical restrictions
    Id -/- [a-zA-Z0-9\'\.\-\_]

  lexical syntax
    "all" -> Id {reject}
    "constructors" -> Id {reject}
    "fail" -> Id {reject}
    "id" -> Id {reject}
    "in" -> Id {reject}
    "let" -> Id {reject}
    "module" -> Id {reject}
    "not" -> Id {reject}
    "one" -> Id {reject}
    "overlays" -> Id {reject}
    "override" -> Id {reject}
    "prim" -> Id {reject}
    "rules" -> Id {reject}
    "script" -> Id {reject}
    "signature" -> Id {reject}
    "some" -> Id {reject}
    "sorts" -> Id {reject}
    "strategies" -> Id {reject}
    "stratego" -> Id {reject}
    "test" -> Id {reject}
    "thread" -> Id {reject}
    "where" -> Id {reject}

  lexical syntax
    [a-zA-Z\'\.\-\_] [a-zA-Z0-9\'\.\-\_]* -> ModName

  lexical restrictions
    ModName -/- [a-zA-Z0-9\'\.\-\_]

  lexical syntax
    "imports" -> ModName {reject}
    "overlays" -> ModName {reject}
    "rules" -> ModName {reject}
    "signature" -> ModName {reject}
    "strategies" -> ModName {reject}

  lexical syntax
    [\t\ \n] -> Ws
    "//" ~[\n]* [\n] -> ShortCom
    "/*" CommChar* "*/" -> LongCom
    "(*" CommChar* "*)" -> LongCom
    "*" -> Asterisk
    ~[\*] -> CommChar
    Asterisk -> CommChar
    "\\end{code}" VLCchar* "\\begin{code}" -> VeryLongCom
    "\\begin{code}" -> VeryLongCom
    "\\end{code}" VLCchar* Eof -> VeryLongCom
     -> Eof
    "\\literate" VLCchar* "\\begin{code}" -> VeryLongCom
    ~[\\] -> VLCchar
    Backslash -> VLCchar
    [\\] -> Backslash

  lexical restrictions
    Asterisk -/- [\/\)]
    Backslash -/- [b].[e].[g].[i].[n].[\{].[c].[o].[d].[e].[\}]
    Eof -/- ~[]

  lexical syntax
    ShortCom -> LAYOUT
    LongCom -> LAYOUT
    VeryLongCom -> LAYOUT
    Ws -> LAYOUT

  context-free restrictions
    LAYOUT? -/- [\ \t\n]

  lexical syntax
    [\-]? [0-9]+ -> Int
    [\-]? [0-9]+ [\.] [0-9]+ -> Real

  lexical syntax
    "\"" StrChar* "\"" -> String
    ~[\"\n\\] -> StrChar
    [\\] [\"tn\\] -> StrChar

