module eval-lib-primitives
rules
  EvalPrim :
    App(Prim("SSL_table_create", [ a_0 ]), to) ->
    <prim("SSL_table_create",<EvalTerm> a_0)> to

  EvalPrim :
    App(Prim("SSL_table_destroy", [ b_0 ]), to) ->
    <prim("SSL_table_destroy",<EvalTerm> b_0)> to

  EvalPrim :
    App(Prim("SSL_table_put", [ c_0 , d_0 , e_0 ]), to) ->
    <prim("SSL_table_put",<EvalTerm> c_0,<EvalTerm> d_0,<EvalTerm> e_0)> to

  EvalPrim :
    App(Prim("SSL_table_get", [ f_0 , g_0 ]), to) ->
    <prim("SSL_table_get",<EvalTerm> f_0,<EvalTerm> g_0)> to

  EvalPrim :
    App(Prim("SSL_table_remove", [ h_0 , i_0 ]), to) ->
    <prim("SSL_table_remove",<EvalTerm> h_0,<EvalTerm> i_0)> to

  EvalPrim :
    App(Prim("SSL_table_keys", [ j_0 ]), to) ->
    <prim("SSL_table_keys",<EvalTerm> j_0)> to

  EvalPrim :
    App(Prim("SSL_table_rename", [ k_0 , l_0 ]), to) ->
    <prim("SSL_table_rename",<EvalTerm> k_0,<EvalTerm> l_0)> to

  EvalPrim :
    App(Prim("SSL_time", [ ]), to) ->
    <prim("SSL_time",)> to

  EvalPrim :
    App(Prim("SSL_now_epoch_time", [ ]), to) ->
    <prim("SSL_now_epoch_time",)> to

  EvalPrim :
    App(Prim("SSL_epoch2localtime", [ m_0 ]), to) ->
    <prim("SSL_epoch2localtime",<EvalTerm> m_0)> to

  EvalPrim :
    App(Prim("SSL_epoch2UTC", [ n_0 ]), to) ->
    <prim("SSL_epoch2UTC",<EvalTerm> n_0)> to

  EvalPrim :
    App(Prim("SSL_epoch2UTC", [ o_0 ]), to) ->
    <prim("SSL_epoch2UTC",<EvalTerm> o_0)> to

  EvalPrim :
    App(Prim("SSL_dtime", [ ]), to) ->
    <prim("SSL_dtime",)> to

  EvalPrim :
    App(Prim("SSL_ClockToSeconds", [ p_0 ]), to) ->
    <prim("SSL_ClockToSeconds",<EvalTerm> p_0)> to

  EvalPrim :
    App(Prim("SSL_clock", [ ]), to) ->
    <prim("SSL_clock",)> to

  EvalPrim :
    App(Prim("SSL_times", [ ]), to) ->
    <prim("SSL_times",)> to

  EvalPrim :
    App(Prim("SSL_TicksToSeconds", [ q_0 ]), to) ->
    <prim("SSL_TicksToSeconds",<EvalTerm> q_0)> to

  EvalPrim :
    App(Prim("SSL_get_pid", [ ]), to) ->
    <prim("SSL_get_pid",)> to

  EvalPrim :
    App(Prim("SSL_fork", [ ]), to) ->
    <prim("SSL_fork",)> to

  EvalPrim :
    App(Prim("SSL_execvp", [ r_0 , s_0 ]), to) ->
    <prim("SSL_execvp",<EvalTerm> r_0,<EvalTerm> s_0)> to

  EvalPrim :
    App(Prim("SSL_execv", [ t_0 , u_0 ]), to) ->
    <prim("SSL_execv",<EvalTerm> t_0,<EvalTerm> u_0)> to

  EvalPrim :
    App(Prim("SSL_waitpid", [ v_0 ]), to) ->
    <prim("SSL_waitpid",<EvalTerm> v_0)> to

  EvalPrim :
    App(Prim("SSL_exit", [ w_0 ]), to) ->
    <prim("SSL_exit",<EvalTerm> w_0)> to

  EvalPrim :
    App(Prim("SSL_kill", [ x_0 , y_0 ]), to) ->
    <prim("SSL_kill",<EvalTerm> x_0,<EvalTerm> y_0)> to

  EvalPrim :
    App(Prim("SSL_pipe_term_to_child", [ z_0 , a_1 , b_1 ]), to) ->
    <prim("SSL_pipe_term_to_child",<EvalTerm> z_0,<EvalTerm> a_1,<EvalTerm> b_1)> to

  EvalPrim :
    App(Prim("SSL_printascii", [ c_1 , d_1 ]), to) ->
    <prim("SSL_printascii",<EvalTerm> c_1,<EvalTerm> d_1)> to

  EvalPrim :
    App(Prim("SSL_getchar", [ e_1 ]), to) ->
    <prim("SSL_getchar",<EvalTerm> e_1)> to

  EvalPrim :
    App(Prim("SSL_get_errno", [ ]), to) ->
    <prim("SSL_get_errno",)> to

  EvalPrim :
    App(Prim("SSL_perror", [ f_1 ]), to) ->
    <prim("SSL_perror",<EvalTerm> f_1)> to

  EvalPrim :
    App(Prim("SSL_strerror", [ g_1 ]), to) ->
    <prim("SSL_strerror",<EvalTerm> g_1)> to

  EvalPrim :
    App(Prim("SSL_EXDEV", [ ]), to) ->
    <prim("SSL_EXDEV",)> to

  EvalPrim :
    App(Prim("SSL_readdir", [ h_1 ]), to) ->
    <prim("SSL_readdir",<EvalTerm> h_1)> to

  EvalPrim :
    App(Prim("SSL_modification_time", [ i_1 ]), to) ->
    <prim("SSL_modification_time",<EvalTerm> i_1)> to

  EvalPrim :
    App(Prim("SSL_rename", [ j_1 , k_1 ]), to) ->
    <prim("SSL_rename",<EvalTerm> j_1,<EvalTerm> k_1)> to

  EvalPrim :
    App(Prim("SSL_copy", [ l_1 , m_1 ]), to) ->
    <prim("SSL_copy",<EvalTerm> l_1,<EvalTerm> m_1)> to

  EvalPrim :
    App(Prim("SSL_fdcopy", [ n_1 , o_1 ]), to) ->
    <prim("SSL_fdcopy",<EvalTerm> n_1,<EvalTerm> o_1)> to

  EvalPrim :
    App(Prim("SSL_link", [ p_1 , q_1 ]), to) ->
    <prim("SSL_link",<EvalTerm> p_1,<EvalTerm> q_1)> to

  EvalPrim :
    App(Prim("SSL_remove", [ r_1 ]), to) ->
    <prim("SSL_remove",<EvalTerm> r_1)> to

  EvalPrim :
    App(Prim("SSL_getenv", [ s_1 ]), to) ->
    <prim("SSL_getenv",<EvalTerm> s_1)> to

  EvalPrim :
    App(Prim("SSL_setenv", [ t_1 , u_1 , v_1 ]), to) ->
    <prim("SSL_setenv",<EvalTerm> t_1,<EvalTerm> u_1,<EvalTerm> v_1)> to

  EvalPrim :
    App(Prim("SSL_is_real", [ w_1 ]), to) ->
    <prim("SSL_is_real",<EvalTerm> w_1)> to

  EvalPrim :
    App(Prim("SSL_cos", [ x_1 ]), to) ->
    <prim("SSL_cos",<EvalTerm> x_1)> to

  EvalPrim :
    App(Prim("SSL_sin", [ y_1 ]), to) ->
    <prim("SSL_sin",<EvalTerm> y_1)> to

  EvalPrim :
    App(Prim("SSL_sqrt", [ z_1 ]), to) ->
    <prim("SSL_sqrt",<EvalTerm> z_1)> to

  EvalPrim :
    App(Prim("SSL_atan2", [ a_2 , b_2 ]), to) ->
    <prim("SSL_atan2",<EvalTerm> a_2,<EvalTerm> b_2)> to

  EvalPrim :
    App(Prim("SSL_real_to_string", [ c_2 ]), to) ->
    <prim("SSL_real_to_string",<EvalTerm> c_2)> to

  EvalPrim :
    App(Prim("SSL_string_to_real", [ d_2 ]), to) ->
    <prim("SSL_string_to_real",<EvalTerm> d_2)> to

  EvalPrim :
    App(Prim("SSL_real", [ e_2 ]), to) ->
    <prim("SSL_real",<EvalTerm> e_2)> to

  EvalPrim :
    App(Prim("SSL_is_int", [ f_2 ]), to) ->
    <prim("SSL_is_int",<EvalTerm> f_2)> to

  EvalPrim :
    App(Prim("SSL_addi", [ g_2 , h_2 ]), to) ->
    <prim("SSL_addi",<EvalTerm> g_2,<EvalTerm> h_2)> to

  EvalPrim :
    App(Prim("SSL_addr", [ i_2 , j_2 ]), to) ->
    <prim("SSL_addr",<EvalTerm> i_2,<EvalTerm> j_2)> to

  EvalPrim :
    App(Prim("SSL_addi", [ k_2 , l_2 ]), to) ->
    <prim("SSL_addi",<EvalTerm> k_2,<EvalTerm> l_2)> to

  EvalPrim :
    App(Prim("SSL_addr", [ m_2 , n_2 ]), to) ->
    <prim("SSL_addr",<EvalTerm> m_2,<EvalTerm> n_2)> to

  EvalPrim :
    App(Prim("SSL_subti", [ o_2 , p_2 ]), to) ->
    <prim("SSL_subti",<EvalTerm> o_2,<EvalTerm> p_2)> to

  EvalPrim :
    App(Prim("SSL_subtr", [ q_2 , r_2 ]), to) ->
    <prim("SSL_subtr",<EvalTerm> q_2,<EvalTerm> r_2)> to

  EvalPrim :
    App(Prim("SSL_subti", [ s_2 , t_2 ]), to) ->
    <prim("SSL_subti",<EvalTerm> s_2,<EvalTerm> t_2)> to

  EvalPrim :
    App(Prim("SSL_subtr", [ u_2 , v_2 ]), to) ->
    <prim("SSL_subtr",<EvalTerm> u_2,<EvalTerm> v_2)> to

  EvalPrim :
    App(Prim("SSL_muli", [ w_2 , x_2 ]), to) ->
    <prim("SSL_muli",<EvalTerm> w_2,<EvalTerm> x_2)> to

  EvalPrim :
    App(Prim("SSL_mulr", [ y_2 , z_2 ]), to) ->
    <prim("SSL_mulr",<EvalTerm> y_2,<EvalTerm> z_2)> to

  EvalPrim :
    App(Prim("SSL_muli", [ a_3 , b_3 ]), to) ->
    <prim("SSL_muli",<EvalTerm> a_3,<EvalTerm> b_3)> to

  EvalPrim :
    App(Prim("SSL_mulr", [ c_3 , d_3 ]), to) ->
    <prim("SSL_mulr",<EvalTerm> c_3,<EvalTerm> d_3)> to

  EvalPrim :
    App(Prim("SSL_divi", [ e_3 , f_3 ]), to) ->
    <prim("SSL_divi",<EvalTerm> e_3,<EvalTerm> f_3)> to

  EvalPrim :
    App(Prim("SSL_divr", [ g_3 , h_3 ]), to) ->
    <prim("SSL_divr",<EvalTerm> g_3,<EvalTerm> h_3)> to

  EvalPrim :
    App(Prim("SSL_divi", [ i_3 , j_3 ]), to) ->
    <prim("SSL_divi",<EvalTerm> i_3,<EvalTerm> j_3)> to

  EvalPrim :
    App(Prim("SSL_divr", [ k_3 , l_3 ]), to) ->
    <prim("SSL_divr",<EvalTerm> k_3,<EvalTerm> l_3)> to

  EvalPrim :
    App(Prim("SSL_mod", [ m_3 , n_3 ]), to) ->
    <prim("SSL_mod",<EvalTerm> m_3,<EvalTerm> n_3)> to

  EvalPrim :
    App(Prim("SSL_gti", [ o_3 , p_3 ]), to) ->
    <prim("SSL_gti",<EvalTerm> o_3,<EvalTerm> p_3)> to

  EvalPrim :
    App(Prim("SSL_gtr", [ q_3 , r_3 ]), to) ->
    <prim("SSL_gtr",<EvalTerm> q_3,<EvalTerm> r_3)> to

  EvalPrim :
    App(Prim("SSL_gti", [ s_3 , t_3 ]), to) ->
    <prim("SSL_gti",<EvalTerm> s_3,<EvalTerm> t_3)> to

  EvalPrim :
    App(Prim("SSL_gtr", [ u_3 , v_3 ]), to) ->
    <prim("SSL_gtr",<EvalTerm> u_3,<EvalTerm> v_3)> to

  EvalPrim :
    App(Prim("SSL_int", [ w_3 ]), to) ->
    <prim("SSL_int",<EvalTerm> w_3)> to

  EvalPrim :
    App(Prim("SSL_int_to_string", [ x_3 ]), to) ->
    <prim("SSL_int_to_string",<EvalTerm> x_3)> to

  EvalPrim :
    App(Prim("SSL_string_to_int", [ y_3 ]), to) ->
    <prim("SSL_string_to_int",<EvalTerm> y_3)> to

  EvalPrim :
    App(Prim("SSL_srand", [ z_3 ]), to) ->
    <prim("SSL_srand",<EvalTerm> z_3)> to

  EvalPrim :
    App(Prim("SSL_RAND_MAX", [ ]), to) ->
    <prim("SSL_RAND_MAX",)> to

  EvalPrim :
    App(Prim("SSL_rand", [ ]), to) ->
    <prim("SSL_rand",)> to

  EvalPrim :
    App(Prim("SSLgetAnnotations", [ a_4 ]), to) ->
    <prim("SSLgetAnnotations",<EvalTerm> a_4)> to

  EvalPrim :
    App(Prim("SSLsetAnnotations", [ b_4 , c_4 ]), to) ->
    <prim("SSLsetAnnotations",<EvalTerm> b_4,<EvalTerm> c_4)> to

  EvalPrim :
    App(Prim("ATremoveAnnotations", [ d_4 ]), to) ->
    <prim("ATremoveAnnotations",<EvalTerm> d_4)> to

  EvalPrim :
    App(Prim("SSL_mkterm", [ e_4 , f_4 ]), to) ->
    <prim("SSL_mkterm",<EvalTerm> e_4,<EvalTerm> f_4)> to

  EvalPrim :
    App(Prim("SSL_explode_term", [ g_4 ]), to) ->
    <prim("SSL_explode_term",<EvalTerm> g_4)> to

  EvalPrim :
    App(Prim("SSL_address_lt", [ h_4 , i_4 ]), to) ->
    <prim("SSL_address_lt",<EvalTerm> h_4,<EvalTerm> i_4)> to

  EvalPrim :
    App(Prim("SSL_address", [ j_4 ]), to) ->
    <prim("SSL_address",<EvalTerm> j_4)> to

  EvalPrim :
    App(Prim("SSL_stdin_stream", [ ]), to) ->
    <prim("SSL_stdin_stream",)> to

  EvalPrim :
    App(Prim("SSL_stdout_stream", [ ]), to) ->
    <prim("SSL_stdout_stream",)> to

  EvalPrim :
    App(Prim("SSL_stderr_stream", [ ]), to) ->
    <prim("SSL_stderr_stream",)> to

  EvalPrim :
    App(Prim("SSL_fopen", [ k_4 , l_4 ]), to) ->
    <prim("SSL_fopen",<EvalTerm> k_4,<EvalTerm> l_4)> to

  EvalPrim :
    App(Prim("SSL_fclose", [ m_4 ]), to) ->
    <prim("SSL_fclose",<EvalTerm> m_4)> to

  EvalPrim :
    App(Prim("SSL_fclose", [ n_4 ]), to) ->
    <prim("SSL_fclose",<EvalTerm> n_4)> to

  EvalPrim :
    App(Prim("SSL_fflush", [ o_4 ]), to) ->
    <prim("SSL_fflush",<EvalTerm> o_4)> to

  EvalPrim :
    App(Prim("SSL_fflush", [ p_4 ]), to) ->
    <prim("SSL_fflush",<EvalTerm> p_4)> to

  EvalPrim :
    App(Prim("SSL_fputs", [ q_4 , r_4 ]), to) ->
    <prim("SSL_fputs",<EvalTerm> q_4,<EvalTerm> r_4)> to

  EvalPrim :
    App(Prim("SSL_puts", [ s_4 ]), to) ->
    <prim("SSL_puts",<EvalTerm> s_4)> to

  EvalPrim :
    App(Prim("SSL_fputc", [ t_4 , u_4 ]), to) ->
    <prim("SSL_fputc",<EvalTerm> t_4,<EvalTerm> u_4)> to

  EvalPrim :
    App(Prim("SSL_fgetc", [ v_4 ]), to) ->
    <prim("SSL_fgetc",<EvalTerm> v_4)> to

  EvalPrim :
    App(Prim("SSL_STDIN_FILENO", [ ]), to) ->
    <prim("SSL_STDIN_FILENO",)> to

  EvalPrim :
    App(Prim("SSL_STDOUT_FILENO", [ ]), to) ->
    <prim("SSL_STDOUT_FILENO",)> to

  EvalPrim :
    App(Prim("SSL_STDERR_FILENO", [ ]), to) ->
    <prim("SSL_STDERR_FILENO",)> to

  EvalPrim :
    App(Prim("SSL_P_tmpdir", [ ]), to) ->
    <prim("SSL_P_tmpdir",)> to

  EvalPrim :
    App(Prim("SSL_getcwd", [ ]), to) ->
    <prim("SSL_getcwd",)> to

  EvalPrim :
    App(Prim("SSL_creat", [ w_4 ]), to) ->
    <prim("SSL_creat",<EvalTerm> w_4)> to

  EvalPrim :
    App(Prim("SSL_open", [ x_4 ]), to) ->
    <prim("SSL_open",<EvalTerm> x_4)> to

  EvalPrim :
    App(Prim("SSL_mkstemp", [ y_4 ]), to) ->
    <prim("SSL_mkstemp",<EvalTerm> y_4)> to

  EvalPrim :
    App(Prim("SSL_close", [ z_4 ]), to) ->
    <prim("SSL_close",<EvalTerm> z_4)> to

  EvalPrim :
    App(Prim("SSL_dup", [ a_5 ]), to) ->
    <prim("SSL_dup",<EvalTerm> a_5)> to

  EvalPrim :
    App(Prim("SSL_dup2", [ b_5 , c_5 ]), to) ->
    <prim("SSL_dup2",<EvalTerm> b_5,<EvalTerm> c_5)> to

  EvalPrim :
    App(Prim("SSL_access", [ d_5 , e_5 ]), to) ->
    <prim("SSL_access",<EvalTerm> d_5,<EvalTerm> e_5)> to

  EvalPrim :
    App(Prim("SSL_fdopen", [ f_5 , g_5 ]), to) ->
    <prim("SSL_fdopen",<EvalTerm> f_5,<EvalTerm> g_5)> to

  EvalPrim :
    App(Prim("SSL_fileno", [ h_5 ]), to) ->
    <prim("SSL_fileno",<EvalTerm> h_5)> to

  EvalPrim :
    App(Prim("SSL_pipe", [ ]), to) ->
    <prim("SSL_pipe",)> to

  EvalPrim :
    App(Prim("SSL_close_file", [ i_5 ]), to) ->
    <prim("SSL_close_file",<EvalTerm> i_5)> to

  EvalPrim :
    App(Prim("SSL_open_file", [ j_5 , k_5 ]), to) ->
    <prim("SSL_open_file",<EvalTerm> j_5,<EvalTerm> k_5)> to

  EvalPrim :
    App(Prim("SSL_new", [ ]), to) ->
    <prim("SSL_new",)> to

  EvalPrim :
    App(Prim("SSL_is_string", [ l_5 ]), to) ->
    <prim("SSL_is_string",<EvalTerm> l_5)> to

  EvalPrim :
    App(Prim("SSL_implode_string", [ m_5 ]), to) ->
    <prim("SSL_implode_string",<EvalTerm> m_5)> to

  EvalPrim :
    App(Prim("SSL_explode_string", [ n_5 ]), to) ->
    <prim("SSL_explode_string",<EvalTerm> n_5)> to

  EvalPrim :
    App(Prim("SSL_strcat", [ o_5 , p_5 ]), to) ->
    <prim("SSL_strcat",<EvalTerm> o_5,<EvalTerm> p_5)> to

  EvalPrim :
    App(Prim("SSL_concat_strings", [ q_5 ]), to) ->
    <prim("SSL_concat_strings",<EvalTerm> q_5)> to

  EvalPrim :
    App(Prim("SSL_strlen", [ r_5 ]), to) ->
    <prim("SSL_strlen",<EvalTerm> r_5)> to

  EvalPrim :
    App(Prim("SSL_write_term_to_stream_baf", [ s_5 , t_5 ]), to) ->
    <prim("SSL_write_term_to_stream_baf",<EvalTerm> s_5,<EvalTerm> t_5)> to

  EvalPrim :
    App(Prim("SSL_write_term_to_stream_taf", [ u_5 , v_5 ]), to) ->
    <prim("SSL_write_term_to_stream_taf",<EvalTerm> u_5,<EvalTerm> v_5)> to

  EvalPrim :
    App(Prim("SSL_write_term_to_stream_text", [ w_5 , x_5 ]), to) ->
    <prim("SSL_write_term_to_stream_text",<EvalTerm> w_5,<EvalTerm> x_5)> to

  EvalPrim :
    App(Prim("SSL_read_term_from_stream", [ y_5 ]), to) ->
    <prim("SSL_read_term_from_stream",<EvalTerm> y_5)> to

  EvalPrim :
    App(Prim("SSL_print", [ z_5 , a_6 ]), to) ->
    <prim("SSL_print",<EvalTerm> z_5,<EvalTerm> a_6)> to

  EvalPrim :
    App(Prim("SSL_printnl", [ b_6 , c_6 ]), to) ->
    <prim("SSL_printnl",<EvalTerm> b_6,<EvalTerm> c_6)> to

  EvalPrim :
    App(Prim("_cpl_loaded", [ d_6 ]), to) ->
    <prim("_cpl_loaded",<EvalTerm> d_6)> to
