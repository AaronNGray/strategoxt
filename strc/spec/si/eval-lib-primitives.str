module eval-lib-primitives
rules
  EvalPrim :
    App(Prim("SSL_hashtable_create", [ a_0 , b_0 ]), to) ->
    <prim("SSL_hashtable_create",<EvalTerm> a_0,<EvalTerm> b_0)> to

  EvalPrim :
    App(Prim("SSL_hashtable_destroy", [ c_0 ]), to) ->
    <prim("SSL_hashtable_destroy",<EvalTerm> c_0)> to

  EvalPrim :
    App(Prim("SSL_hashtable_put", [ d_0 , e_0 , f_0 ]), to) ->
    <prim("SSL_hashtable_put",<EvalTerm> d_0,<EvalTerm> e_0,<EvalTerm> f_0)> to

  EvalPrim :
    App(Prim("SSL_hashtable_get", [ g_0 , h_0 ]), to) ->
    <prim("SSL_hashtable_get",<EvalTerm> g_0,<EvalTerm> h_0)> to

  EvalPrim :
    App(Prim("SSL_hashtable_remove", [ i_0 , j_0 ]), to) ->
    <prim("SSL_hashtable_remove",<EvalTerm> i_0,<EvalTerm> j_0)> to

  EvalPrim :
    App(Prim("SSL_hashtable_keys", [ k_0 ]), to) ->
    <prim("SSL_hashtable_keys",<EvalTerm> k_0)> to

  EvalPrim :
    App(Prim("SSL_table_create", [ l_0 ]), to) ->
    <prim("SSL_table_create",<EvalTerm> l_0)> to

  EvalPrim :
    App(Prim("SSL_table_destroy", [ m_0 ]), to) ->
    <prim("SSL_table_destroy",<EvalTerm> m_0)> to

  EvalPrim :
    App(Prim("SSL_table_put", [ n_0 , o_0 , p_0 ]), to) ->
    <prim("SSL_table_put",<EvalTerm> n_0,<EvalTerm> o_0,<EvalTerm> p_0)> to

  EvalPrim :
    App(Prim("SSL_table_get", [ q_0 , r_0 ]), to) ->
    <prim("SSL_table_get",<EvalTerm> q_0,<EvalTerm> r_0)> to

  EvalPrim :
    App(Prim("SSL_table_remove", [ s_0 , t_0 ]), to) ->
    <prim("SSL_table_remove",<EvalTerm> s_0,<EvalTerm> t_0)> to

  EvalPrim :
    App(Prim("SSL_table_keys", [ u_0 ]), to) ->
    <prim("SSL_table_keys",<EvalTerm> u_0)> to

  EvalPrim :
    App(Prim("SSL_table_rename", [ v_0 , w_0 ]), to) ->
    <prim("SSL_table_rename",<EvalTerm> v_0,<EvalTerm> w_0)> to

  EvalPrim :
    App(Prim("SSL_time", [ ]), to) ->
    <prim("SSL_time",)> to

  EvalPrim :
    App(Prim("SSL_now_epoch_time", [ ]), to) ->
    <prim("SSL_now_epoch_time",)> to

  EvalPrim :
    App(Prim("SSL_epoch2localtime", [ x_0 ]), to) ->
    <prim("SSL_epoch2localtime",<EvalTerm> x_0)> to

  EvalPrim :
    App(Prim("SSL_epoch2UTC", [ y_0 ]), to) ->
    <prim("SSL_epoch2UTC",<EvalTerm> y_0)> to

  EvalPrim :
    App(Prim("SSL_epoch2UTC", [ z_0 ]), to) ->
    <prim("SSL_epoch2UTC",<EvalTerm> z_0)> to

  EvalPrim :
    App(Prim("SSL_dtime", [ ]), to) ->
    <prim("SSL_dtime",)> to

  EvalPrim :
    App(Prim("SSL_ClockToSeconds", [ a_1 ]), to) ->
    <prim("SSL_ClockToSeconds",<EvalTerm> a_1)> to

  EvalPrim :
    App(Prim("SSL_clock", [ ]), to) ->
    <prim("SSL_clock",)> to

  EvalPrim :
    App(Prim("SSL_times", [ ]), to) ->
    <prim("SSL_times",)> to

  EvalPrim :
    App(Prim("SSL_TicksToSeconds", [ b_1 ]), to) ->
    <prim("SSL_TicksToSeconds",<EvalTerm> b_1)> to

  EvalPrim :
    App(Prim("SSL_get_pid", [ ]), to) ->
    <prim("SSL_get_pid",)> to

  EvalPrim :
    App(Prim("SSL_fork", [ ]), to) ->
    <prim("SSL_fork",)> to

  EvalPrim :
    App(Prim("SSL_execvp", [ c_1 , d_1 ]), to) ->
    <prim("SSL_execvp",<EvalTerm> c_1,<EvalTerm> d_1)> to

  EvalPrim :
    App(Prim("SSL_execv", [ e_1 , f_1 ]), to) ->
    <prim("SSL_execv",<EvalTerm> e_1,<EvalTerm> f_1)> to

  EvalPrim :
    App(Prim("SSL_waitpid", [ g_1 ]), to) ->
    <prim("SSL_waitpid",<EvalTerm> g_1)> to

  EvalPrim :
    App(Prim("SSL_exit", [ h_1 ]), to) ->
    <prim("SSL_exit",<EvalTerm> h_1)> to

  EvalPrim :
    App(Prim("SSL_kill", [ i_1 , j_1 ]), to) ->
    <prim("SSL_kill",<EvalTerm> i_1,<EvalTerm> j_1)> to

  EvalPrim :
    App(Prim("SSL_pipe_term_to_child", [ k_1 , l_1 , m_1 ]), to) ->
    <prim("SSL_pipe_term_to_child",<EvalTerm> k_1,<EvalTerm> l_1,<EvalTerm> m_1)> to

  EvalPrim :
    App(Prim("SSL_printascii", [ n_1 , o_1 ]), to) ->
    <prim("SSL_printascii",<EvalTerm> n_1,<EvalTerm> o_1)> to

  EvalPrim :
    App(Prim("SSL_getchar", [ p_1 ]), to) ->
    <prim("SSL_getchar",<EvalTerm> p_1)> to

  EvalPrim :
    App(Prim("SSL_get_errno", [ ]), to) ->
    <prim("SSL_get_errno",)> to

  EvalPrim :
    App(Prim("SSL_perror", [ q_1 ]), to) ->
    <prim("SSL_perror",<EvalTerm> q_1)> to

  EvalPrim :
    App(Prim("SSL_strerror", [ r_1 ]), to) ->
    <prim("SSL_strerror",<EvalTerm> r_1)> to

  EvalPrim :
    App(Prim("SSL_EXDEV", [ ]), to) ->
    <prim("SSL_EXDEV",)> to

  EvalPrim :
    App(Prim("SSL_readdir", [ s_1 ]), to) ->
    <prim("SSL_readdir",<EvalTerm> s_1)> to

  EvalPrim :
    App(Prim("SSL_modification_time", [ t_1 ]), to) ->
    <prim("SSL_modification_time",<EvalTerm> t_1)> to

  EvalPrim :
    App(Prim("SSL_rename", [ u_1 , v_1 ]), to) ->
    <prim("SSL_rename",<EvalTerm> u_1,<EvalTerm> v_1)> to

  EvalPrim :
    App(Prim("SSL_copy", [ w_1 , x_1 ]), to) ->
    <prim("SSL_copy",<EvalTerm> w_1,<EvalTerm> x_1)> to

  EvalPrim :
    App(Prim("SSL_fdcopy", [ y_1 , z_1 ]), to) ->
    <prim("SSL_fdcopy",<EvalTerm> y_1,<EvalTerm> z_1)> to

  EvalPrim :
    App(Prim("SSL_link", [ a_2 , b_2 ]), to) ->
    <prim("SSL_link",<EvalTerm> a_2,<EvalTerm> b_2)> to

  EvalPrim :
    App(Prim("SSL_remove", [ c_2 ]), to) ->
    <prim("SSL_remove",<EvalTerm> c_2)> to

  EvalPrim :
    App(Prim("SSL_getenv", [ d_2 ]), to) ->
    <prim("SSL_getenv",<EvalTerm> d_2)> to

  EvalPrim :
    App(Prim("SSL_setenv", [ e_2 , f_2 , g_2 ]), to) ->
    <prim("SSL_setenv",<EvalTerm> e_2,<EvalTerm> f_2,<EvalTerm> g_2)> to

  EvalPrim :
    App(Prim("SSL_is_real", [ h_2 ]), to) ->
    <prim("SSL_is_real",<EvalTerm> h_2)> to

  EvalPrim :
    App(Prim("SSL_cos", [ i_2 ]), to) ->
    <prim("SSL_cos",<EvalTerm> i_2)> to

  EvalPrim :
    App(Prim("SSL_sin", [ j_2 ]), to) ->
    <prim("SSL_sin",<EvalTerm> j_2)> to

  EvalPrim :
    App(Prim("SSL_sqrt", [ k_2 ]), to) ->
    <prim("SSL_sqrt",<EvalTerm> k_2)> to

  EvalPrim :
    App(Prim("SSL_atan2", [ l_2 , m_2 ]), to) ->
    <prim("SSL_atan2",<EvalTerm> l_2,<EvalTerm> m_2)> to

  EvalPrim :
    App(Prim("SSL_real_to_string", [ n_2 ]), to) ->
    <prim("SSL_real_to_string",<EvalTerm> n_2)> to

  EvalPrim :
    App(Prim("SSL_string_to_real", [ o_2 ]), to) ->
    <prim("SSL_string_to_real",<EvalTerm> o_2)> to

  EvalPrim :
    App(Prim("SSL_real", [ p_2 ]), to) ->
    <prim("SSL_real",<EvalTerm> p_2)> to

  EvalPrim :
    App(Prim("SSL_is_int", [ q_2 ]), to) ->
    <prim("SSL_is_int",<EvalTerm> q_2)> to

  EvalPrim :
    App(Prim("SSL_addi", [ r_2 , s_2 ]), to) ->
    <prim("SSL_addi",<EvalTerm> r_2,<EvalTerm> s_2)> to

  EvalPrim :
    App(Prim("SSL_addr", [ t_2 , u_2 ]), to) ->
    <prim("SSL_addr",<EvalTerm> t_2,<EvalTerm> u_2)> to

  EvalPrim :
    App(Prim("SSL_addi", [ v_2 , w_2 ]), to) ->
    <prim("SSL_addi",<EvalTerm> v_2,<EvalTerm> w_2)> to

  EvalPrim :
    App(Prim("SSL_addr", [ x_2 , y_2 ]), to) ->
    <prim("SSL_addr",<EvalTerm> x_2,<EvalTerm> y_2)> to

  EvalPrim :
    App(Prim("SSL_subti", [ z_2 , a_3 ]), to) ->
    <prim("SSL_subti",<EvalTerm> z_2,<EvalTerm> a_3)> to

  EvalPrim :
    App(Prim("SSL_subtr", [ b_3 , c_3 ]), to) ->
    <prim("SSL_subtr",<EvalTerm> b_3,<EvalTerm> c_3)> to

  EvalPrim :
    App(Prim("SSL_subti", [ d_3 , e_3 ]), to) ->
    <prim("SSL_subti",<EvalTerm> d_3,<EvalTerm> e_3)> to

  EvalPrim :
    App(Prim("SSL_subtr", [ f_3 , g_3 ]), to) ->
    <prim("SSL_subtr",<EvalTerm> f_3,<EvalTerm> g_3)> to

  EvalPrim :
    App(Prim("SSL_muli", [ h_3 , i_3 ]), to) ->
    <prim("SSL_muli",<EvalTerm> h_3,<EvalTerm> i_3)> to

  EvalPrim :
    App(Prim("SSL_mulr", [ j_3 , k_3 ]), to) ->
    <prim("SSL_mulr",<EvalTerm> j_3,<EvalTerm> k_3)> to

  EvalPrim :
    App(Prim("SSL_muli", [ l_3 , m_3 ]), to) ->
    <prim("SSL_muli",<EvalTerm> l_3,<EvalTerm> m_3)> to

  EvalPrim :
    App(Prim("SSL_mulr", [ n_3 , o_3 ]), to) ->
    <prim("SSL_mulr",<EvalTerm> n_3,<EvalTerm> o_3)> to

  EvalPrim :
    App(Prim("SSL_divi", [ p_3 , q_3 ]), to) ->
    <prim("SSL_divi",<EvalTerm> p_3,<EvalTerm> q_3)> to

  EvalPrim :
    App(Prim("SSL_divr", [ r_3 , s_3 ]), to) ->
    <prim("SSL_divr",<EvalTerm> r_3,<EvalTerm> s_3)> to

  EvalPrim :
    App(Prim("SSL_divi", [ t_3 , u_3 ]), to) ->
    <prim("SSL_divi",<EvalTerm> t_3,<EvalTerm> u_3)> to

  EvalPrim :
    App(Prim("SSL_divr", [ v_3 , w_3 ]), to) ->
    <prim("SSL_divr",<EvalTerm> v_3,<EvalTerm> w_3)> to

  EvalPrim :
    App(Prim("SSL_mod", [ x_3 , y_3 ]), to) ->
    <prim("SSL_mod",<EvalTerm> x_3,<EvalTerm> y_3)> to

  EvalPrim :
    App(Prim("SSL_gti", [ z_3 , a_4 ]), to) ->
    <prim("SSL_gti",<EvalTerm> z_3,<EvalTerm> a_4)> to

  EvalPrim :
    App(Prim("SSL_gtr", [ b_4 , c_4 ]), to) ->
    <prim("SSL_gtr",<EvalTerm> b_4,<EvalTerm> c_4)> to

  EvalPrim :
    App(Prim("SSL_gti", [ d_4 , e_4 ]), to) ->
    <prim("SSL_gti",<EvalTerm> d_4,<EvalTerm> e_4)> to

  EvalPrim :
    App(Prim("SSL_gtr", [ f_4 , g_4 ]), to) ->
    <prim("SSL_gtr",<EvalTerm> f_4,<EvalTerm> g_4)> to

  EvalPrim :
    App(Prim("SSL_int", [ h_4 ]), to) ->
    <prim("SSL_int",<EvalTerm> h_4)> to

  EvalPrim :
    App(Prim("SSL_int_to_string", [ i_4 ]), to) ->
    <prim("SSL_int_to_string",<EvalTerm> i_4)> to

  EvalPrim :
    App(Prim("SSL_string_to_int", [ j_4 ]), to) ->
    <prim("SSL_string_to_int",<EvalTerm> j_4)> to

  EvalPrim :
    App(Prim("SSL_srand", [ k_4 ]), to) ->
    <prim("SSL_srand",<EvalTerm> k_4)> to

  EvalPrim :
    App(Prim("SSL_RAND_MAX", [ ]), to) ->
    <prim("SSL_RAND_MAX",)> to

  EvalPrim :
    App(Prim("SSL_rand", [ ]), to) ->
    <prim("SSL_rand",)> to

  EvalPrim :
    App(Prim("SSLgetAnnotations", [ l_4 ]), to) ->
    <prim("SSLgetAnnotations",<EvalTerm> l_4)> to

  EvalPrim :
    App(Prim("SSLsetAnnotations", [ m_4 , n_4 ]), to) ->
    <prim("SSLsetAnnotations",<EvalTerm> m_4,<EvalTerm> n_4)> to

  EvalPrim :
    App(Prim("ATremoveAnnotations", [ o_4 ]), to) ->
    <prim("ATremoveAnnotations",<EvalTerm> o_4)> to

  EvalPrim :
    App(Prim("SSL_mkterm", [ p_4 , q_4 ]), to) ->
    <prim("SSL_mkterm",<EvalTerm> p_4,<EvalTerm> q_4)> to

  EvalPrim :
    App(Prim("SSL_explode_term", [ r_4 ]), to) ->
    <prim("SSL_explode_term",<EvalTerm> r_4)> to

  EvalPrim :
    App(Prim("SSL_address_lt", [ s_4 , t_4 ]), to) ->
    <prim("SSL_address_lt",<EvalTerm> s_4,<EvalTerm> t_4)> to

  EvalPrim :
    App(Prim("SSL_address", [ u_4 ]), to) ->
    <prim("SSL_address",<EvalTerm> u_4)> to

  EvalPrim :
    App(Prim("SSL_stdin_stream", [ ]), to) ->
    <prim("SSL_stdin_stream",)> to

  EvalPrim :
    App(Prim("SSL_stdout_stream", [ ]), to) ->
    <prim("SSL_stdout_stream",)> to

  EvalPrim :
    App(Prim("SSL_stderr_stream", [ ]), to) ->
    <prim("SSL_stderr_stream",)> to

  EvalPrim :
    App(Prim("SSL_isatty", [ v_4 ]), to) ->
    <prim("SSL_isatty",<EvalTerm> v_4)> to

  EvalPrim :
    App(Prim("SSL_fopen", [ w_4 , x_4 ]), to) ->
    <prim("SSL_fopen",<EvalTerm> w_4,<EvalTerm> x_4)> to

  EvalPrim :
    App(Prim("SSL_fclose", [ y_4 ]), to) ->
    <prim("SSL_fclose",<EvalTerm> y_4)> to

  EvalPrim :
    App(Prim("SSL_fclose", [ z_4 ]), to) ->
    <prim("SSL_fclose",<EvalTerm> z_4)> to

  EvalPrim :
    App(Prim("SSL_fflush", [ a_5 ]), to) ->
    <prim("SSL_fflush",<EvalTerm> a_5)> to

  EvalPrim :
    App(Prim("SSL_fflush", [ b_5 ]), to) ->
    <prim("SSL_fflush",<EvalTerm> b_5)> to

  EvalPrim :
    App(Prim("SSL_fputs", [ c_5 , d_5 ]), to) ->
    <prim("SSL_fputs",<EvalTerm> c_5,<EvalTerm> d_5)> to

  EvalPrim :
    App(Prim("SSL_puts", [ e_5 ]), to) ->
    <prim("SSL_puts",<EvalTerm> e_5)> to

  EvalPrim :
    App(Prim("SSL_fputc", [ f_5 , g_5 ]), to) ->
    <prim("SSL_fputc",<EvalTerm> f_5,<EvalTerm> g_5)> to

  EvalPrim :
    App(Prim("SSL_fgetc", [ h_5 ]), to) ->
    <prim("SSL_fgetc",<EvalTerm> h_5)> to

  EvalPrim :
    App(Prim("SSL_STDIN_FILENO", [ ]), to) ->
    <prim("SSL_STDIN_FILENO",)> to

  EvalPrim :
    App(Prim("SSL_STDOUT_FILENO", [ ]), to) ->
    <prim("SSL_STDOUT_FILENO",)> to

  EvalPrim :
    App(Prim("SSL_STDERR_FILENO", [ ]), to) ->
    <prim("SSL_STDERR_FILENO",)> to

  EvalPrim :
    App(Prim("SSL_P_tmpdir", [ ]), to) ->
    <prim("SSL_P_tmpdir",)> to

  EvalPrim :
    App(Prim("SSL_getcwd", [ ]), to) ->
    <prim("SSL_getcwd",)> to

  EvalPrim :
    App(Prim("SSL_chdir", [ i_5 ]), to) ->
    <prim("SSL_chdir",<EvalTerm> i_5)> to

  EvalPrim :
    App(Prim("SSL_creat", [ j_5 ]), to) ->
    <prim("SSL_creat",<EvalTerm> j_5)> to

  EvalPrim :
    App(Prim("SSL_open", [ k_5 ]), to) ->
    <prim("SSL_open",<EvalTerm> k_5)> to

  EvalPrim :
    App(Prim("SSL_mkstemp", [ l_5 ]), to) ->
    <prim("SSL_mkstemp",<EvalTerm> l_5)> to

  EvalPrim :
    App(Prim("SSL_close", [ m_5 ]), to) ->
    <prim("SSL_close",<EvalTerm> m_5)> to

  EvalPrim :
    App(Prim("SSL_dup", [ n_5 ]), to) ->
    <prim("SSL_dup",<EvalTerm> n_5)> to

  EvalPrim :
    App(Prim("SSL_dup2", [ o_5 , p_5 ]), to) ->
    <prim("SSL_dup2",<EvalTerm> o_5,<EvalTerm> p_5)> to

  EvalPrim :
    App(Prim("SSL_access", [ q_5 , r_5 ]), to) ->
    <prim("SSL_access",<EvalTerm> q_5,<EvalTerm> r_5)> to

  EvalPrim :
    App(Prim("SSL_fdopen", [ s_5 , t_5 ]), to) ->
    <prim("SSL_fdopen",<EvalTerm> s_5,<EvalTerm> t_5)> to

  EvalPrim :
    App(Prim("SSL_fileno", [ u_5 ]), to) ->
    <prim("SSL_fileno",<EvalTerm> u_5)> to

  EvalPrim :
    App(Prim("SSL_pipe", [ ]), to) ->
    <prim("SSL_pipe",)> to

  EvalPrim :
    App(Prim("SSL_close_file", [ v_5 ]), to) ->
    <prim("SSL_close_file",<EvalTerm> v_5)> to

  EvalPrim :
    App(Prim("SSL_open_file", [ w_5 , x_5 ]), to) ->
    <prim("SSL_open_file",<EvalTerm> w_5,<EvalTerm> x_5)> to

  EvalPrim :
    App(Prim("SSL_new", [ ]), to) ->
    <prim("SSL_new",)> to

  EvalPrim :
    App(Prim("SSL_is_string", [ y_5 ]), to) ->
    <prim("SSL_is_string",<EvalTerm> y_5)> to

  EvalPrim :
    App(Prim("SSL_implode_string", [ z_5 ]), to) ->
    <prim("SSL_implode_string",<EvalTerm> z_5)> to

  EvalPrim :
    App(Prim("SSL_explode_string", [ a_6 ]), to) ->
    <prim("SSL_explode_string",<EvalTerm> a_6)> to

  EvalPrim :
    App(Prim("SSL_strcat", [ b_6 , c_6 ]), to) ->
    <prim("SSL_strcat",<EvalTerm> b_6,<EvalTerm> c_6)> to

  EvalPrim :
    App(Prim("SSL_concat_strings", [ d_6 ]), to) ->
    <prim("SSL_concat_strings",<EvalTerm> d_6)> to

  EvalPrim :
    App(Prim("SSL_strlen", [ e_6 ]), to) ->
    <prim("SSL_strlen",<EvalTerm> e_6)> to

  EvalPrim :
    App(Prim("SSL_write_term_to_stream_baf", [ f_6 , g_6 ]), to) ->
    <prim("SSL_write_term_to_stream_baf",<EvalTerm> f_6,<EvalTerm> g_6)> to

  EvalPrim :
    App(Prim("SSL_write_term_to_stream_taf", [ h_6 , i_6 ]), to) ->
    <prim("SSL_write_term_to_stream_taf",<EvalTerm> h_6,<EvalTerm> i_6)> to

  EvalPrim :
    App(Prim("SSL_write_term_to_stream_text", [ j_6 , k_6 ]), to) ->
    <prim("SSL_write_term_to_stream_text",<EvalTerm> j_6,<EvalTerm> k_6)> to

  EvalPrim :
    App(Prim("SSL_read_term_from_stream", [ l_6 ]), to) ->
    <prim("SSL_read_term_from_stream",<EvalTerm> l_6)> to

  EvalPrim :
    App(Prim("SSL_read_term_from_string", [ m_6 ]), to) ->
    <prim("SSL_read_term_from_string",<EvalTerm> m_6)> to

  EvalPrim :
    App(Prim("SSL_write_term_to_string", [ n_6 ]), to) ->
    <prim("SSL_write_term_to_string",<EvalTerm> n_6)> to

  EvalPrim :
    App(Prim("SSL_print", [ o_6 , p_6 ]), to) ->
    <prim("SSL_print",<EvalTerm> o_6,<EvalTerm> p_6)> to

  EvalPrim :
    App(Prim("SSL_printnl", [ q_6 , r_6 ]), to) ->
    <prim("SSL_printnl",<EvalTerm> q_6,<EvalTerm> r_6)> to

  EvalPrim :
    App(Prim("_cpl_loaded", [ s_6 ]), to) ->
    <prim("_cpl_loaded",<EvalTerm> s_6)> to
