/** 
 * The first phase of the front-end is the normalization of
 * specifications. A specification consists of a list of basic
 * specifications (signatures, overlays, rules and strategy
 * definitions) in any order. Normalization collects the basic
 * specifications of each kind and creates a specification of the
 * form. 
 */

module normalize-spec
imports Stratego lib desugar lift-dynamic-rules
strategies

  normalize-spec-io = 
    io-wrap(normalize-spec)

  normalize-spec =
    CombineSections
    ; topdown(try(HL))		// remove syntactic sugar
    ; vars-to-consts
    ; define-lrules
    ; LiftDynamicRules
    ; topdown(try(HL))		// remove syntactic sugar
    ; Specification(fetch(\ Constructors(decls) -> Signature([Constructors(decls)]) \ ))

// Combine sections of the same sort into single sections

  CombineSections =
    Specification(
      foldr(![Constructors([]),Overlays([]),Strategies([])]
	   , InsertBSpec
	   , try(GetConstructors + RulesToStrategies))
    )

  GetConstructors :
    Signature(decls) -> 
    Constructors(<filter(?Constructors(<id>)); concat> decls)

  RulesToStrategies :
    Rules(rd*) -> Strategies(rd*)

  InsertBSpec =
    ?(section#([decls1]), <id>)
    ; fetch({decls2: (section#([decls2]) -> section#([<conc>(decls2,decls1)]))})

// Rename syntactic variables to nullary constructors if declared in the signature

  vars-to-consts =
    {| VarToConst :
       Specification(map(try(Constructors(map(try(DeclareVarToConst)))
			     + Overlays(map(try(DeclareVarToConst))))))
     ; alltd(VarToConst)
     |}

  DeclareVarToConst =
    ?|[ x : srt ]|
    ; rules( VarToConst : Term|[ x ]| -> Term|[ x() ]| )

  DeclareVarToConst =
    ?Overlay|[ x() = t ]|
    ; rules( VarToConst : Term|[ x ]| -> Term|[ x() ]| )

// Define explicit variable scopes for \ ... \ rules 

  define-lrules = 
    bottomup(try(DefLRule + DefScopeDefault))

  DefLRule : 
    |[ \ t1 -> t2 where s \ ]| ->
    |[ { ~<tvars> t1 : (t1 -> t2 where s) } ]|

  DefScopeDefault :
    |[ { s } ]| -> |[ { ~<tvars> s : s } ]|


