module test60
imports dynamic-rules
strategies

  main = 
    {| CSE 
     : new-A(|"a","a")
     ; where(<Assign> ("a", ("b", "c")))
     ; <A> ("b", "c")
     ; undefine-A(|"b")
     ; !(<id>, <try(A)> ("b", "c"))
     |} => ("a",("b","c"))
	
  innermost-scope-A =
    collect(is-string) => ids
    ; innermost-scope-A(where(<elem>(<id>, ids)))
			
  Assign =
    ? (x, e)
    ; where( collect(is-string; !("a",<id>)) => xs )
    ; where( innermost-scope-A => z )
    ; rules( A.z : e -> x depends on xs )
