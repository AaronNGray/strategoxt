module lift-definitions
imports stratlib lib stratego-laws
strategies

  lift-definitions-io =
    iowrap(lift-definitions)

  lift-definitions =
    declare-standard-strategies
    ; Specification([id,Strategies(map(DeclareTopLevel); map(lift-sdefs); concat)])

  declare-standard-strategies =
    where(
      <map({?f; rules(TopLevel : f -> ())})> 
      ["_id", "_fail"]
    )

  DeclareTopLevel =
    ?SDefT(f, xs, ys, s)
    ; rules(TopLevel : f -> ())

  lift-sdefs :
    SDefT(f, xs, ys, s) -> <conc>(defs, [SDefT(f, xs, ys, s')])
    where <collect-split(LiftFromLet)> s => (s', defs)

  LiftFromLet :
    Let(defs, s) -> (Let(defs2, s), defs1)
    where <partition(SuperCombinator)> defs => (defs1, defs2)
	; <map(DeclareTopLevel)> defs1

  SuperCombinator =
    ?def@SDefT(f, xs, ys, s)
    ; where(
        <tvars> def => []
        ; <svars; filter(not(TopLevel))> def => []
      )