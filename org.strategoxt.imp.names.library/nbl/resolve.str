module nbl/resolve

imports
  
  nbl/collect
  nbl/tasks
  nbl/query
  nbl/lookup
  nbl/uri
  index/core
  
signature

  constructors
    
    COMPLETION : String -> COMPLETION
      
rules // Reference resolution
  
  nbl-resolve = 
    has-annos;
    get-annos;
    collect-one(nbl-resolve)
  
  nbl-resolve:
    Use(Result(number)) -> definition
    where
      uri        := <nbl-get-value> DoneTask(number, ());
      definition := <nbl-get> Def(uri)

rules // Code completion

  nbl-unresolved-uris = 
    has-annos;
    get-annos;
    collect-all(nbl-unresolved-uris);
    concat
      
  nbl-unresolved-uris:
    Use(Result(number)) -> [uri]
    where
      uri := <nbl-get-value> FailTask(number, ())

  nbl-propose-completions:
    ast -> proposals'
      where
        item        := <collect-one(?COMPLETION(_))> ast;
        index-transaction(
          uris      := <nbl-unresolved-uris> item;
          proposals := <mapconcat(nbl-visible-definitions)> uris
        );
        proposals'  := <map(nbl-uri; nbl-uri-name)> proposals

rules // Conditions
	
  nbl-is-reference =
    ?Use(_)
    
  nbl-has-reference =
  	collect-one(nbl-is-reference)
 
  nbl-is-unresolved =
  	?node;
    has-annos;
    get-annos;
    nbl-has-reference;
    <not(nbl-resolve)> node
