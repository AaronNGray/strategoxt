# Copyright (C) 1998-2002 Eelco Visser <visser@acm.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
# 02111-1307, USA.

AC_INIT(Makefile.in)
AM_INIT_AUTOMAKE(StrategoXT,0.9beta7)

#AC_CONFIG_AUX_DIR([config])

### ATerm Library #####################

AC_ARG_WITH(aterm, 
  [  --with-aterm=DIR            Location of external aterm package.], 
  ATERM=$withval, 
  ATERM="$prefix"
)
AC_SUBST(ATERM)

### Choice Point Library #############

AC_ARG_WITH(cpl, 
  [  --with-cpl=DIR              Use the choice point library (optional)], 
  CPL=$withval usecpl=true, 
  usecpl=false
)
AC_SUBST(CPL)
AM_CONDITIONAL(USECPL, test x$usecpl = xtrue)

############ XTC ##########################################################

AC_ARG_WITH(xtc,
  [  --with-xtc=DIR              Use XTC (XT Composition) [[prefix]]],
  XTC="$withval",
  XTC="$prefix"
)
AC_SUBST(XTC)

AC_ARG_WITH(repository,
  [  --with-repository=DIR       XTC repository [[pkgdatadir/XTC-$StrategoXT]]]
,
  REPOSITORY="$withval",
  REPOSITORY="$prefix/share/$PACKAGE/XTC"
)
AC_SUBST(REPOSITORY)

### SDF ###############################

AC_ARG_WITH(sdf, 
  [  --with-sdf=DIR             Specify location of SDF], 
  SDF="$withval", 
  SDF="$prefix"
)
AC_SUBST(SDF)

echo "SDF = $SDF"

AC_ARG_WITH(sglr, 
  [  --with-sglr=DIR            Specify location of SGLR], 
  SGLR="$withval", 
  SGLR="$SDF"
)
AC_SUBST(SGLR)

echo "SGLR = $SGLR"

AC_ARG_WITH(pgen, 
  [  --with-pgen=DIR            Specify location of SDF2 parser generator], 
  PGEN="$withval", 
  PGEN="$SDF"
)
AC_SUBST(PGEN)

#AC_SUBST(STRATEGOFRONT)

AC_ARG_ENABLE(exe,    
  [  --enable-exe               Extension of executables], 
  EXE=".exe", 
  EXE=""
)
AC_SUBST(EXE)

AM_CONFIG_HEADER([config.h])


### PACKAGES ##########################

PKGS="autoxt srts xtc sdf-import sc ssl gpp cgen stratego-front asfix-tools aterm-tools graph-tools sdf-tools stratego-tools xt boxenv"

#gbtools stratego-connect grammar-recovery

AC_SUBST(PKGS)

top_srcdir=`pwd`


### OUTPUT #############################

AC_OUTPUT(
	Makefile 
	README
	emacs/Makefile
)

### SUBPACKAGES ########################

AB_CONFIG_PKG(autoxt, )

#AB_CONFIG_PKG(aterm,
#   --with-gcc
#   --with-dbg
#)

if test x$usecpl = xtrue
then
AB_CONFIG_PKG(srts,
   --with-aterm=${ATERM}
   --with-cpl=${CPL}
)
else
AB_CONFIG_PKG(srts,
   --with-aterm=${ATERM}
)
fi

AB_CONFIG_PKG(xtc,
   --with-aterm=${ATERM}
   --with-sglr=${SGLR}
   --with-pgen=${PGEN}
   --with-strategoxt=${prefix}
   --with-repository=${REPOSITORY}
)

AB_CONFIG_PKG(sdf-import,
   --with-aterm=${ATERM}
   --with-sglr=${SGLR}
   --with-pgen=${PGEN}
   --with-xtc=${prefix}
   --with-strategoxt=${prefix}
   --with-repository=${REPOSITORY}
)

AB_CONFIG_PKG(sc,
   --with-aterm=${ATERM}
   --with-ssl=${prefix}
   --with-srts=${prefix}
   --with-sc-boot=${top_srcdir}/sc-boot
   --with-cgen=${prefix}
   --with-gpp=${prefix}
)

AB_CONFIG_PKG(cgen,
   --with-aterm=${ATERM}
   --with-ssl=${prefix}
   --with-srts=${prefix}
)

AB_CONFIG_PKG(stratego-front,
   --with-stratego=${prefix} 
   --with-sglr=${SGLR}      
   --with-pgen=${PGEN}                
   --with-asfix-tools=${prefix}
   --with-stratego-tools=${prefix}
   --with-sdf-tools=${prefix}
   --with-gpp=${prefix}
   --with-cgen=${prefix}
)

AB_CONFIG_PKG(ssl,
   --with-aterm=${ATERM}
   --with-srts=${prefix}
   --with-stratego=${prefix}
)

AB_CONFIG_PKG(asfix-tools,
   --with-sc-boot=${prefix}
   --with-srts=${prefix}
   --with-sglr=${SGLR}
   --with-pgen=${PGEN}
   --with-xtc=${prefix}
   --with-repository=${REPOSITORY}
)

AB_CONFIG_PKG(gpp,
   --with-asfix-tools=${prefix}
   --with-sglr=${SGLR}
   --with-pgen=${PGEN}
   --with-graphviz=${prefix}
   --with-graph-tools=${prefix}
   --with-stratego=${prefix}
   --with-bundled-packages='${PKGS}'
)

AB_CONFIG_PKG(aterm-tools,
   --with-sc=${prefix} 
)
AB_CONFIG_PKG(graph-tools,
   --with-sc-boot=${prefix} 
)
AB_CONFIG_PKG(sdf-tools,
   --with-stratego=${prefix}
   --with-sglr=${SGLR}
   --with-pgen=${PGEN}
   --with-asfix-tools=${prefix}
   --with-graph-tools=${prefix}
   --with-gpp=${prefix}
   --with-bundled-packages='${PKGS}'
   --with-xtc=${prefix}
   --with-repository=${REPOSITORY}
)
AB_CONFIG_PKG(stratego-tools,
   --with-sglr=${SGLR}
   --with-pgen=${PGEN}
   --with-stratego=${prefix}
   --with-asfix-tools=${prefix}
   --with-graph-tools=${prefix}
   --with-sdf-tools=${prefix}
   --with-gpp=${prefix}
   --with-bundled-packages='${PKGS}'
)
AB_CONFIG_PKG(xt,
  --with-pgen=${PGEN}           
  --with-sglr=${SGLR}                  
  --with-gpp=${prefix}                
  --with-gb=${GB}               
  --with-grammar-recovery=${GRAMMAR_RECOVERY}          
  --with-sc-boot=${prefix}    
  --with-stratego-tools=${prefix}   
  --with-asfix-tools=${prefix}      
  --with-aterm-tools=${prefix}      
  --with-graph-tools=${prefix}      
  --with-sdf-tools=${prefix}        
  --with-graphviz=${GRAPHVIZ}
)
AB_CONFIG_PKG(boxenv,
)
