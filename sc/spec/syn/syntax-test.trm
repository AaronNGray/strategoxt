Specification([Strategies([SDef("free-vars",[DefaultVarDec("getvars"),DefaultVarDec("boundvars")],Rec("x",LChoice(Call(SVar("getvars"),[]),Seq(Call(SVar("split"),[Call(SVar("collect-kids"),[Call(SVar("x"),[])]),LChoice(Call(SVar("boundvars"),[]),Build(Op("Nil",[])))]),Call(SVar("diff"),[]))))),SDef("free-vars",[DefaultVarDec("getvars"),DefaultVarDec("boundvars"),VarDec("boundin",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term")))],ConstType(Var("term"))))],Rec("x",LChoice(Call(SVar("getvars"),[]),LChoice(Seq(Scope(["vs"],Seq(Where(AM(Call(SVar("boundvars"),[]),Var("vs"))),Call(SVar("boundin"),[Seq(Call(SVar("split"),[Call(SVar("x"),[]),Build(Var("vs"))]),Call(SVar("diff"),[])),Call(SVar("x"),[]),Build(Op("Nil",[]))]))),Call(SVar("collect-kids"),[Id])),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))))),SDef("free-vars",[DefaultVarDec("getvars"),DefaultVarDec("boundvars"),VarDec("boundin",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term")))],ConstType(Var("term")))),DefaultVarDec("eq")],Rec("x",LChoice(Call(SVar("getvars"),[]),LChoice(Seq(Scope(["vs"],Seq(Where(AM(Call(SVar("boundvars"),[]),Var("vs"))),Call(SVar("boundin"),[Seq(Call(SVar("split"),[Call(SVar("x"),[]),Build(Var("vs"))]),Call(SVar("diff"),[Call(SVar("eq"),[])])),Call(SVar("x"),[]),Build(Op("Nil",[]))]))),Call(SVar("collect-kids"),[Id])),Call(SVar("collect-kids"),[Call(SVar("x"),[])])))))]),Strategies([SDef("free-vars2",[DefaultVarDec("getvars"),DefaultVarDec("boundvars")],Rec("x",Seq(Call(SVar("split"),[LChoice(Call(SVar("getvars"),[]),Build(Op("Nil",[]))),Seq(Call(SVar("split"),[Call(SVar("collect-kids"),[Call(SVar("x"),[])]),LChoice(Call(SVar("boundvars"),[]),Build(Op("Nil",[])))]),Call(SVar("diff"),[]))]),Call(SVar("union"),[])))),SDef("free-vars2",[DefaultVarDec("getvars"),DefaultVarDec("boundvars"),VarDec("boundin",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term")))],ConstType(Var("term"))))],Rec("x",Seq(Call(SVar("split"),[LChoice(Call(SVar("getvars"),[]),Build(Op("Nil",[]))),LChoice(Seq(Scope(["vs"],Seq(Where(AM(Call(SVar("boundvars"),[]),Var("vs"))),Call(SVar("boundin"),[Seq(Call(SVar("split"),[Call(SVar("x"),[]),Build(Var("vs"))]),Call(SVar("diff"),[])),Call(SVar("x"),[]),Build(Op("Nil",[]))]))),Call(SVar("collect-kids"),[Id])),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))]),Call(SVar("union"),[])))),SDef("free-vars2",[DefaultVarDec("getvars"),DefaultVarDec("boundvars"),VarDec("boundin",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term")))],ConstType(Var("term")))),DefaultVarDec("eq")],Rec("x",Seq(Call(SVar("split"),[LChoice(Call(SVar("getvars"),[]),Build(Op("Nil",[]))),LChoice(Scope(["vs"],Seq(Where(AM(Call(SVar("boundvars"),[]),Var("vs"))),Seq(Call(SVar("boundin"),[Seq(Call(SVar("split"),[Call(SVar("x"),[]),Build(Var("vs"))]),Call(SVar("diff"),[Call(SVar("eq"),[])])),Call(SVar("x"),[]),Build(Op("Nil",[]))]),Call(SVar("collect-kids"),[Id])))),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))]),Call(SVar("union"),[]))))]),Strategies([SDef("equal",[],Call(SVar("for"),[Id,Call(SVar("Nil"),[]),LChoice(Call(SVar("UfIdem"),[]),Call(SVar("UfDecompose"),[]))]))]),Rules([RDef("UfIdem",[],Rule(Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])]),Var("ps")]),Var("ps"),Id)),RDef("UfDecompose",[],Rule(Op("Cons",[Op("TCons",[Explode(Var("f"),Var("xs")),Op("TCons",[Explode(Var("f"),Var("ys")),Op("TNil",[])])]),Var("ps")]),App(Call(SVar("conc"),[]),Op("TCons",[App(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Op("TCons",[Var("ps"),Op("TNil",[])])])),Id))]),Strategies([SDef("diff",[],Call(SVar("for"),[LRule(Rule(Var("ps"),Op("TCons",[Op("Nil",[]),Op("TCons",[Var("ps"),Op("TNil",[])])]),Id)),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("Nil"),[]),Call(SVar("TNil"),[])])]),LChoice(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[LChoice(Call(SVar("UfIdem"),[]),Call(SVar("UfDecompose"),[])),Call(SVar("TNil"),[])])]),Call(SVar("UfShift"),[]))]))]),Rules([RDef("UfShift",[],Rule(Op("TCons",[Var("ps1"),Op("TCons",[Op("Cons",[Var("p"),Var("ps2")]),Op("TNil",[])])]),Op("TCons",[Op("Cons",[Var("p"),Var("ps1")]),Op("TCons",[Var("ps2"),Op("TNil",[])])]),Id))]),Strategies([SDef("pattern-match",[DefaultVarDec("isvar")],Call(SVar("for"),[LRule(Rule(Var("pairs"),Op("TCons",[Var("pairs"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),LRule(Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Var("sbs"),Id)),LChoice(Call(SVar("TCons"),[Call(SVar("UfIdem"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Choice(Call(SVar("MatchVar"),[Call(SVar("isvar"),[])]),Call(SVar("TCons"),[Call(SVar("UfDecompose"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])])))]))]),Rules([RDef("MatchVar",[DefaultVarDec("isvar")],Rule(Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("ps")]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Op("TCons",[Var("ps"),Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("sbs")]),Op("TNil",[])])]),Where(Seq(BA(Call(SVar("isvar"),[]),Var("x")),BA(Not(Call(SVar("fetch"),[Scope(["z"],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("z"),Op("TNil",[])])])),BA(Not(Call(SVar("eq"),[])),Op("TCons",[Var("y"),Op("TCons",[Var("z"),Op("TNil",[])])]))))])),Var("sbs"))))))]),Strategies([SDef("unify",[DefaultVarDec("isvar")],Call(SVar("for"),[LRule(Rule(Var("pairs"),Op("TCons",[Var("pairs"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),LRule(Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Var("sbs"),Id)),LChoice(Call(SVar("TCons"),[Call(SVar("UfIdem"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Choice(Call(SVar("UfVar"),[Call(SVar("isvar"),[])]),LChoice(Call(SVar("UfSwap"),[Call(SVar("isvar"),[])]),Call(SVar("TCons"),[Call(SVar("UfDecompose"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]))))]))]),Rules([RDef("UfVar",[DefaultVarDec("isvar")],Rule(Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("ps")]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Op("TCons",[Var("ps'"),Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("sbs''")]),Op("TNil",[])])]),Where(Seq(BA(Call(SVar("isvar"),[]),Var("x")),Seq(BA(Not(Call(SVar("in"),[])),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),AM(BA(Call(SVar("substitute"),[Call(SVar("isvar"),[])]),Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("Nil",[])]),Op("TCons",[Op("TCons",[Var("sbs"),Op("TCons",[Var("ps"),Op("TNil",[])])]),Op("TNil",[])])])),Op("TCons",[Var("sbs''"),Op("TCons",[Var("ps'"),Op("TNil",[])])]))))))),RDef("UfSwap",[DefaultVarDec("isvar")],Rule(Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("ps")]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Op("TCons",[Op("Cons",[Op("TCons",[Var("y"),Op("TCons",[Var("x"),Op("TNil",[])])]),Var("ps")]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Where(Seq(BA(Not(Call(SVar("isvar"),[])),Var("x")),BA(Call(SVar("isvar"),[]),Var("y"))))))]),Rules([RDef("in",[],Rule(Op("TCons",[Var("a"),Op("TCons",[Var("t"),Op("TNil",[])])]),App(Call(SVar("oncetd"),[Match(Var("a"))]),Var("t")),Id))]),Strategies([SDef("equal",[DefaultVarDec("fltr")],Call(SVar("for"),[Id,Call(SVar("Nil"),[]),LChoice(Call(SVar("UfIdem"),[]),Seq(Call(SVar("try"),[Call(SVar("Cons"),[Call(SVar("TCons"),[Call(SVar("fltr"),[]),Call(SVar("TCons"),[Call(SVar("fltr"),[]),Call(SVar("TNil"),[])])]),Id])]),Call(SVar("UfDecompose"),[])))]))]),Strategies([SDef("equal",[DefaultVarDec("fltr1"),DefaultVarDec("fltr2")],Call(SVar("for"),[Id,Call(SVar("Nil"),[]),LChoice(Call(SVar("UfIdem"),[]),Seq(Call(SVar("Cons"),[Seq(Call(SVar("TCons"),[Call(SVar("try"),[Call(SVar("fltr1"),[])]),Call(SVar("TCons"),[Call(SVar("try"),[Call(SVar("fltr1"),[])]),Call(SVar("TNil"),[])])]),Call(SVar("try"),[Call(SVar("fltr2"),[])])),Id]),Call(SVar("UfDecompose"),[])))]))]),Rules([RDef("RnVar",[VarDec("isvar",FunType([ConstType(Var("name")),FunType([ConstType(Var("name"))],ConstType(Var("env")))],ConstType(Var("term"))))],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env"),Op("TNil",[])])]),App(Call(SVar("isvar"),[Seq(Call(SVar("split"),[Id,Build(Var("env"))]),Call(SVar("lookup"),[]))]),Var("t")),Id)),RDef("RnBinding",[DefaultVarDec("bndvrs")],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TNil",[])])]),Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),Where(Seq(AM(BA(Call(SVar("bndvrs"),[]),Var("t")),Var("xs")),Seq(AM(Call(SVar("map"),[Call(SVar("new"),[])]),Var("ys")),AM(BA(Call(SVar("conc"),[]),Op("TCons",[App(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Op("TCons",[Var("env1"),Op("TNil",[])])])),Var("env2"))))))),RDef("DistBinding",[DefaultVarDec("s")],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),App(All(LRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env2"),Op("TNil",[])])])),Id))),Var("t")),Id))]),Strategies([SDef("rename",[VarDec("isvar",FunType([ConstType(Var("name")),FunType([ConstType(Var("name"))],ConstType(Var("env")))],ConstType(Var("term")))),DefaultVarDec("bndvars")],Seq(LRule(Rule(Var("t"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("isvar"),[])]),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[])]),Call(SVar("DistBinding"),[Call(SVar("x"),[])])))]))))]),Rules([RDef("DistBinding",[DefaultVarDec("s"),VarDec("boundin",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term")))],ConstType(Var("term"))))],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),App(Call(SVar("boundin"),[LRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env2"),Op("TNil",[])])])),Id)),LRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env1"),Op("TNil",[])])])),Id)),Id]),Var("t")),Id))]),Strategies([SDef("rename",[VarDec("isvar",FunType([ConstType(Var("name")),FunType([ConstType(Var("name"))],ConstType(Var("env")))],ConstType(Var("term")))),DefaultVarDec("bndvars"),VarDec("boundin",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term")))],ConstType(Var("term"))))],Seq(LRule(Rule(Var("t"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("isvar"),[])]),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[])]),Call(SVar("DistBinding"),[Call(SVar("x"),[]),Call(SVar("boundin"),[])])))]))))]),Rules([RDef("RnBinding",[DefaultVarDec("bndvrs"),VarDec("paste",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("vars")))],ConstType(Var("term"))))],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("paste"),[Build(Var("ys"))]),Var("t")),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),Where(Seq(AM(BA(Call(SVar("bndvrs"),[]),Var("t")),Var("xs")),Seq(AM(Call(SVar("map"),[Call(SVar("new"),[])]),Var("ys")),AM(BA(Call(SVar("conc"),[]),Op("TCons",[App(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Op("TCons",[Var("env1"),Op("TNil",[])])])),Var("env2")))))))]),Strategies([SDef("rename",[VarDec("isvar",FunType([ConstType(Var("name")),FunType([ConstType(Var("name"))],ConstType(Var("env")))],ConstType(Var("term")))),DefaultVarDec("bndvars"),VarDec("boundin",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term")))],ConstType(Var("term")))),VarDec("paste",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("vars")))],ConstType(Var("term"))))],Seq(LRule(Rule(Var("t"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("isvar"),[])]),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[]),Call(SVar("paste"),[])]),Call(SVar("DistBinding"),[Call(SVar("x"),[]),Call(SVar("boundin"),[])])))]))))]),Strategies([SDef("subs-args",[],LChoice(Match(Op("TCons",[Var("sbs"),Op("TCons",[Var("t"),Op("TNil",[])])])),LRule(Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TCons",[Var("t"),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Op("TCons",[Var("t"),Op("TNil",[])])]),Id))))]),Rules([RDef("SubsVar",[DefaultVarDec("isvar"),DefaultVarDec("mksbs")],Rule(Var("t"),App(Call(SVar("lookup"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("sbs"),Op("TNil",[])])])),Where(Seq(AM(BA(Call(SVar("isvar"),[]),Var("t")),Var("x")),AM(Call(SVar("mksbs"),[]),Var("sbs"))))))]),Strategies([SDef("substitute",[DefaultVarDec("isvar"),DefaultVarDec("ren")],Seq(AM(Call(SVar("subs-args"),[]),Op("TCons",[Var("sbs"),Op("TCons",[Var("t"),Op("TNil",[])])])),Seq(Build(Var("t")),Call(SVar("alltd"),[Seq(Call(SVar("SubsVar"),[Call(SVar("isvar"),[]),Build(Var("sbs"))]),Call(SVar("ren"),[]))])))),SDef("substitute",[DefaultVarDec("isvar")],Call(SVar("substitute"),[Call(SVar("isvar"),[]),Id])),SDef("substitute",[DefaultVarDec("isvar"),VarDec("varshape",FunType([ConstType(Var("name")),FunType([ConstType(Var("name"))],ConstType(Var("env")))],ConstType(Var("term")))),DefaultVarDec("bndvars"),VarDec("boundin",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term")))],ConstType(Var("term")))),VarDec("paste",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("vars")))],ConstType(Var("term")))),DefaultVarDec("ren")],Seq(AM(Call(SVar("subs-args"),[]),Op("TCons",[Var("sbs"),Op("TCons",[Var("t"),Op("TNil",[])])])),Seq(Build(Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("varshape"),[])]),LChoice(Seq(Call(SVar("Fst"),[]),Seq(Call(SVar("SubsVar"),[Call(SVar("isvar"),[]),Build(Var("sbs"))]),Call(SVar("ren"),[]))),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[]),Call(SVar("paste"),[])]),Call(SVar("DistBinding"),[Call(SVar("x"),[]),Call(SVar("boundin"),[])]))))]))))),SDef("substitute",[DefaultVarDec("isvar"),VarDec("varshape",FunType([ConstType(Var("name")),FunType([ConstType(Var("name"))],ConstType(Var("env")))],ConstType(Var("term")))),DefaultVarDec("bndvars"),VarDec("boundin",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term"))),FunType([ConstType(Var("term"))],ConstType(Var("term")))],ConstType(Var("term")))),VarDec("paste",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("vars")))],ConstType(Var("term"))))],Call(SVar("substitute"),[Call(SVar("isvar"),[]),Call(SVar("varshape"),[]),Call(SVar("bndvars"),[]),Call(SVar("boundin"),[]),Call(SVar("paste"),[]),Id]))]),Strategies([SDef("table-create",[],Seq(Match(Var("name")),Prim("SSL_table_create",[Var("name")]))),SDef("table-destroy",[],Seq(Match(Var("name")),Prim("SSL_table_destroy",[Var("name")]))),SDef("table-put",[],Where(Seq(Match(Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TCons",[Var("value"),Op("TNil",[])])])])),Prim("SSL_table_put",[Var("table"),Var("key"),Var("value")])))),SDef("table-get",[],Seq(Match(Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TNil",[])])])),Prim("SSL_table_get",[Var("table"),Var("key")]))),SDef("table-remove",[],Where(Seq(Match(Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TNil",[])])])),Prim("SSL_table_remove",[Var("table"),Var("key")])))),SDef("table-keys",[],Seq(Match(Var("table")),Prim("SSL_table_keys",[Var("table")]))),SDef("table-getlist",[],Seq(Match(Var("name")),Seq(Call(SVar("table-keys"),[]),Call(SVar("map"),[LRule(Rule(Var("x"),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("table-get"),[]),Op("TCons",[Var("name"),Op("TCons",[Var("x"),Op("TNil",[])])])),Op("TNil",[])])]),Id))])))),SDef("table-putlist",[],Seq(Match(Op("TCons",[Var("name"),Op("TCons",[Var("list"),Op("TNil",[])])])),BA(Call(SVar("map"),[Scope(["x","y"],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),BA(Call(SVar("table-put"),[]),Op("TCons",[Var("name"),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])]))))]),Var("list"))))]),Strategies([SDef("table-push",[],Seq(Match(Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TCons",[Var("val"),Op("TNil",[])])])])),Where(BA(Call(SVar("table-put"),[]),Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TCons",[Op("Cons",[Var("val"),App(LChoice(Call(SVar("table-get"),[]),Build(Op("Nil",[]))),Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TNil",[])])]))]),Op("TNil",[])])])]))))),SDef("table-pop",[],Seq(Match(Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TNil",[])])])),Where(BA(Call(SVar("table-put"),[]),Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TCons",[App(LChoice(Seq(Call(SVar("table-get"),[]),Call(SVar("Tl"),[])),Build(Op("Nil",[]))),Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TNil",[])])])),Op("TNil",[])])])]))))),SDef("table-pop-get",[],Seq(Match(Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TNil",[])])])),Seq(Where(Seq(AM(BA(Call(SVar("table-get"),[]),Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TNil",[])])])),Op("Cons",[Var("val"),Var("vals")])),BA(Call(SVar("table-put"),[]),Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TCons",[Var("vals"),Op("TNil",[])])])])))),Build(Var("val"))))),SDef("table-lookup",[],Seq(Match(Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TNil",[])])])),Seq(BA(Call(SVar("table-get"),[]),Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TNil",[])])])),Call(SVar("Hd"),[])))),SDef("table-replace",[],Seq(Match(Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TCons",[Var("value"),Op("TNil",[])])])])),Where(Seq(AM(BA(Call(SVar("table-get"),[]),Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TNil",[])])])),Op("Cons",[Wld,Var("values")])),BA(Call(SVar("table-put"),[]),Op("TCons",[Var("dis"),Op("TCons",[Var("key"),Op("TCons",[Op("Cons",[Var("value"),Var("values")]),Op("TNil",[])])])])))))),SDef("table-union",[],Seq(Match(Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TCons",[Var("val"),Op("TNil",[])])])])),Where(BA(Call(SVar("set"),[]),Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TCons",[App(Call(SVar("union"),[]),Op("TCons",[Var("val"),Op("TCons",[App(LChoice(Call(SVar("get"),[]),Build(Op("Nil",[]))),Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TNil",[])])])),Op("TNil",[])])])),Op("TNil",[])])])]))))),SDef("table-diff",[],Seq(Match(Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TCons",[Var("val"),Op("TNil",[])])])])),Where(BA(Call(SVar("set"),[]),Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TCons",[App(Call(SVar("diff"),[]),Op("TCons",[App(LChoice(Call(SVar("get"),[]),Build(Op("Nil",[]))),Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TNil",[])])])),Op("TCons",[Var("val"),Op("TNil",[])])])),Op("TNil",[])])])]))))),SDef("set",[],Call(SVar("table-put"),[])),SDef("get",[],Call(SVar("table-get"),[]))]),Strategies([SDef("destroy-display",[],Seq(Call(SVar("obsolete"),[Build(Str("destroy-display; use table-destroy"))]),Call(SVar("table-destroy"),[]))),SDef("create-display",[],Seq(Call(SVar("obsolete"),[Build(Str("create-display; use table-create"))]),Call(SVar("table-create"),[]))),SDef("display-lookup",[],Seq(Call(SVar("obsolete"),[Build(Str("display-lookup; use table-lookup"))]),Call(SVar("table-lookup"),[]))),SDef("display-replace",[],Seq(Call(SVar("obsolete"),[Build(Str("display-replace; use table-replace"))]),Call(SVar("table-replace"),[]))),SDef("display-pop",[],Seq(Call(SVar("obsolete"),[Build(Str("display-pop; use table-pop"))]),Call(SVar("table-pop"),[]))),SDef("display-push",[],Seq(Call(SVar("obsolete"),[Build(Str("display-push; use table-push"))]),Call(SVar("table-push"),[]))),SDef("push-set",[],Seq(Call(SVar("obsolete"),[Build(Str("push-set; use table-push"))]),Call(SVar("table-push"),[]))),SDef("pop-get",[],Seq(Call(SVar("obsolete"),[Build(Str("pop-get; use table-pop-get"))]),Call(SVar("table-pop-get"),[]))),SDef("union-set",[],Seq(Call(SVar("obsolete"),[Build(Str("union-set; use table-union"))]),Call(SVar("table-union"),[]))),SDef("diff-set",[],Seq(Call(SVar("obsolete"),[Build(Str("diff-set; use table-diff"))]),Call(SVar("table-diff"),[]))),SDef("create-table",[],Seq(Call(SVar("obsolete"),[Build(Str("create-table: use table-create"))]),Call(SVar("table-create"),[]))),SDef("destroy-table",[],Seq(Call(SVar("obsolete"),[Build(Str("destroy-table: use table-destroy"))]),Call(SVar("table-destroy"),[])))]),Strategies([SDef("exit",[],Seq(Match(Var("n")),Prim("SSL_exit",[Var("n")]))),SDef("call",[],Seq(Match(Op("TCons",[Var("prog"),Op("TCons",[Var("args"),Op("TNil",[])])])),Prim("SSL_call",[Var("prog"),Var("args")]))),SDef("call-noisy",[],Seq(Match(Op("TCons",[Var("prog"),Op("TCons",[Var("args"),Op("TNil",[])])])),Prim("SSL_call_noisy",[Var("prog"),Var("args")]))),SDef("get-pid",[],Prim("SSL_get_pid",[])),SDef("rm-files",[],Seq(Match(Var("files")),Where(BA(Call(SVar("call"),[]),Op("TCons",[Str("rm"),Op("TCons",[Op("Cons",[Str("-f"),Var("files")]),Op("TNil",[])])]))))),SDef("pipe",[DefaultVarDec("c"),DefaultVarDec("suf2")],Call(SVar("pipe'"),[Call(SVar("c"),[]),Call(SVar("suf2"),[]),Build(Op("Nil",[]))])),SDef("pipe'",[DefaultVarDec("c"),DefaultVarDec("suf2"),DefaultVarDec("args")],Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("in"))),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("suf2"),[]),Call(SVar("TNil"),[])])]),Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("out"))),Where(BA(Call(SVar("call"),[]),Op("TCons",[App(Call(SVar("c"),[]),Op("TNil",[])),Op("TCons",[Op("Cons",[Str("-i"),Op("Cons",[Var("in"),Op("Cons",[Str("-o"),Op("Cons",[Var("out"),App(Call(SVar("args"),[]),Op("TNil",[]))])])])]),Op("TNil",[])])]))))))),SDef("transform-file",[DefaultVarDec("s"),DefaultVarDec("suf")],Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("in"))),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("suf"),[]),Call(SVar("TNil"),[])])]),Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("out"))),Where(BA(Call(SVar("apply-to-file"),[Call(SVar("s"),[])]),Op("TCons",[Var("in"),Op("TCons",[Var("out"),Op("TNil",[])])]))))))),SDef("apply-to-file",[DefaultVarDec("s")],Seq(Match(Op("TCons",[Var("in"),Op("TCons",[Var("out"),Op("TNil",[])])])),Seq(Where(AM(BA(Seq(Call(SVar("ReadFromFile"),[]),Call(SVar("s"),[])),Var("in")),Var("trm"))),Where(BA(Call(SVar("WriteToBinaryFile"),[]),Op("TCons",[Var("out"),Op("TCons",[Var("trm"),Op("TNil",[])])])))))),SDef("copy-file",[DefaultVarDec("s"),DefaultVarDec("new-base"),DefaultVarDec("new-suf")],Seq(Match(Op("TCons",[Var("base"),Op("TCons",[Var("suf"),Op("TNil",[])])])),Seq(Call(SVar("TCons"),[Call(SVar("new-base"),[]),Call(SVar("TCons"),[Call(SVar("new-suf"),[]),Call(SVar("TNil"),[])])]),Seq(Match(Op("TCons",[Var("nbase"),Op("TCons",[Var("nsuf"),Op("TNil",[])])])),Where(BA(Call(SVar("apply-to-file"),[Call(SVar("s"),[])]),Op("TCons",[App(Call(SVar("conc-strings"),[]),Op("TCons",[Var("base"),Op("TCons",[Var("suf"),Op("TNil",[])])])),Op("TCons",[App(Call(SVar("conc-strings"),[]),Op("TCons",[Var("nbase"),Op("TCons",[Var("nsuf"),Op("TNil",[])])])),Op("TNil",[])])]))))))),SDef("apply-program",[DefaultVarDec("name")],Call(SVar("apply-program"),[Call(SVar("name"),[]),Build(Op("Nil",[]))])),SDef("apply-program",[DefaultVarDec("name"),DefaultVarDec("args")],Call(SVar("temp-file"),[Seq(Match(Op("TCons",[Var("infile"),Op("TCons",[Wld,Op("TNil",[])])])),Seq(Call(SVar("WriteToBinaryFile"),[]),Call(SVar("temp-file"),[Seq(Match(Op("TCons",[Var("outfile"),Op("TCons",[Wld,Op("TNil",[])])])),Seq(BA(Call(SVar("call"),[]),Op("TCons",[App(Call(SVar("name"),[]),Op("TNil",[])),Op("TCons",[Op("Cons",[Str("-i"),Op("Cons",[Var("infile"),Op("Cons",[Str("-o"),Op("Cons",[Var("outfile"),App(Call(SVar("args"),[]),Op("TNil",[]))])])])]),Op("TNil",[])])])),BA(Call(SVar("ReadFromFile"),[]),Var("outfile"))))])))]))]),Signature([Sorts([Sort("Option",Nokind)]),Operations([OpDecl("Program",FunType([ConstType(Var("String"))],ConstType(Var("Option")))),OpDecl("Undefined",FunType([ConstType(Var("String"))],ConstType(Var("Option"))))])]),Strategies([SDef("parse-options",[DefaultVarDec("s")],Call(SVar("Cons"),[LRule(Rule(Var("x"),Op("Program",[Var("x")]),Id)),Rec("x",LChoice(Choice(Call(SVar("Nil"),[]),Seq(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])]))),Call(SVar("UndefinedOption"),[])))]))]),Rules([RDef("Option",[DefaultVarDec("is-flag"),DefaultVarDec("label")],Rule(Op("Cons",[Var("flag"),Var("rest")]),Op("Cons",[App(Call(SVar("label"),[]),Op("TNil",[])),Var("rest")]),Where(BA(Call(SVar("is-flag"),[]),Var("flag"))))),RDef("ArgOption",[DefaultVarDec("is-flag"),DefaultVarDec("label")],Rule(Op("Cons",[Var("flag"),Op("Cons",[Var("arg"),Var("rest")])]),Op("Cons",[App(Call(SVar("label"),[]),Var("arg")),Var("rest")]),Where(BA(Call(SVar("is-flag"),[]),Var("flag"))))),RDef("Arg2Option",[DefaultVarDec("is-flag"),DefaultVarDec("label")],Rule(Op("Cons",[Var("flag"),Op("Cons",[Var("arg1"),Op("Cons",[Var("arg2"),Var("rest")])])]),Op("Cons",[App(Call(SVar("label"),[]),Op("TCons",[Var("arg1"),Op("TCons",[Var("arg2"),Op("TNil",[])])])),Var("rest")]),Where(BA(Call(SVar("is-flag"),[]),Var("flag"))))),RDef("UndefinedOption",[],Rule(Op("Cons",[Var("x"),Var("rest")]),Op("Cons",[Op("Undefined",[Var("x")]),Var("rest")]),Id))]),Strategies([SDef("defined-option",[DefaultVarDec("s")],Call(SVar("fetch"),[Call(SVar("s"),[])])),SDef("option-defined",[DefaultVarDec("s")],Call(SVar("fetch"),[Call(SVar("s"),[])])),SDef("arg-option-value",[DefaultVarDec("s")],Call(SVar("fetch"),[Call(SVar("s"),[])]))]),Signature([Operations([OpDecl("Silent",ConstType(Var("Option"))),OpDecl("Verbose",ConstType(Var("Option"))),OpDecl("Version",ConstType(Var("Option"))),OpDecl("Input",FunType([ConstType(Var("String"))],ConstType(Var("Option")))),OpDecl("Output",FunType([ConstType(Var("String"))],ConstType(Var("Option")))),OpDecl("Binary",ConstType(Var("Option"))),OpDecl("Statistics",ConstType(Var("Option"))),OpDecl("Help",ConstType(Var("Option"))),OpDecl("Runtime",FunType([ConstType(Var("Real"))],ConstType(Var("Option")))),OpDecl("DeclVersion",FunType([ConstType(Var("String"))],ConstType(Var("Option"))))])]),Strategies([SDef("iowrap",[DefaultVarDec("strat")],Call(SVar("iowrap"),[Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("strat"),[]),Call(SVar("TNil"),[])])]),Fail])),SDef("iowrapO",[DefaultVarDec("strat"),DefaultVarDec("extra-options")],Seq(Call(SVar("obsolete"),[Build(Str("iowrapO/2: use iowrap/2"))]),Call(SVar("iowrap"),[Call(SVar("strat"),[]),Call(SVar("extra-options"),[])]))),SDef("iowrap",[DefaultVarDec("strat"),DefaultVarDec("extra-options")],Call(SVar("iowrap"),[Call(SVar("strat"),[]),Call(SVar("extra-options"),[]),Call(SVar("default-usage"),[])])),SDef("iowrapO",[DefaultVarDec("strat"),DefaultVarDec("extra-options"),DefaultVarDec("usage")],Seq(Call(SVar("obsolete"),[Build(Str("iowrapO/3: use iowrap/3"))]),Call(SVar("iowrap"),[Call(SVar("strat"),[]),Call(SVar("extra-options"),[]),Call(SVar("usage"),[])]))),SDef("iowrap",[DefaultVarDec("strat"),DefaultVarDec("extra-options"),DefaultVarDec("usage")],Seq(Call(SVar("parse-options"),[LChoice(Call(SVar("extra-options"),[]),Call(SVar("io-options"),[]))]),Seq(Call(SVar("store-options"),[]),LChoice(Call(SVar("need-help"),[Call(SVar("usage"),[])]),LChoice(Seq(Call(SVar("input-file"),[]),Seq(Call(SVar("apply-strategy"),[Call(SVar("strat"),[])]),Seq(Call(SVar("output-file"),[]),Call(SVar("report-success"),[])))),Call(SVar("report-failure"),[])))))),SDef("iowrapNoOutput",[DefaultVarDec("strat"),DefaultVarDec("extra-options")],Call(SVar("iowrapNoOutput"),[Call(SVar("strat"),[]),Call(SVar("extra-options"),[]),Call(SVar("default-usage"),[])])),SDef("iowrapNoOutput",[DefaultVarDec("strat"),DefaultVarDec("extra-options"),DefaultVarDec("usage")],Seq(Call(SVar("parse-options"),[LChoice(Call(SVar("extra-options"),[]),Call(SVar("io-options"),[]))]),Seq(Call(SVar("store-options"),[]),LChoice(Call(SVar("need-help"),[Call(SVar("usage"),[])]),LChoice(Seq(Call(SVar("input-file"),[]),Seq(Call(SVar("apply-strategy"),[Call(SVar("strat"),[])]),Call(SVar("report-success"),[]))),Call(SVar("report-failure"),[])))))),SDef("store-options",[],Seq(Match(Var("options")),Where(Seq(BA(Call(SVar("table-create"),[]),Str("option-table")),BA(Call(SVar("table-put"),[]),Op("TCons",[Str("option-table"),Op("TCons",[Str("options"),Op("TCons",[Var("options"),Op("TNil",[])])])])))))),SDef("get-options",[],BA(Call(SVar("table-get"),[]),Op("TCons",[Str("option-table"),Op("TCons",[Str("options"),Op("TNil",[])])]))),SDef("has-option",[DefaultVarDec("s")],Test(BA(Seq(Call(SVar("s"),[]),Call(SVar("check-option"),[])),Op("TNil",[])))),SDef("option-value",[DefaultVarDec("s"),DefaultVarDec("default")],LChoice(Seq(Call(SVar("get-options"),[]),Call(SVar("fetch-elem"),[Call(SVar("s"),[])])),Call(SVar("default"),[])))]),Rules([RDef("check-option",[],Rule(Var("option"),Op("TNil",[]),Where(Seq(AM(Call(SVar("get-options"),[]),Var("ops")),BA(Call(SVar("in"),[]),Op("TCons",[Var("option"),Op("TCons",[Var("ops"),Op("TNil",[])])]))))))]),Strategies([SDef("io-options",[],Choice(Call(SVar("Option"),[Match(Str("-S")),Build(Op("Silent",[]))]),Choice(Call(SVar("Option"),[Match(Str("--silent")),Build(Op("Silent",[]))]),Choice(Call(SVar("Option"),[Match(Str("--verbose")),Build(Op("Verbose",[]))]),Choice(Call(SVar("Option"),[Match(Str("-v")),Build(Op("Version",[]))]),Choice(Call(SVar("Option"),[Match(Str("--version")),Build(Op("Version",[]))]),Choice(Call(SVar("ArgOption"),[Match(Str("@version")),LRule(Rule(Var("x"),Op("DeclVersion",[Var("x")]),Id))]),Choice(Call(SVar("ArgOption"),[Match(Str("-i")),LRule(Rule(Var("x"),Op("Input",[Var("x")]),Id))]),Choice(Call(SVar("ArgOption"),[Match(Str("--input")),LRule(Rule(Var("x"),Op("Input",[Var("x")]),Id))]),Choice(Call(SVar("ArgOption"),[Match(Str("-o")),LRule(Rule(Var("x"),Op("Output",[Var("x")]),Id))]),Choice(Call(SVar("ArgOption"),[Match(Str("--output")),LRule(Rule(Var("x"),Op("Output",[Var("x")]),Id))]),Choice(Call(SVar("Option"),[Match(Str("-b")),Build(Op("Binary",[]))]),Choice(Call(SVar("Option"),[Match(Str("-s")),Build(Op("Statistics",[]))]),Choice(Call(SVar("Option"),[Match(Str("--help")),Build(Op("Help",[]))]),Choice(Call(SVar("Option"),[Match(Str("-h")),Build(Op("Help",[]))]),Call(SVar("Option"),[Match(Str("-?")),Build(Op("Help",[]))])))))))))))))))),SDef("usage'",[],Call(SVar("obsolete"),[Build(Str("usage': use default-usage"))])),SDef("default-usage",[],Where(Seq(Call(SVar("option-defined"),[Match(Op("Program",[Var("prog")]))]),Seq(BA(Call(SVar("printnl"),[]),Op("TCons",[Var("stderr"),Op("TCons",[Op("Cons",[Str("usage : "),Op("Cons",[Var("prog"),Op("Cons",[Str(" [-S] [-i file] [-o file] [-b] [-s] [--help|-h|-?]"),Op("Nil",[])])])]),Op("TNil",[])])])),BA(Call(SVar("exit"),[]),Int(1)))))),SDef("need-help",[DefaultVarDec("u")],Seq(Call(SVar("option-defined"),[Choice(Call(SVar("Help"),[]),Choice(Call(SVar("Undefined"),[Id]),Call(SVar("Version"),[])))]),Call(SVar("u"),[]))),SDef("need-help",[],Call(SVar("need-help"),[Call(SVar("default-usage"),[])])),SDef("input-file'",[],Seq(Call(SVar("obsolete"),[Build(Str("input-file'; use input-file"))]),Call(SVar("input-file"),[]))),SDef("input-file",[],Seq(Where(LChoice(Call(SVar("option-defined"),[Match(Op("Input",[Var("infile")]))]),AM(Build(Var("stdin")),Var("infile")))),Call(SVar("split"),[Id,BA(Call(SVar("ReadFromFile"),[]),Var("infile"))]))),SDef("apply-strategy",[DefaultVarDec("strat")],Seq(Where(Call(SVar("dtime"),[])),Seq(Call(SVar("strat"),[]),Seq(Where(AM(Call(SVar("dtime"),[]),Var("runtime"))),LRule(Rule(Op("TCons",[Var("options"),Op("TCons",[Var("trm"),Op("TNil",[])])]),Op("TCons",[Op("Cons",[Op("Runtime",[Var("runtime")]),Var("options")]),Op("TCons",[Var("trm"),Op("TNil",[])])]),Id)))))),SDef("output-file'",[],Seq(Call(SVar("obsolete"),[Build(Str("output-file'; use output-file"))]),Call(SVar("output-file"),[]))),SDef("output-file",[],Seq(Where(Call(SVar("TCons"),[LChoice(Call(SVar("option-defined"),[Match(Op("Output",[Var("outfile")]))]),AM(Build(Var("stdout")),Var("outfile"))),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])])),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("split"),[Build(Var("outfile")),Id]),Call(SVar("TNil"),[])])]),LChoice(Call(SVar("TCons"),[Call(SVar("option-defined"),[Match(Op("Binary",[]))]),Call(SVar("TCons"),[Call(SVar("WriteToBinaryFile"),[]),Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("WriteToTextFile"),[]),Call(SVar("TNil"),[])])]))))),SDef("report-success",[],Seq(Where(Call(SVar("try"),[Seq(Call(SVar("TCons"),[Not(Call(SVar("option-defined"),[Match(Op("Silent",[]))])),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("option-defined"),[Match(Op("Runtime",[Var("runtime")]))]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("option-defined"),[Match(Op("Program",[Var("prog")]))]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),BA(Call(SVar("printnl"),[]),Op("TCons",[Var("stderr"),Op("TCons",[Op("Cons",[Var("prog"),Op("Cons",[Str(" ("),Op("Cons",[Var("runtime"),Op("Cons",[Str(" secs)"),Op("Nil",[])])])])]),Op("TNil",[])])])))))])),BA(Call(SVar("exit"),[]),Int(0)))),SDef("report-failure",[],Seq(BA(Call(SVar("printnl"),[]),Op("TCons",[Var("stderr"),Op("TCons",[Op("Cons",[Str("rewriting failed"),Op("Nil",[])]),Op("TNil",[])])])),BA(Call(SVar("exit"),[]),Int(1))))]),Strategies([SDef("memo-init",[],Call(SVar("table-create"),[])),SDef("memo-purge",[],Call(SVar("table-destroy"),[]))]),Rules([RDef("memo",[DefaultVarDec("name"),DefaultVarDec("s")],Rule(Var("t"),Var("t'"),Where(LChoice(AM(BA(Call(SVar("table-get"),[]),Op("TCons",[App(Call(SVar("name"),[]),Op("TNil",[])),Op("TCons",[Var("t"),Op("TNil",[])])])),Var("t'")),Seq(AM(BA(Call(SVar("s"),[]),Var("t")),Var("t'")),BA(Call(SVar("table-put"),[]),Op("TCons",[App(Call(SVar("name"),[]),Op("TNil",[])),Op("TCons",[Var("t"),Op("TCons",[Var("t'"),Op("TNil",[])])])])))))))]),Rules([RDef("find-in-path",[],Rule(Op("TCons",[Var("file"),Op("TCons",[Var("path"),Op("TNil",[])])]),App(Rec("x",LChoice(LRule(Rule(Op("Cons",[Var("dir"),Wld]),App(Seq(Call(SVar("concat-strings"),[]),Call(SVar("file-exists"),[])),Op("Cons",[Var("dir"),Op("Cons",[Str("/"),Op("Cons",[Var("file"),Op("Nil",[])])])])),Id)),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[])))),Var("path")),Id))]),Strategies([SDef("find-in-path",[DefaultVarDec("mkpath")],LChoice(Call(SVar("file-exists"),[]),LChoice(Seq(Call(SVar("split"),[Id,Call(SVar("mkpath"),[])]),Call(SVar("find-in-path"),[])),LRule(Rule(Var("x"),App(Call(SVar("fatal-error"),[]),Op("Cons",[Str("no such file: "),Op("Cons",[Var("x"),Op("Nil",[])])])),Id))))),SDef("find-file",[DefaultVarDec("mkpath"),DefaultVarDec("ext")],Seq(Call(SVar("guarantee-extension"),[Call(SVar("ext"),[])]),Call(SVar("find-in-path"),[Call(SVar("mkpath"),[])])))]),Strategies([SDef("dtime",[],Prim("SSL_dtime",[]))]),Signature([Sorts([Sort("File",Nokind)]),Operations([OpDecl("stdin",ConstType(Var("File"))),OpDecl("stdout",ConstType(Var("File"))),OpDecl("stderr",ConstType(Var("File")))])]),Strategies([SDef("file-exists",[],Seq(Match(Var("name")),Seq(Prim("SSL_open_file",[Var("name"),Str("r")]),Prim("SSL_close_file",[Var("name")])))),SDef("close-file",[],Seq(Match(Var("name")),Prim("SSL_close_file",[Var("name")]))),SDef("open-file",[],LChoice(Seq(Match(Op("TCons",[Var("name"),Op("TCons",[Var("mode"),Op("TNil",[])])])),Prim("SSL_open_file",[Var("name"),Var("mode")])),Seq(Call(SVar("obsolete"),[Build(Str("<open-file> file; use <open-file>(file, mode)"))]),Seq(Match(Var("name")),Prim("SSL_open_file",[Var("name"),Str("w")]))))),SDef("append-file",[],Seq(Match(Var("name")),Prim("SSL_open_file",[Var("name"),Str("a")]))),SDef("print",[],Seq(Match(Op("TCons",[Var("name"),Op("TCons",[Var("strs"),Op("TNil",[])])])),Where(Prim("SSL_print",[Var("name"),Var("strs")])))),SDef("printnl",[],Seq(Match(Op("TCons",[Var("name"),Op("TCons",[Var("strs"),Op("TNil",[])])])),Where(Prim("SSL_printnl",[Var("name"),Var("strs")])))),SDef("printascii",[],Seq(Match(Op("TCons",[Var("name"),Op("TCons",[Var("strs"),Op("TNil",[])])])),Where(Prim("SSL_printascii",[Var("name"),Var("strs")])))),SDef("getchar",[],Seq(Match(Var("file")),Prim("SSL_getchar",[Var("file")]))),SDef("readline",[],Seq(Match(Var("file")),Rec("x",LChoice(Build(Op("Cons",[App(Seq(Call(SVar("getchar"),[]),Not(Match(Int(10)))),Var("file")),App(Call(SVar("x"),[]),Op("TNil",[]))])),Build(Op("Nil",[])))))),SDef("ReadFromFile",[],Seq(Match(Var("file")),Prim("SSL_ReadFromFile",[Var("file")]))),SDef("WriteToBinaryFile",[],Seq(Match(Op("TCons",[Var("file"),Op("TCons",[Var("t"),Op("TNil",[])])])),Prim("SSL_WriteToBinaryFile",[Var("file"),Var("t")]))),SDef("WriteToTextFile",[],Seq(Match(Op("TCons",[Var("file"),Op("TCons",[Var("t"),Op("TNil",[])])])),Prim("SSL_WriteToTextFile",[Var("file"),Var("t")]))),SDef("print-stack",[],Call(SVar("obsolete"),[Build(Str("print-stack; use debug or gdb"))]))]),Strategies([SDef("open",[DefaultVarDec("file")],Seq(Call(SVar("file"),[]),Call(SVar("ReadFromFile"),[]))),SDef("save",[DefaultVarDec("file")],Seq(Call(SVar("split"),[Call(SVar("file"),[]),Id]),Call(SVar("WriteToTextFile"),[]))),SDef("debug",[],Where(Seq(Call(SVar("split"),[Build(Var("stderr")),LRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id))]),Call(SVar("printnl"),[])))),SDef("debug",[DefaultVarDec("msg")],Where(Seq(Call(SVar("split"),[Build(Var("stderr")),LRule(Rule(Var("x"),Op("Cons",[App(Call(SVar("msg"),[]),Op("TNil",[])),Op("Cons",[Var("x"),Op("Nil",[])])]),Id))]),Call(SVar("printnl"),[])))),SDef("say",[DefaultVarDec("msg")],Where(Seq(Call(SVar("msg"),[]),Call(SVar("debug"),[])))),SDef("echo",[],Where(Seq(Call(SVar("split"),[Build(Var("stdout")),LRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id))]),Call(SVar("printnl"),[])))),SDef("echo",[DefaultVarDec("msg")],Where(Seq(Call(SVar("split"),[Build(Var("stdout")),LRule(Rule(Var("x"),Op("Cons",[App(Call(SVar("msg"),[]),Op("TNil",[])),Op("Cons",[Var("x"),Op("Nil",[])])]),Id))]),Call(SVar("printnl"),[])))),SDef("debug-stdout",[DefaultVarDec("msg")],Seq(Call(SVar("obsolete"),[Build(Str("debug-stdout; use echo"))]),Where(Seq(Call(SVar("split"),[Build(Var("stdout")),LRule(Rule(Var("x"),Op("Cons",[App(Call(SVar("msg"),[]),Op("TNil",[])),Op("Cons",[Var("x"),Op("Nil",[])])]),Id))]),Call(SVar("printnl"),[]))))),SDef("trace",[DefaultVarDec("msg"),DefaultVarDec("s")],Seq(Call(SVar("debug"),[Call(SVar("msg"),[])]),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("debug"),[Build(Str("succeeded: "))])),Call(SVar("debug"),[Build(Str("failed: "))])))),SDef("error",[],Where(Seq(Call(SVar("split"),[Build(Var("stderr")),Id]),Call(SVar("printnl"),[])))),SDef("fatal-error",[],Where(Seq(Call(SVar("error"),[]),BA(Call(SVar("exit"),[]),Int(1))))),SDef("giving-up",[],BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("giving-up"),Op("Nil",[])]))),SDef("printchar",[],Where(Seq(Call(SVar("split"),[Build(Var("stdout")),LRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id))]),Call(SVar("printascii"),[])))),SDef("printstring",[],Where(Seq(Call(SVar("split"),[Build(Var("stdout")),LRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id))]),Call(SVar("print"),[])))),SDef("print-strings-nl",[DefaultVarDec("out")],Where(Seq(Call(SVar("split"),[Call(SVar("out"),[]),Id]),Call(SVar("printnl"),[])))),SDef("obsolete",[DefaultVarDec("msg")],Where(Seq(Call(SVar("msg"),[]),Call(SVar("debug"),[Build(Str("obsolete library strategy: "))])))),SDef("Assert",[DefaultVarDec("s"),DefaultVarDec("msg")],LChoice(Test(Call(SVar("s"),[])),Call(SVar("debug"),[Call(SVar("msg"),[])])))]),Strategies([SDef("stdio",[DefaultVarDec("s")],LChoice(Seq(BA(Call(SVar("ReadFromFile"),[]),Var("stdin")),Seq(Call(SVar("s"),[]),Seq(Call(SVar("split"),[Build(Var("stdout")),Id]),Call(SVar("WriteToTextFile"),[])))),BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("** rewriting failed"),Op("Nil",[])]))))]),Strategies([SDef("stdioO",[DefaultVarDec("s")],LChoice(Seq(Call(SVar("split"),[Id,BA(Call(SVar("ReadFromFile"),[]),Var("stdin"))]),Seq(Call(SVar("s"),[]),Seq(Call(SVar("split"),[Build(Var("stdout")),Id]),Call(SVar("WriteToTextFile"),[])))),BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("** rewriting failed"),Op("Nil",[])]))))]),Strategies([SDef("new-file",[],Rec("x",Seq(BA(Call(SVar("conc-strings"),[]),Op("TCons",[App(Call(SVar("new"),[]),Op("TNil",[])),Op("TCons",[Str(".tmp"),Op("TNil",[])])])),Call(SVar("try"),[Seq(Call(SVar("file-exists"),[]),Call(SVar("x"),[]))])))),SDef("temp-file",[DefaultVarDec("s")],Seq(Where(AM(Call(SVar("new-file"),[]),Var("f"))),Seq(Call(SVar("split"),[Build(Var("f")),Id]),LChoice(Seq(Call(SVar("s"),[]),Where(BA(Call(SVar("rm-files"),[]),Op("Cons",[Var("f"),Op("Nil",[])])))),Seq(Where(BA(Call(SVar("rm-files"),[]),Op("Cons",[Var("f"),Op("Nil",[])]))),Fail)))))]),Strategies([SDef("is-real",[],Seq(Match(Var("x")),Prim("SSL_is_real",[Var("x")]))),SDef("cos",[],Seq(Match(Var("x")),Prim("SSL_cos",[Var("x")]))),SDef("sin",[],Seq(Match(Var("x")),Prim("SSL_sin",[Var("x")]))),SDef("sqrt",[],Seq(Match(Var("x")),Prim("SSL_sqrt",[Var("x")]))),SDef("atan2",[],Seq(Match(Var("x")),Prim("SSL_atan2",[Var("x")]))),SDef("real-to-string",[],Seq(Match(Var("x")),Prim("SSL_real_to_string",[Var("x")]))),SDef("string-to-real",[],Seq(Match(Var("x")),Prim("SSL_string_to_real",[Var("x")]))),SDef("real",[],Seq(Match(Var("x")),Prim("SSL_real",[Var("x")])))]),Strategies([SDef("is-int",[],Seq(Match(Var("i")),Prim("SSL_is_int",[Var("i")]))),SDef("minus",[],Seq(Call(SVar("obsolete"),[Build(Str("minus; use subt"))]),Call(SVar("subt"),[]))),SDef("plus",[],Seq(Call(SVar("obsolete"),[Build(Str("plus; use add"))]),Call(SVar("add"),[]))),SDef("add",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),LChoice(Prim("SSL_addi",[Var("x"),Var("y")]),Prim("SSL_addr",[Var("x"),Var("y")])))),SDef("addi",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Prim("SSL_addi",[Var("x"),Var("y")]))),SDef("addr",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Prim("SSL_addr",[Var("x"),Var("y")]))),SDef("subt",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),LChoice(Prim("SSL_subti",[Var("x"),Var("y")]),Prim("SSL_subtr",[Var("x"),Var("y")])))),SDef("subti",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Prim("SSL_subti",[Var("x"),Var("y")]))),SDef("subtr",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Prim("SSL_subtr",[Var("x"),Var("y")]))),SDef("mul",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),LChoice(Prim("SSL_muli",[Var("x"),Var("y")]),Prim("SSL_mulr",[Var("x"),Var("y")])))),SDef("muli",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Prim("SSL_muli",[Var("x"),Var("y")]))),SDef("mulr",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Prim("SSL_mulr",[Var("x"),Var("y")]))),SDef("div",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),LChoice(Prim("SSL_divi",[Var("x"),Var("y")]),Prim("SSL_divr",[Var("x"),Var("y")])))),SDef("divi",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Prim("SSL_divi",[Var("x"),Var("y")]))),SDef("divr",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Prim("SSL_divr",[Var("x"),Var("y")]))),SDef("mod",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Prim("SSL_mod",[Var("x"),Var("y")]))),SDef("gt",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Test(LChoice(Prim("SSL_gti",[Var("x"),Var("y")]),Prim("SSL_gtr",[Var("x"),Var("y")]))))),SDef("gti",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Test(Prim("SSL_gti",[Var("x"),Var("y")])))),SDef("gtr",[],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Test(Prim("SSL_gtr",[Var("x"),Var("y")])))),SDef("geq",[],LChoice(Match(Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])])),Call(SVar("gt"),[]))),SDef("lt",[],Not(Call(SVar("geq"),[]))),SDef("leq",[],Not(Call(SVar("gt"),[]))),SDef("max",[],LChoice(Seq(Call(SVar("gt"),[]),Call(SVar("Fst"),[])),Call(SVar("Snd"),[]))),SDef("min",[],LChoice(Seq(Call(SVar("gt"),[]),Call(SVar("Snd"),[])),Call(SVar("Fst"),[]))),SDef("int",[],Seq(Match(Var("x")),Prim("SSL_int",[Var("x")]))),SDef("int-to-string",[],Seq(Match(Var("x")),Prim("SSL_int_to_string",[Var("x")]))),SDef("string-to-int",[],Seq(Match(Var("x")),Prim("SSL_string_to_int",[Var("x")])))]),Rules([RDef("inc",[],Rule(Var("a"),App(Call(SVar("add"),[]),Op("TCons",[Var("a"),Op("TCons",[Int(1),Op("TNil",[])])])),Id)),RDef("dec",[],Rule(Var("a"),App(Call(SVar("subt"),[]),Op("TCons",[Var("a"),Op("TCons",[Int(1),Op("TNil",[])])])),Id))]),Strategies([SDef("sum",[],Call(SVar("foldr"),[Build(Int(0)),Call(SVar("add"),[])])),SDef("average",[],Seq(Call(SVar("split"),[Call(SVar("sum"),[]),Call(SVar("length"),[])]),Call(SVar("div"),[]))),SDef("list-min",[],Call(SVar("list-accum"),[Call(SVar("min"),[])])),SDef("list-max",[],Call(SVar("list-accum"),[Call(SVar("max"),[])])),SDef("list-accum",[DefaultVarDec("s")],Seq(Call(SVar("split"),[Call(SVar("Tl"),[]),Call(SVar("Hd"),[])]),Call(SVar("foldl"),[Call(SVar("s"),[])]))),SDef("add-lists",[],Call(SVar("list-accum"),[Call(SVar("zip"),[LChoice(Call(SVar("add"),[]),Build(Str("")))])])),SDef("averages",[],Scope(["len"],Seq(Where(AM(Call(SVar("length"),[]),Var("len"))),Seq(Call(SVar("add-lists"),[]),Call(SVar("map"),[Call(SVar("try"),[Call(SVar("sect"),[Call(SVar("div"),[]),Build(Var("len"))])])]))))),SDef("round-list",[],Call(SVar("map"),[LChoice(Test(Call(SVar("sect"),[Call(SVar("leq"),[]),Build(Int(100))])),Call(SVar("int"),[]))])),SDef("int-sort",[],Call(SVar("sort-list"),[Call(SVar("SortL"),[Call(SVar("gt"),[])])])),SDef("is-interval-from",[],Rec("r",LChoice(LRule(Rule(Op("TCons",[Var("low"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Var("low"),Id)),Scope(["l"],LRule(Rule(Op("TCons",[Var("low"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])]),App(Call(SVar("r"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])])),Where(Seq(AM(BA(Call(SVar("add"),[]),Op("TCons",[Var("low"),Op("TCons",[Int(1),Op("TNil",[])])])),Var("l")),BA(Call(SVar("eq"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("l"),Op("TNil",[])])]))))))))))]),Rules([RDef("is-interval",[],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("is-interval-from"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])])),Op("TNil",[])])]),Id))]),Strategies([SDef("mkterm",[],Seq(Match(Op("TCons",[Var("c"),Op("TCons",[Var("ts"),Op("TNil",[])])])),Prim("SSL_mkterm",[Var("c"),Var("ts")]))),SDef("explode-term",[],Seq(Match(Var("t")),Prim("SSL_explode_term",[Var("t")]))),SDef("address-lt",[],Seq(Match(Op("TCons",[Var("t1"),Op("TCons",[Var("t2"),Op("TNil",[])])])),Prim("SSL_address_lt",[Var("t1"),Var("t2")]))),SDef("address",[],Seq(Match(Var("t")),Prim("SSL_address",[Var("t")])))]),Strategies([SDef("is-alphanum",[],Choice(Call(SVar("is-num"),[]),Call(SVar("is-alpha"),[]))),SDef("is-alpha",[],Choice(Call(SVar("is-upper"),[]),Call(SVar("is-lower"),[]))),SDef("is-num",[],Seq(Match(Var("c")),Where(Seq(BA(Call(SVar("geq"),[]),Op("TCons",[Var("c"),Op("TCons",[Int(48),Op("TNil",[])])])),BA(Call(SVar("leq"),[]),Op("TCons",[Var("c"),Op("TCons",[Int(57),Op("TNil",[])])])))))),SDef("is-upper",[],Seq(Match(Var("c")),Where(Seq(BA(Call(SVar("geq"),[]),Op("TCons",[Var("c"),Op("TCons",[Int(65),Op("TNil",[])])])),BA(Call(SVar("leq"),[]),Op("TCons",[Var("c"),Op("TCons",[Int(90),Op("TNil",[])])])))))),SDef("is-lower",[],Seq(Match(Var("c")),Where(Seq(BA(Call(SVar("geq"),[]),Op("TCons",[Var("c"),Op("TCons",[Int(97),Op("TNil",[])])])),BA(Call(SVar("leq"),[]),Op("TCons",[Var("c"),Op("TCons",[Int(122),Op("TNil",[])])])))))),SDef("is-ascii",[],Seq(Match(Var("c")),Where(Seq(BA(Call(SVar("geq"),[]),Op("TCons",[Var("c"),Op("TCons",[Int(32),Op("TNil",[])])])),BA(Call(SVar("leq"),[]),Op("TCons",[Var("c"),Op("TCons",[Int(127),Op("TNil",[])])])))))),SDef("case-char",[DefaultVarDec("s")],Seq(Call(SVar("TCons"),[Call(SVar("to-upper"),[]),Call(SVar("TCons"),[Call(SVar("to-upper"),[]),Call(SVar("TNil"),[])])]),Call(SVar("s"),[]))),SDef("to-upper",[],Call(SVar("try"),[Seq(Call(SVar("is-lower"),[]),LRule(Rule(Var("x"),App(Call(SVar("subt"),[]),Op("TCons",[Var("x"),Op("TCons",[Int(32),Op("TNil",[])])])),Id)))])),SDef("to-lower",[],Call(SVar("try"),[Seq(Call(SVar("is-upper"),[]),LRule(Rule(Var("x"),App(Call(SVar("add"),[]),Op("TCons",[Var("x"),Op("TCons",[Int(32),Op("TNil",[])])])),Id)))]))]),Rules([RDef("sect",[DefaultVarDec("op"),DefaultVarDec("arg")],Rule(Var("x"),App(Call(SVar("op"),[]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("arg"),[]),Op("TNil",[])),Op("TNil",[])])])),Id))]),Strategies([SDef("new",[],Prim("SSL_new",[])),SDef("is-string",[],Seq(Match(Var("x")),Prim("SSL_is_string",[Var("x")]))),SDef("implode-string",[],Seq(Match(Var("x")),Prim("SSL_implode_string",[Var("x")]))),SDef("explode-string",[],Seq(Match(Var("x")),Prim("SSL_explode_string",[Var("x")])))]),Strategies([SDef("conc-strings",[],Seq(Call(SVar("TCons"),[Call(SVar("explode-string"),[]),Call(SVar("TCons"),[Call(SVar("explode-string"),[]),Call(SVar("TNil"),[])])]),Seq(Call(SVar("conc"),[]),Call(SVar("implode-string"),[])))),SDef("concat-strings",[],Seq(Call(SVar("map"),[Call(SVar("explode-string"),[])]),Seq(Call(SVar("concat"),[]),Call(SVar("implode-string"),[])))),SDef("escape",[VarDec("esc",FunType([ConstType(Op("List",[Var("String")])),FunType([ConstType(Op("List",[Var("String")]))],ConstType(Op("List",[Var("String")])))],ConstType(Op("List",[Var("String")]))))],Seq(Call(SVar("explode-string"),[]),Seq(Rec("x",LChoice(Call(SVar("esc"),[Call(SVar("x"),[])]),LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Nil"),[])))),Call(SVar("implode-string"),[])))),SDef("cify",[],Call(SVar("escape"),[Call(SVar("Cify"),[])])),SDef("escape",[],Seq(Call(SVar("explode-string"),[]),Seq(Rec("x",LChoice(Seq(Call(SVar("Escape"),[]),Call(SVar("Cons"),[Id,Call(SVar("Cons"),[Id,Call(SVar("x"),[])])])),LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Nil"),[])))),Call(SVar("implode-string"),[])))),SDef("unescape",[],Seq(Call(SVar("explode-string"),[]),Seq(Rec("x",Seq(Call(SVar("try"),[Call(SVar("UnEscape"),[])]),LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Nil"),[])))),Call(SVar("implode-string"),[])))),SDef("string-length",[],Seq(Call(SVar("explode-string"),[]),Call(SVar("length"),[])))]),Rules([RDef("Cify",[DefaultVarDec("x")],Rule(Op("Cons",[Int(39),Var("cs")]),Op("Cons",[Int(95),Op("Cons",[Int(112),Op("Cons",[Int(95),App(Call(SVar("x"),[]),Var("cs"))])])]),Id)),RDef("Cify",[DefaultVarDec("x")],Rule(Op("Cons",[Int(45),Var("cs")]),Op("Cons",[Int(95),App(Call(SVar("x"),[]),Var("cs"))]),Id)),RDef("Cify",[DefaultVarDec("x")],Rule(Op("Cons",[Int(95),Var("cs")]),Op("Cons",[Int(95),Op("Cons",[Int(95),App(Call(SVar("x"),[]),Var("cs"))])]),Id)),RDef("Escape",[],Rule(Op("Cons",[Int(34),Var("cs")]),Op("Cons",[Int(92),Op("Cons",[Int(34),Var("cs")])]),Id)),RDef("Escape",[],Rule(Op("Cons",[Int(92),Var("cs")]),Op("Cons",[Int(92),Op("Cons",[Int(92),Var("cs")])]),Id)),RDef("Escape",[],Rule(Op("Cons",[Int(10),Var("cs")]),Op("Cons",[Int(92),Op("Cons",[Int(110),Var("cs")])]),Id)),RDef("UnEscape",[],Rule(Op("Cons",[Int(92),Op("Cons",[Int(34),Var("cs")])]),Op("Cons",[Int(34),Var("cs")]),Id)),RDef("UnEscape",[],Rule(Op("Cons",[Int(92),Op("Cons",[Int(92),Var("cs")])]),Op("Cons",[Int(92),Var("cs")]),Id)),RDef("UnEscape",[],Rule(Op("Cons",[Int(92),Op("Cons",[Int(110),Var("cs")])]),Op("Cons",[Int(10),Var("cs")]),Id)),RDef("S2I1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Var("n"),Id)),RDef("S2I2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Var("m"),Var("ms")]),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("add"),[]),Op("TCons",[App(Call(SVar("mul"),[]),Op("TCons",[Int(10),Op("TCons",[Var("n"),Op("TNil",[])])])),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),Op("TNil",[])])])),Op("TCons",[Var("ms"),Op("TNil",[])])]),Where(Seq(BA(Call(SVar("geq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),BA(Call(SVar("leq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(57),Op("TNil",[])])])))))),RDef("S2D0",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Int(46),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Var("n"),Op("TCons",[Int(10),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Id)),RDef("S2D1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("f"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),Var("n"),Id)),RDef("S2D2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("f"),Op("TCons",[Op("Cons",[Var("m"),Var("ms")]),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("add"),[]),Op("TCons",[Var("n"),Op("TCons",[App(Call(SVar("div"),[]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),Op("TCons",[Var("f"),Op("TNil",[])])])),Op("TNil",[])])])),Op("TCons",[App(Call(SVar("mul"),[]),Op("TCons",[Var("f"),Op("TCons",[Int(10),Op("TNil",[])])])),Op("TCons",[Var("ms"),Op("TNil",[])])])]),Where(Seq(BA(Call(SVar("geq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),BA(Call(SVar("leq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(57),Op("TNil",[])])]))))))]),Strategies([SDef("string-to-num",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("split"),[Build(Int(0)),Id]),Seq(Call(SVar("repeat"),[Call(SVar("S2I2"),[])]),Choice(Call(SVar("S2I1"),[]),Seq(Call(SVar("S2D0"),[]),Seq(Call(SVar("repeat"),[Call(SVar("S2D2"),[])]),Call(SVar("S2D1"),[]))))))))]),Strategies([SDef("lower-case",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("map"),[Call(SVar("lc"),[])]),Call(SVar("implode-string"),[])))),SDef("lc",[],Call(SVar("try"),[Seq(Where(Call(SVar("sect"),[Call(SVar("geq"),[]),Build(Int(65))])),Seq(Where(Call(SVar("sect"),[Call(SVar("leq"),[]),Build(Int(90))])),Call(SVar("sect"),[Call(SVar("add"),[]),Build(Int(32))])))])),SDef("upper-case",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("map"),[Call(SVar("uc"),[])]),Call(SVar("implode-string"),[])))),SDef("uc",[],Call(SVar("try"),[Seq(Where(Call(SVar("sect"),[Call(SVar("geq"),[]),Build(Int(97))])),Seq(Where(Call(SVar("sect"),[Call(SVar("leq"),[]),Build(Int(122))])),Call(SVar("sect"),[Call(SVar("subt"),[]),Build(Int(32))])))]))]),Rules([RDef("SplitInit",[],Rule(Var("x"),Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TCons",[Var("x"),Op("TNil",[])])])]),Id)),RDef("SplitExit",[],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("cs"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),App(Call(SVar("reverse"),[]),Op("Cons",[App(Seq(Call(SVar("reverse"),[]),Call(SVar("implode-string"),[])),Var("cs")),Var("xs")])),Id)),RDef("SplitNext",[],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("cs"),Op("TCons",[Op("Cons",[Int(32),Var("ys")]),Op("TNil",[])])])]),Op("TCons",[Op("Cons",[App(Seq(Call(SVar("reverse"),[]),Call(SVar("implode-string"),[])),Var("cs")),Var("xs")]),Op("TCons",[Op("Nil",[]),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Id)),RDef("SplitNext",[],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("cs"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])])]),Op("TCons",[Var("xs"),Op("TCons",[Op("Cons",[Var("y"),Var("cs")]),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Where(BA(Not(Call(SVar("eq"),[])),Op("TCons",[Var("y"),Op("TCons",[Int(32),Op("TNil",[])])])))))]),Strategies([SDef("split-at-space",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("SplitInit"),[]),Rec("x",LChoice(Call(SVar("SplitExit"),[]),Seq(Call(SVar("SplitNext"),[]),Call(SVar("x"),[]))))))),SDef("basename",[],Call(SVar("basename"),[Id])),SDef("basename",[DefaultVarDec("ext")],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("try"),[Rec("x",LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),LChoice(Call(SVar("Cons"),[Match(Int(47)),Id]),Seq(Call(SVar("Cons"),[Match(Int(46)),Call(SVar("ext"),[])]),Build(Op("Nil",[]))))))]),Call(SVar("implode-string"),[])))),SDef("guarantee-extension",[DefaultVarDec("ext")],Seq(Call(SVar("basename"),[]),Seq(Call(SVar("split"),[Id,BA(Call(SVar("ext"),[]),Op("TNil",[]))]),Call(SVar("add-extension"),[])))),SDef("get-path",[],Seq(Call(SVar("explode-string"),[]),Seq(LChoice(Rec("x",LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Cons"),[Match(Int(47)),Build(Op("Nil",[]))]))),Build(Op("Nil",[]))),Call(SVar("implode-string"),[]))))]),Rules([RDef("add-extension",[],Rule(Op("TCons",[Var("name"),Op("TCons",[Var("ext"),Op("TNil",[])])]),App(Call(SVar("concat-strings"),[]),Op("Cons",[Var("name"),Op("Cons",[Str("."),Op("Cons",[Var("ext"),Op("Nil",[])])])])),Id)),RDef("quote",[DefaultVarDec("c")],Rule(Var("s"),App(Seq(Call(SVar("concat"),[]),Call(SVar("implode-string"),[])),Op("Cons",[Op("Cons",[Var("char"),Op("Nil",[])]),Op("Cons",[App(Call(SVar("explode-string"),[]),Var("s")),Op("Cons",[Op("Cons",[Var("char"),Op("Nil",[])]),Op("Nil",[])])])])),Where(AM(Call(SVar("c"),[]),Var("char")))))]),Strategies([SDef("single-quote",[],Call(SVar("quote"),[Build(Int(39))])),SDef("double-quote",[],Call(SVar("quote"),[Build(Int(34))])),SDef("unquote",[DefaultVarDec("c")],Seq(AM(Call(SVar("explode-string"),[]),Var("s")),Seq(BA(Call(SVar("Hd"),[]),Var("s")),Seq(Call(SVar("c"),[]),Seq(BA(Call(SVar("last"),[]),Var("s")),Seq(Call(SVar("c"),[]),Seq(BA(Seq(Call(SVar("Tl"),[]),Call(SVar("init"),[])),Var("s")),Call(SVar("implode-string"),[])))))))),SDef("un-single-quote",[],Call(SVar("unquote"),[Match(Int(39))])),SDef("un-double-quote",[],Call(SVar("unquote"),[Match(Int(34))])),SDef("split-at-dot",[],Seq(Call(SVar("split"),[Build(Op("Nil",[])),Call(SVar("explode-string"),[])]),Seq(Rec("r",LChoice(LRule(Rule(Op("TCons",[Var("int"),Op("TCons",[Op("Cons",[Int(46),Var("frac")]),Op("TNil",[])])]),Op("TCons",[Var("int"),Op("TCons",[Var("frac"),Op("TNil",[])])]),Id)),LChoice(LRule(Rule(Op("TCons",[Var("int"),Op("TCons",[Op("Cons",[Var("i"),Var("rest")]),Op("TNil",[])])]),App(Call(SVar("r"),[]),Op("TCons",[App(Call(SVar("at-end"),[Build(Op("Cons",[Var("i"),Op("Nil",[])]))]),Var("int")),Op("TCons",[Var("rest"),Op("TNil",[])])])),Id)),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("Nil"),[]),Call(SVar("TNil"),[])])])))),Call(SVar("TCons"),[Call(SVar("implode-string"),[]),Call(SVar("TCons"),[Call(SVar("implode-string"),[]),Call(SVar("TNil"),[])])])))),SDef("padd-with",[DefaultVarDec("s")],Seq(Match(Op("TCons",[Var("str"),Op("TCons",[Var("n"),Op("TNil",[])])])),Seq(Build(Var("str")),Seq(AM(Call(SVar("explode-string"),[]),Var("str'")),Seq(AM(Call(SVar("length"),[]),Var("l")),LChoice(Seq(BA(Call(SVar("geq"),[]),Op("TCons",[Var("l"),Op("TCons",[Var("n"),Op("TNil",[])])])),Build(Var("str"))),Seq(BA(Call(SVar("subt"),[]),Op("TCons",[Var("n"),Op("TCons",[Var("l"),Op("TNil",[])])])),Seq(Rec("r",LChoice(LRule(Rule(Int(0),Op("Nil",[]),Id)),LRule(Rule(Var("n"),Op("Cons",[App(Call(SVar("s"),[]),Op("TNil",[])),App(Seq(Call(SVar("subt"),[]),Call(SVar("r"),[])),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])]))]),Id)))),Seq(LRule(Rule(Var("padd"),Op("TCons",[Var("padd"),Op("TCons",[Var("str'"),Op("TNil",[])])]),Id)),Seq(Call(SVar("conc"),[]),Call(SVar("implode-string"),[]))))))))))),SDef("split-before",[],Seq(Match(Op("TCons",[Var("l"),Op("TCons",[Var("sub"),Op("TNil",[])])])),Seq(AM(BA(Call(SVar("explode-string"),[]),Var("sub")),Var("sub'")),Seq(BA(Call(SVar("explode-string"),[]),Var("l")),Seq(LRule(Rule(Var("x"),Op("TCons",[Op("Nil",[]),Op("TCons",[Var("x"),Op("TNil",[])])]),Id)),Seq(Rec("r",LChoice(LRule(Rule(As(Var("x"),Op("TCons",[Wld,Op("TCons",[Var("x'"),Op("TNil",[])])])),Var("x"),Where(BA(Call(SVar("left-match"),[]),Op("TCons",[Var("x'"),Op("TCons",[Var("sub'"),Op("TNil",[])])]))))),LRule(Rule(Op("TCons",[Var("x'"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])]),App(Call(SVar("r"),[]),Op("TCons",[App(Call(SVar("at-end"),[Build(Op("Cons",[Var("x"),Op("Nil",[])]))]),Var("x'")),Op("TCons",[Var("xs"),Op("TNil",[])])])),Id)))),Call(SVar("TCons"),[Call(SVar("implode-string"),[]),Call(SVar("TCons"),[Call(SVar("implode-string"),[]),Call(SVar("TNil"),[])])]))))))),SDef("split-after",[],Seq(Match(Op("TCons",[Var("l"),Op("TCons",[Var("sub"),Op("TNil",[])])])),Seq(AM(BA(Call(SVar("explode-string"),[]),Var("sub")),Var("sub'")),Seq(BA(Call(SVar("explode-string"),[]),Var("l")),Seq(LRule(Rule(Var("x"),Op("TCons",[Op("Nil",[]),Op("TCons",[Var("x"),Op("TNil",[])])]),Id)),Seq(Rec("r",LChoice(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("Nil"),[]),Call(SVar("TNil"),[])])]),LChoice(LRule(Rule(Op("TCons",[Var("x"),Op("TCons",[Var("x'"),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("conc"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("sub'"),Op("TNil",[])])])),Op("TCons",[App(Call(SVar("left-match"),[]),Op("TCons",[Var("x'"),Op("TCons",[Var("sub'"),Op("TNil",[])])])),Op("TNil",[])])]),Id)),LRule(Rule(Op("TCons",[Var("x'"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])]),App(Call(SVar("r"),[]),Op("TCons",[App(Call(SVar("at-end"),[Build(Op("Cons",[Var("x"),Op("Nil",[])]))]),Var("x'")),Op("TCons",[Var("xs"),Op("TNil",[])])])),Id))))),Call(SVar("TCons"),[Call(SVar("implode-string"),[]),Call(SVar("TCons"),[Call(SVar("implode-string"),[]),Call(SVar("TNil"),[])])]))))))),SDef("left-match",[],Seq(Rec("r",LChoice(Scope(["l","ls","rs"],Seq(Match(Op("TCons",[Op("Cons",[Var("l"),Var("ls")]),Op("TCons",[Op("Cons",[Var("l"),Var("rs")]),Op("TNil",[])])])),BA(Call(SVar("r"),[]),Op("TCons",[Var("ls"),Op("TCons",[Var("rs"),Op("TNil",[])])])))),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("Nil"),[]),Call(SVar("TNil"),[])])]))),Call(SVar("Fst"),[]))),SDef("is-substring",[DefaultVarDec("s")],Seq(Call(SVar("explode-string"),[]),Seq(Match(Var("long")),Seq(Call(SVar("s"),[]),Seq(AM(Call(SVar("explode-string"),[]),Var("sub")),LChoice(BA(Call(SVar("eq"),[]),Op("TCons",[Var("sub"),Op("TCons",[Var("long"),Op("TNil",[])])])),BA(Rec("r",Scope(["a","xs"],Seq(Match(As(Var("a"),Op("Cons",[Wld,Var("xs")]))),LChoice(BA(Call(SVar("left-match"),[]),Op("TCons",[Var("a"),Op("TCons",[Var("sub"),Op("TNil",[])])])),BA(Call(SVar("r"),[]),Var("xs")))))),Var("long")))))))),SDef("copy-char",[],Seq(Call(SVar("copy"),[]),Call(SVar("implode-string"),[]))),SDef("string-sort",[],Seq(Call(SVar("map"),[Call(SVar("explode-string"),[])]),Seq(Call(SVar("sort-list"),[Call(SVar("SortL"),[Call(SVar("string-gt"),[])])]),Call(SVar("map"),[Call(SVar("implode-string"),[])])))),SDef("string-gt",[],Seq(Call(SVar("strcmp"),[]),Match(Int(1)))),SDef("strcmp",[],Rec("r",LChoice(LRule(Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Op("Cons",[Var("x"),Var("ys")]),Op("TNil",[])])]),App(Call(SVar("r"),[]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Id)),LChoice(LRule(Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Int(0),Id)),LChoice(LRule(Rule(Op("TCons",[Op("Cons",[Var("x"),Wld]),Op("TCons",[Op("Cons",[Var("y"),Wld]),Op("TNil",[])])]),Int(-1),Where(BA(Call(SVar("lt"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]))))),LChoice(LRule(Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Cons",[Wld,Wld]),Op("TNil",[])])]),Int(-1),Id)),Build(Int(1)))))))),SDef("strncmp",[],Rec("r",LChoice(LRule(Rule(Op("TCons",[Wld,Op("TCons",[Wld,Op("TCons",[Int(0),Op("TNil",[])])])]),Int(0),Id)),LChoice(LRule(Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Op("Cons",[Var("x"),Var("ys")]),Op("TCons",[Var("i"),Op("TNil",[])])])]),App(Call(SVar("r"),[]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("i"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TNil",[])])])])),Id)),LChoice(LRule(Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TCons",[Wld,Op("TNil",[])])])]),Int(0),Id)),LChoice(LRule(Rule(Op("TCons",[Op("Cons",[Var("x"),Wld]),Op("TCons",[Op("Cons",[Var("y"),Wld]),Op("TCons",[Wld,Op("TNil",[])])])]),Int(-1),Where(BA(Call(SVar("lt"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]))))),LChoice(LRule(Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Cons",[Wld,Wld]),Op("TCons",[Wld,Op("TNil",[])])])]),Int(-1),Id)),Build(Int(1))))))))),SDef("strcasecmp",[],Rec("r",LChoice(LRule(Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),App(Call(SVar("r"),[]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Where(BA(Call(SVar("case-char"),[Call(SVar("eq"),[])]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]))))),LChoice(LRule(Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Int(0),Id)),LChoice(LRule(Rule(Op("TCons",[Op("Cons",[Var("x"),Wld]),Op("TCons",[Op("Cons",[Var("y"),Wld]),Op("TNil",[])])]),Int(-1),Where(BA(Call(SVar("case-char"),[Call(SVar("lt"),[])]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]))))),LChoice(LRule(Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Cons",[Wld,Wld]),Op("TNil",[])])]),Int(-1),Id)),Build(Int(1))))))))]),Signature([Sorts([Sort("Option",Kinds([Var("a")]))]),Operations([OpDecl("None",ConstType(Op("Option",[Var("a")]))),OpDecl("Some",FunType([ConstType(Var("a"))],ConstType(Op("Option",[Var("a")]))))])]),Strategies([SDef("option",[DefaultVarDec("s")],Choice(Call(SVar("None"),[]),Call(SVar("Some"),[Call(SVar("s"),[])])))]),Rules([RDef("Fst",[],Rule(Op("TCons",[Var("x"),Var("tp")]),Var("x"),Id)),RDef("Snd",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Var("tp")])]),Var("y"),Id)),RDef("Third",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TCons",[Var("z"),Var("tp")])])]),Var("z"),Id)),RDef("TInd1",[],Rule(Op("TCons",[Int(1),Op("TCons",[Op("TCons",[Var("x"),Var("tp")]),Op("TNil",[])])]),Var("x"),Id)),RDef("TInd2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("TCons",[Var("x"),Var("tp")]),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("tp"),Op("TNil",[])])]),Id)),RDef("Dupl",[],Rule(Var("x"),Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])]),Id)),RDef("split",[DefaultVarDec("f"),DefaultVarDec("g")],Rule(Var("x"),Op("TCons",[App(Call(SVar("f"),[]),Var("x")),Op("TCons",[App(Call(SVar("g"),[]),Var("x")),Op("TNil",[])])]),Id)),RDef("split3",[DefaultVarDec("f"),DefaultVarDec("g"),DefaultVarDec("h")],Rule(Var("x"),Op("TCons",[App(Call(SVar("f"),[]),Var("x")),Op("TCons",[App(Call(SVar("g"),[]),Var("x")),Op("TCons",[App(Call(SVar("h"),[]),Var("x")),Op("TNil",[])])])]),Id)),RDef("Swap",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Var("y"),Op("TCons",[Var("x"),Op("TNil",[])])]),Id)),RDef("Thd",[],Rule(Op("TCons",[Var("x"),Var("xs")]),Var("x"),Id)),RDef("Ttl",[],Rule(Op("TCons",[Var("x"),Var("xs")]),Var("xs"),Id))]),Strategies([SDef("tindex",[],Rec("x",LChoice(Call(SVar("TInd1"),[]),Seq(Call(SVar("TInd2"),[]),Call(SVar("x"),[]))))),SDef("tmap",[DefaultVarDec("s")],Rec("x",Choice(Call(SVar("TNil"),[]),Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("x"),[])])))),SDef("tconcat",[DefaultVarDec("s")],Rec("y",Choice(LRule(Rule(Var("TNil"),Var("Nil"),Id)),Seq(LRule(Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("y"),[]),Var("xs")),Op("TNil",[])])]),Id)),Call(SVar("s"),[]))))),SDef("tconcat'",[DefaultVarDec("s1"),DefaultVarDec("s2")],Rec("y",Choice(Seq(Call(SVar("TNil"),[]),Call(SVar("s1"),[])),Seq(LRule(Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("y"),[]),Var("xs")),Op("TNil",[])])]),Id)),Call(SVar("s2"),[]))))),SDef("at_tsuffix",[DefaultVarDec("s")],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("x"),[])])))),SDef("tcata",[DefaultVarDec("s1"),DefaultVarDec("s2")],Rec("y",LChoice(Seq(Call(SVar("TNil"),[]),Call(SVar("s1"),[])),Seq(LRule(Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("y"),[]),Var("xs")),Op("TNil",[])])]),Id)),Call(SVar("s2"),[])))))]),Strategies([SDef("filter",[DefaultVarDec("s")],Rec("x",Choice(Call(SVar("Nil"),[]),LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("x"),[])]),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[])))))),SDef("filter-gen",[DefaultVarDec("pred"),VarDec("cont",FunType([ConstType(Var("term")),FunType([ConstType(Var("term"))],ConstType(Var("term")))],ConstType(Var("term"))))],Rec("x",Choice(Call(SVar("Nil"),[]),LChoice(Seq(Call(SVar("pred"),[]),Call(SVar("cont"),[Call(SVar("x"),[])])),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[])))))),SDef("skip1",[DefaultVarDec("s")],Call(SVar("at-tail"),[Call(SVar("s"),[])])),SDef("skip2",[DefaultVarDec("s")],Call(SVar("at-tail"),[Call(SVar("at-tail"),[Call(SVar("s"),[])])])),SDef("filter-option-args",[DefaultVarDec("flag")],Call(SVar("filter-gen"),[Seq(Call(SVar("Cons"),[Call(SVar("flag"),[]),Id]),Call(SVar("Tl"),[])),Call(SVar("skip1"),[])])),SDef("filter-options",[DefaultVarDec("flag")],Call(SVar("filter-gen"),[Call(SVar("Cons"),[Call(SVar("flag"),[]),Id]),Call(SVar("skip2"),[])])),SDef("partition",[DefaultVarDec("s")],Rec("x",Choice(LRule(Rule(Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),LChoice(Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("x"),[])]),LRule(Rule(Op("Cons",[Var("x"),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("ys"),Op("TNil",[])])]),Id))),Seq(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),LRule(Rule(Op("Cons",[Var("x"),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Op("TCons",[Var("xs"),Op("TCons",[Op("Cons",[Var("x"),Var("ys")]),Op("TNil",[])])]),Id)))))))]),Strategies([SDef("member",[],Call(SVar("TCons"),[Match(Var("x")),Call(SVar("TCons"),[Call(SVar("fetch"),[Match(Var("x"))]),Call(SVar("TNil"),[])])]))]),Rules([RDef("FoldR1",[],Rule(Op("Cons",[Var("x"),Op("Cons",[Var("y"),Op("Nil",[])])]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Id)),RDef("FoldR",[],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("TFoldR",[],Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("FoldL",[DefaultVarDec("s")],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Var("xs"),Op("TCons",[App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Op("TNil",[])])]),Id)),RDef("lsplit",[DefaultVarDec("f"),DefaultVarDec("g")],Rule(Var("x"),Op("Cons",[App(Call(SVar("f"),[]),Var("x")),Op("Cons",[App(Call(SVar("g"),[]),Var("x")),Op("Nil",[])])]),Id))]),Strategies([SDef("foldr1",[DefaultVarDec("s1"),DefaultVarDec("s2")],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s1"),[])),Seq(Call(SVar("FoldR"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("s2"),[])))))),SDef("foldr1",[DefaultVarDec("s")],Rec("x",Seq(LChoice(Call(SVar("FoldR1"),[]),Seq(Call(SVar("FoldR"),[]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))),Call(SVar("s"),[])))),SDef("foldr",[DefaultVarDec("s1"),DefaultVarDec("s2")],Rec("x",Choice(Seq(Call(SVar("Nil"),[]),Call(SVar("s1"),[])),Seq(Call(SVar("FoldR"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("s2"),[])))))),SDef("foldr",[DefaultVarDec("s1"),DefaultVarDec("s2"),DefaultVarDec("f")],Rec("x",Choice(Seq(Call(SVar("Nil"),[]),Call(SVar("s1"),[])),Seq(LRule(Rule(Op("Cons",[Var("y"),Var("ys")]),Op("TCons",[App(Call(SVar("f"),[]),Var("y")),Op("TCons",[App(Call(SVar("x"),[]),Var("ys")),Op("TNil",[])])]),Id)),Call(SVar("s2"),[]))))),SDef("tfoldr",[DefaultVarDec("s1"),DefaultVarDec("s2")],Rec("x",Choice(Seq(Call(SVar("TNil"),[]),Call(SVar("s1"),[])),Seq(Call(SVar("TFoldR"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("s2"),[])))))),SDef("foldl",[DefaultVarDec("s")],Rec("x",Choice(LRule(Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("y"),Id)),Seq(Call(SVar("FoldL"),[Call(SVar("s"),[])]),Call(SVar("x"),[]))))),SDef("mapfoldr",[DefaultVarDec("s1"),DefaultVarDec("s2"),DefaultVarDec("s3")],Rec("x",LChoice(Seq(Call(SVar("Nil"),[]),Call(SVar("s1"),[])),Seq(Call(SVar("Cons"),[Call(SVar("s2"),[]),Call(SVar("x"),[])]),Seq(LRule(Rule(Op("Cons",[Var("a"),Var("b")]),Op("TCons",[Var("a"),Op("TCons",[Var("b"),Op("TNil",[])])]),Id)),Call(SVar("s3"),[])))))),SDef("mapfoldr1",[DefaultVarDec("s1"),DefaultVarDec("s2"),DefaultVarDec("s3")],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s1"),[])),Seq(Call(SVar("Cons"),[Call(SVar("s2"),[]),Call(SVar("x"),[])]),Seq(LRule(Rule(Op("Cons",[Var("a"),Var("b")]),Op("TCons",[Var("a"),Op("TCons",[Var("b"),Op("TNil",[])])]),Id)),Call(SVar("s3"),[])))))),SDef("last",[],Rec("x",LChoice(Call(SVar("Last"),[]),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[]))))),SDef("init",[],Call(SVar("at-last"),[Call(SVar("Tl"),[])])),SDef("copy",[],Call(SVar("for"),[LRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TNil",[])])]),Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),Id)),LRule(Rule(Op("TCons",[Int(0),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Var("ts"),Id)),LRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("t"),Op("TCons",[Op("Cons",[Var("t"),Var("ts")]),Op("TNil",[])])])]),Where(BA(Call(SVar("geq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])))))])),SDef("copy",[DefaultVarDec("s")],Call(SVar("for"),[LRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TNil",[])])]),Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),Id)),LRule(Rule(Op("TCons",[Int(0),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Var("ts"),Id)),LRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("t"),Op("TCons",[Op("Cons",[App(Call(SVar("s"),[]),Var("t")),Var("ts")]),Op("TNil",[])])])]),Where(BA(Call(SVar("geq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])))))])),SDef("thread-map",[DefaultVarDec("s")],Rec("x",Choice(Call(SVar(Mod("Cons","T")),[Call(SVar("s"),[]),Call(SVar("x"),[])]),Call(SVar(Mod("Nil","T")),[])))),SDef("take-while",[DefaultVarDec("s")],Call(SVar("at-suffix"),[Choice(Call(SVar("Nil"),[]),Seq(Call(SVar("Cons"),[Not(Call(SVar("s"),[])),Id]),Build(Op("Nil",[]))))])),SDef("take-until",[DefaultVarDec("s")],Call(SVar("at-suffix"),[Choice(Call(SVar("Nil"),[]),Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Build(Op("Nil",[]))))])),SDef("take",[DefaultVarDec("isn")],Seq(Call(SVar("nzip0"),[Id]),Seq(Call(SVar("take-until"),[Call(SVar("TCons"),[Call(SVar("isn"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])])]),Call(SVar("map"),[Call(SVar("Snd"),[])])))),SDef("drop-while",[DefaultVarDec("s")],Seq(Call(SVar("at-suffix"),[Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Not(Call(SVar("s"),[])),Id])),Match(Var("xs")))]),Build(Var("xs")))),SDef("drop-until",[DefaultVarDec("s")],Seq(Call(SVar("at-suffix"),[Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Call(SVar("s"),[]),Id])),Match(Var("xs")))]),Build(Var("xs")))),SDef("drop",[DefaultVarDec("isn")],Seq(Call(SVar("nzip0"),[Id]),Seq(Call(SVar("drop-until"),[Call(SVar("TCons"),[Call(SVar("isn"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])])]),Call(SVar("map"),[Call(SVar("Snd"),[])]))))]),Rules([RDef("Look1",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Wld]),Op("TNil",[])])]),Var("y"),Id)),RDef("Look2",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Wld,Var("xs")]),Op("TNil",[])])]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("Look1'",[DefaultVarDec("keyeq")],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Wld]),Op("TNil",[])])]),Var("y"),Where(BA(Call(SVar("keyeq"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])))))]),Strategies([SDef("lookup",[],Rec("x",LChoice(Call(SVar("Look1"),[]),Seq(Call(SVar("Look2"),[]),Call(SVar("x"),[]))))),SDef("getfirst",[DefaultVarDec("s")],Rec("x",LChoice(Seq(Call(SVar("Hd"),[]),Call(SVar("s"),[])),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[]))))),SDef("lookup'",[],Scope(["x","xs"],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])])),BA(Call(SVar("getfirst"),[Scope(["y"],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Build(Var("y"))))]),Var("xs"))))),SDef("lookup",[DefaultVarDec("keyeq")],Rec("x",LChoice(Call(SVar("Look1'"),[Call(SVar("keyeq"),[])]),Seq(Call(SVar("Look2"),[]),Call(SVar("x"),[])))))]),Rules([RDef("HdMember",[DefaultVarDec("mklst")],Rule(Op("Cons",[Var("x"),Var("xs")]),Var("xs"),Where(Seq(Call(SVar("mklst"),[]),Call(SVar("fetch"),[Match(Var("x"))]))))),RDef("HdMember'",[DefaultVarDec("eq"),DefaultVarDec("mklst")],Rule(Op("Cons",[Var("x"),Var("xs")]),Var("xs"),Where(Seq(Call(SVar("mklst"),[]),Call(SVar("fetch"),[LRule(Rule(Var("y"),App(Call(SVar("eq"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Id))])))))]),Rules([RDef("union",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Rec("x",LChoice(Seq(Call(SVar("Nil"),[]),Build(Var("l2"))),LChoice(Seq(Call(SVar("HdMember"),[Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id))]),Strategies([SDef("unions",[],Call(SVar("foldr"),[Build(Op("Nil",[])),Call(SVar("union"),[])]))]),Rules([RDef("diff",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Rec("x",LChoice(Call(SVar("Nil"),[]),LChoice(Seq(Call(SVar("HdMember"),[Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id))]),Rules([RDef("diff'",[DefaultVarDec("eq")],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Rec("x",LChoice(Call(SVar("Nil"),[]),LChoice(Seq(Call(SVar("HdMember'"),[Call(SVar("eq"),[]),Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id))]),Strategies([SDef("diff",[DefaultVarDec("eq")],Call(SVar("diff'"),[Call(SVar("eq"),[])]))]),Rules([RDef("isect",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Call(SVar("diff"),[]),Op("TCons",[Var("l1"),Op("TCons",[App(Call(SVar("diff"),[]),Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])])),Op("TNil",[])])])),Id))]),Rules([RDef("crush",[DefaultVarDec("nul"),DefaultVarDec("sum")],Rule(Explode(Wld,Var("xs")),App(Call(SVar("foldr"),[Call(SVar("nul"),[]),Call(SVar("sum"),[])]),Var("xs")),Id)),RDef("crush",[DefaultVarDec("nul"),DefaultVarDec("sum"),DefaultVarDec("s")],Rule(Explode(Wld,Var("xs")),App(Call(SVar("foldr"),[Call(SVar("nul"),[]),Call(SVar("sum"),[]),Call(SVar("s"),[])]),Var("xs")),Id))]),Strategies([SDef("foldr-kids",[DefaultVarDec("nul"),DefaultVarDec("sum")],Seq(Call(SVar("obsolete"),[Build(Str("foldr-kids/2; use crush/2"))]),Call(SVar("crush"),[Call(SVar("nul"),[]),Call(SVar("sum"),[])]))),SDef("foldr-kids",[DefaultVarDec("nul"),DefaultVarDec("sum"),DefaultVarDec("s")],Seq(Call(SVar("obsolete"),[Build(Str("foldr-kids/3; use crush/3"))]),Call(SVar("crush"),[Call(SVar("nul"),[]),Call(SVar("sum"),[]),Call(SVar("s"),[])])))]),Strategies([SDef("collect-kids",[DefaultVarDec("s")],Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("s"),[])])),SDef("collect",[DefaultVarDec("s")],Rec("x",LChoice(Seq(Call(SVar("s"),[]),LRule(Rule(Var("y"),Op("Cons",[Var("y"),Op("Nil",[])]),Id))),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("x"),[])])))),SDef("collect-set",[DefaultVarDec("s")],Rec("x",LChoice(Seq(Call(SVar("s"),[]),LRule(Rule(Var("y"),Op("Cons",[Var("y"),Op("Nil",[])]),Id))),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("conc"),[]),Call(SVar("x"),[])])))),SDef("collect",[DefaultVarDec("s"),VarDec("skip",FunType([ConstType(Var("a")),FunType([ConstType(Var("a"))],ConstType(Var("a"))),FunType([ConstType(Var("a"))],ConstType(Var("a")))],ConstType(Var("a"))))],Rec("x",LChoice(Seq(Call(SVar("s"),[]),LRule(Rule(Var("y"),Op("Cons",[Var("y"),Op("Nil",[])]),Id))),LChoice(Seq(Call(SVar("skip"),[Call(SVar("x"),[]),Build(Op("Nil",[]))]),Call(SVar("collect-kids"),[Id])),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))))),SDef("bu-collect",[DefaultVarDec("s")],LChoice(Rec("x",LChoice(Seq(Some(Call(SVar("x"),[])),Call(SVar("collect-kids"),[LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Build(Op("Nil",[])))])),Seq(Call(SVar("s"),[]),LRule(Rule(Var("y"),Op("Cons",[Var("y"),Op("Nil",[])]),Id))))),Build(Op("Nil",[])))),SDef("collect-split",[DefaultVarDec("splitter")],Rec("x",LChoice(Seq(Choice(Call(SVar("is-string"),[]),Call(SVar("is-int"),[])),Call(SVar("splitter"),[])),Call(SVar("CollectSplit"),[Call(SVar("x"),[]),Call(SVar("splitter"),[])])))),SDef("collect-split",[DefaultVarDec("f"),DefaultVarDec("g")],Call(SVar("collect-split"),[Call(SVar("split"),[Call(SVar("try"),[Call(SVar("f"),[])]),LChoice(Call(SVar("g"),[]),Build(Op("Nil",[])))])]))]),Rules([RDef("CollectSplit",[DefaultVarDec("s"),DefaultVarDec("splitter")],Rule(Explode(Var("c"),Var("as")),Op("TCons",[Var("t"),Op("TCons",[App(Call(SVar("union"),[]),Op("TCons",[Var("ys"),Op("TCons",[App(Call(SVar("unions"),[]),Var("xs")),Op("TNil",[])])])),Op("TNil",[])])]),Where(Seq(AM(BA(Seq(Call(SVar("list"),[Call(SVar("s"),[])]),Call(SVar("unzip"),[])),Var("as")),Op("TCons",[Var("bs"),Op("TCons",[Var("xs"),Op("TNil",[])])])),AM(BA(Call(SVar("splitter"),[]),Explode(Var("c"),Var("bs"))),Op("TCons",[Var("t"),Op("TCons",[Var("ys"),Op("TNil",[])])])))))),SDef("CollectSplit",[DefaultVarDec("s"),DefaultVarDec("f"),DefaultVarDec("g")],Call(SVar("CollectSplit"),[Call(SVar("s"),[]),Call(SVar("split"),[Call(SVar("try"),[Call(SVar("f"),[])]),LChoice(Call(SVar("g"),[]),Build(Op("Nil",[])))])]))]),Strategies([SDef("nrofoccs",[DefaultVarDec("s")],Rec("count",LChoice(Seq(Call(SVar("s"),[]),Build(Int(1))),Call(SVar("crush"),[Build(Int(0)),Call(SVar("add"),[]),Call(SVar("count"),[])])))),SDef("twicetd",[DefaultVarDec("s")],Call(SVar("oncetd"),[Seq(Call(SVar("explode-term"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("at-suffix"),[Call(SVar("Cons"),[Call(SVar("oncetd"),[Call(SVar("s"),[])]),Call(SVar("oncetd"),[Call(SVar("s"),[])])])]),Call(SVar("TNil"),[])])]),Call(SVar("mkterm"),[])))])),SDef("atmostonce",[DefaultVarDec("s")],Not(Call(SVar("twicetd"),[Call(SVar("s"),[])]))),SDef("atmostonce'",[DefaultVarDec("s")],Scope(["n"],Seq(AM(Call(SVar("nrofoccs"),[Call(SVar("s"),[])]),Var("n")),BA(Call(SVar("leq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])))))]),Rules([RDef("SortL",[DefaultVarDec("s")],Rule(Op("Cons",[Var("x"),Op("Cons",[Var("y"),Var("l")])]),Op("Cons",[Var("y"),Op("Cons",[Var("x"),Var("l")])]),Where(BA(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]))))),RDef("LSort",[DefaultVarDec("s")],Rule(Op("Cons",[Var("x"),Var("l")]),Op("Cons",[Var("y"),Op("Cons",[Var("x"),Var("l'")])]),Where(AM(BA(Call(SVar("at-suffix"),[Scope(["ys"],Seq(Match(Op("Cons",[Var("y"),Var("ys")])),Seq(Where(BA(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]))),Build(Var("ys")))))]),Var("l")),Var("l'"))))),RDef("LMerge",[DefaultVarDec("s")],Rule(Op("Cons",[Var("x"),Var("l")]),Op("Cons",[Var("z"),Var("l'")]),Where(AM(BA(Call(SVar("at-suffix"),[LRule(Rule(Op("Cons",[Var("y"),Var("ys")]),Var("ys"),Where(AM(BA(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Var("z")))))]),Var("l")),Var("l'")))))]),Strategies([SDef("sort-list",[DefaultVarDec("s")],Call(SVar("try"),[Rec("x",Seq(LChoice(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("try"),[Call(SVar("x"),[])])))])),SDef("isort-list",[DefaultVarDec("s")],Call(SVar("try"),[Rec("x",Seq(LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("s"),[])),Call(SVar("try"),[Call(SVar("x"),[])])))])),SDef("jsort-list",[DefaultVarDec("s")],Call(SVar("try"),[Rec("x",LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Call(SVar("s"),[]),Call(SVar("try"),[Call(SVar("x"),[])]))))])),SDef("Uniq",[],LRule(Rule(Op("Cons",[Var("x"),Var("xs")]),Op("Cons",[Var("x"),Var("l")]),Where(AM(BA(Call(SVar("filter"),[Not(Match(Var("x")))]),Var("xs")),Var("l")))))),SDef("uniq",[],Call(SVar("listtd"),[Call(SVar("try"),[Call(SVar("Uniq"),[])])]))]),Rules([RDef("Zip1",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip1a'",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Wld,Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip1b'",[],Rule(Op("TCons",[Wld,Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip1c",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("x"),Op("TNil",[])])]),Var("x"),Id)),RDef("Zip1c'",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Var("x"),Id)),RDef("Zip1d",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Cons",[Wld,Wld]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip2",[],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("LZip2",[],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("RZip2",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("Zip3",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("Cons",[Var("x"),Var("xs")]),Id)),RDef("UnZip1",[],Rule(Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),RDef("UnZip2",[],Rule(Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Id)),RDef("UnZip3",[],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("NZip00",[],Rule(Var("xs"),Op("TCons",[Int(0),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("NZip01",[],Rule(Var("xs"),Op("TCons",[Int(1),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("NZip1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("NZip2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("n"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[App(Call(SVar("add"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("NZip3",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("Cons",[Var("x"),Var("xs")]),Id)),RDef("TZip1",[],Rule(Op("TCons",[Var("TNil"),Op("TCons",[Var("TNil"),Op("TNil",[])])]),Var("TNil"),Id)),RDef("TZip2",[],Rule(Op("TCons",[Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Op("TCons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("TZip3",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("TCons",[Var("x"),Var("xs")]),Id)),RDef("cart",[DefaultVarDec("s")],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),App(Seq(Call(SVar("map"),[LRule(Rule(Var("x"),App(Call(SVar("map"),[LRule(Rule(Var("y"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Id))]),Var("ys")),Id))]),Call(SVar("foldr"),[Build(Op("Nil",[])),Call(SVar("union"),[])])),Var("xs")),Id)),RDef("Skip",[DefaultVarDec("s")],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TCons",[Var("x"),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id))]),Strategies([SDef("genzip",[DefaultVarDec("a"),DefaultVarDec("b"),DefaultVarDec("c"),DefaultVarDec("s")],Rec("x",Choice(Call(SVar("a"),[]),Seq(Call(SVar("b"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("c"),[])))))),SDef("zip",[DefaultVarDec("s")],Call(SVar("genzip"),[Call(SVar("Zip1"),[]),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zip'",[DefaultVarDec("s")],Call(SVar("genzip"),[LChoice(Call(SVar("Zip1a'"),[]),Call(SVar("Zip1b'"),[])),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zipl",[DefaultVarDec("s")],Call(SVar("genzip"),[Call(SVar("Zip1a'"),[]),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zipr",[DefaultVarDec("s")],Call(SVar("genzip"),[Call(SVar("Zip1b'"),[]),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("rest-zip",[DefaultVarDec("s")],Seq(Call(SVar("genzip"),[Seq(Choice(Match(Op("TCons",[Op("Nil",[]),Op("TCons",[Wld,Op("TNil",[])])])),Match(Op("TCons",[Wld,Op("TCons",[Op("Nil",[]),Op("TNil",[])])]))),Seq(Match(Op("TCons",[Var("tla"),Op("TCons",[Var("tlb"),Op("TNil",[])])])),Build(Op("Nil",[])))),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])]),LRule(Rule(Var("pairs"),Op("TCons",[Var("tla"),Op("TCons",[Var("tlb"),Op("TCons",[Var("pairs"),Op("TNil",[])])])]),Id)))),SDef("unzip",[],Call(SVar("genzip"),[Call(SVar("UnZip1"),[]),Call(SVar("UnZip3"),[]),Call(SVar("UnZip2"),[]),Id])),SDef("unzip",[DefaultVarDec("s")],Call(SVar("genzip"),[Call(SVar("UnZip1"),[]),Call(SVar("UnZip3"),[]),Call(SVar("UnZip2"),[]),Call(SVar("s"),[])])),SDef("nzip0",[DefaultVarDec("s")],Seq(Call(SVar("NZip00"),[]),Call(SVar("genzip"),[Call(SVar("NZip1"),[]),Call(SVar("NZip2"),[]),Call(SVar("NZip3"),[]),Call(SVar("s"),[])]))),SDef("nzip",[DefaultVarDec("s")],Seq(Call(SVar("NZip01"),[]),Call(SVar("genzip"),[Call(SVar("NZip1"),[]),Call(SVar("NZip2"),[]),Call(SVar("NZip3"),[]),Call(SVar("s"),[])]))),SDef("tzip",[DefaultVarDec("s")],Call(SVar("genzip"),[Call(SVar("TZip1"),[]),Call(SVar("TZip2"),[]),Call(SVar("TZip3"),[]),Call(SVar("s"),[])])),SDef("lzip",[DefaultVarDec("s")],Call(SVar("genzip"),[Call(SVar("Zip1a'"),[]),Call(SVar("LZip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("rzip",[DefaultVarDec("s")],Call(SVar("genzip"),[Call(SVar("Zip1b'"),[]),Call(SVar("RZip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zipFetch",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("Zip2"),[]),LChoice(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))))),SDef("lzipFetch",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("LZip2"),[]),LChoice(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))))),SDef("rzipFetch",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("RZip2"),[]),LChoice(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))))),SDef("zipPad",[DefaultVarDec("s"),DefaultVarDec("padding")],Rec("x",Choice(Call(SVar("Zip1"),[]),Choice(Seq(Call(SVar("Zip2"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("Zip3"),[]))),Choice(Seq(Call(SVar("TCons"),[Call(SVar("Nil"),[]),Call(SVar("TCons"),[Call(SVar("Cons"),[Id,Id]),Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Build(Op("Cons",[App(Call(SVar("padding"),[]),Op("TNil",[])),Op("Nil",[])])),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("x"),[]))),Seq(Call(SVar("TCons"),[Call(SVar("Cons"),[Id,Id]),Call(SVar("TCons"),[Call(SVar("Nil"),[]),Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Build(Op("Cons",[App(Call(SVar("padding"),[]),Op("TNil",[])),Op("Nil",[])])),Call(SVar("TNil"),[])])]),Call(SVar("x"),[])))))))),SDef("zip-tail",[],Rec("x",Choice(Call(SVar("Zip1c"),[]),Seq(Call(SVar("TCons"),[Call(SVar("Tl"),[]),Call(SVar("TCons"),[Call(SVar("Tl"),[]),Call(SVar("TNil"),[])])]),Call(SVar("x"),[]))))),SDef("zipl-tail-match",[DefaultVarDec("s")],Rec("x",Choice(Call(SVar("Zip1c"),[]),Seq(Call(SVar("Zip2"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("Snd"),[]),Call(SVar("x"),[]))))))),SDef("zipr-tail-match",[DefaultVarDec("s")],Rec("x",Choice(Call(SVar("Zip1c'"),[]),Seq(Call(SVar("Zip2"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("Snd"),[]),Call(SVar("x"),[]))))))),SDef("zip-skip",[DefaultVarDec("pred"),DefaultVarDec("s")],Rec("x",Choice(Call(SVar("Zip1"),[]),Seq(LChoice(Seq(Call(SVar("Skip"),[Call(SVar("pred"),[])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])])),Seq(Call(SVar("Zip2"),[]),Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))),Call(SVar("Zip3"),[])))))]),Strategies([SDef("tuple-zip",[DefaultVarDec("s")],Rec("x",LChoice(Seq(Call(SVar("split"),[Call(SVar("tmap"),[Call(SVar("Hd"),[])]),Call(SVar("tmap"),[Call(SVar("Tl"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("Zip3"),[]))),Seq(Call(SVar("tmap"),[Call(SVar("Nil"),[])]),Build(Op("Nil",[])))))),SDef("tuple-unzip",[DefaultVarDec("s")],Rec("x",LChoice(Seq(Call(SVar("split"),[Call(SVar("map"),[Call(SVar("Thd"),[])]),Call(SVar("map"),[Call(SVar("Ttl"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),LRule(Rule(Op("TCons",[Var("a"),Op("TCons",[Var("b"),Op("TNil",[])])]),Op("TCons",[Var("a"),Var("b")]),Id)))),Seq(Call(SVar("map"),[Call(SVar("TNil"),[])]),Build(Op("TNil",[]))))))]),Strategies([SDef("index",[],Seq(Call(SVar("repeat"),[Call(SVar("Ind2"),[])]),Call(SVar("Ind1"),[]))),RDef("Ind1",[],Rule(Op("TCons",[Int(1),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])]),Var("x"),Id)),RDef("Ind2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("xs"),Op("TNil",[])])]),Where(BA(Call(SVar("geq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(2),Op("TNil",[])])]))))),SDef("get_index",[],Seq(Call(SVar("Gind0"),[]),Rec("x",LChoice(Call(SVar("Gind1"),[]),Seq(Call(SVar("Gind2"),[]),Call(SVar("x"),[])))))),SDef("get-index",[],Seq(Call(SVar("Gind0"),[]),Rec("x",LChoice(Call(SVar("Gind1"),[]),Seq(Call(SVar("Gind2"),[]),Call(SVar("x"),[])))))),SDef("get-index0",[DefaultVarDec("s")],Seq(Call(SVar("at-suffix"),[Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Build(Op("Nil",[])))]),Call(SVar("length"),[]))),RDef("Gind0",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TCons",[Int(1),Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Id)),RDef("Gind1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])])]),Var("n"),Id)),RDef("Gind2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("y"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("add"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("y"),Op("TCons",[Var("xs"),Op("TNil",[])])])]),Id)),RDef("Sind0",[],Rule(Op("TCons",[Var("i"),Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Op("TCons",[Int(0),Op("TCons",[Var("i"),Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])])])]),Id)),RDef("Sind1",[],Rule(Op("TCons",[Var("i"),Op("TCons",[Var("i"),Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])])])]),Op("Cons",[Var("x"),Var("ys")]),Id)),RDef("Sind2",[DefaultVarDec("r")],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("i"),Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])])])]),Op("Cons",[Var("y"),App(Call(SVar("r"),[]),Op("TCons",[App(Call(SVar("add"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("i"),Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])])])]))]),Id)),SDef("set-index",[],Seq(Call(SVar("Sind0"),[]),Rec("x",LChoice(Call(SVar("Sind1"),[]),Call(SVar("Sind2"),[Call(SVar("x"),[])])))))]),Rules([RDef("Hd",[],Rule(Op("Cons",[Var("x"),Var("l")]),Var("x"),Id)),RDef("Tl",[],Rule(Op("Cons",[Var("x"),Var("l")]),Var("l"),Id)),RDef("Last",[],Rule(Op("Cons",[Var("x"),Op("Nil",[])]),Var("x"),Id)),RDef("MkCons",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Cons",[Var("x"),Op("Nil",[])]),Id)),RDef("MkCons",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Var("z")]),Op("TNil",[])])]),Op("Cons",[Var("x"),Op("Cons",[Var("y"),Var("z")])]),Id)),RDef("MkSingleton",[],Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id))]),Strategies([SDef("is-list",[],Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Id]))),SDef("map",[DefaultVarDec("s")],Rec("x",Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("x"),[])])))),SDef("list",[DefaultVarDec("s")],Rec("x",Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("x"),[])])))),SDef("list-some",[DefaultVarDec("s")],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Call(SVar("Cons"),[Id,Call(SVar("list"),[Call(SVar("try"),[Call(SVar("s"),[])])])])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("list-some-filter",[DefaultVarDec("s")],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Call(SVar("Cons"),[Id,Call(SVar("filter"),[Call(SVar("s"),[])])])),Seq(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Tl"),[]))))),SDef("length",[],Rec("x",Choice(Seq(Call(SVar("Nil"),[]),Build(Int(0))),Seq(Call(SVar("Tl"),[]),Seq(Call(SVar("x"),[]),LRule(Rule(Var("n"),App(Call(SVar("add"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Id))))))),SDef("fetch",[DefaultVarDec("s")],Rec("x",LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("fetch-elem",[DefaultVarDec("s")],Seq(Call(SVar("fetch"),[Seq(Call(SVar("s"),[]),Match(Var("x")))]),Build(Var("x")))),SDef("split-fetch",[DefaultVarDec("s")],Seq(Call(SVar("at-suffix"),[Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Seq(Call(SVar("Cons"),[Id,Match(Var("tl"))]),Build(Op("Nil",[]))))]),Call(SVar("split"),[Id,Build(Var("tl"))]))),SDef("at-tail",[DefaultVarDec("s")],Call(SVar("Cons"),[Id,Call(SVar("s"),[])])),SDef("at_tail",[DefaultVarDec("s")],Seq(Call(SVar("obsolete"),[Build(Str("at_tail -> at-tail"))]),Call(SVar("Cons"),[Id,Call(SVar("s"),[])]))),SDef("at-end",[DefaultVarDec("s")],Rec("x",Choice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Call(SVar("Nil"),[]),Call(SVar("s"),[]))))),SDef("at_end",[DefaultVarDec("s")],Seq(Call(SVar("obsolete"),[Build(Str("at_end -> at-end"))]),Rec("x",Choice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Call(SVar("Nil"),[]),Call(SVar("s"),[])))))),SDef("at-suffix",[DefaultVarDec("s")],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("at_suffix",[DefaultVarDec("s")],Seq(Call(SVar("obsolete"),[Build(Str("at_suffix -> at-suffix"))]),Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])]))))),SDef("at_last",[DefaultVarDec("s")],Seq(Call(SVar("obsolete"),[Build(Str("at_last -> at-last"))]),Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])]))))),SDef("at-last",[DefaultVarDec("s")],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("listbu",[DefaultVarDec("s")],Rec("x",Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("s"),[])))),SDef("listtd",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("s"),[]),Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])]))))),SDef("listdu",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("s"),[]),Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("s"),[]))))),SDef("listdu2",[DefaultVarDec("s1"),DefaultVarDec("s2")],Rec("x",Seq(Call(SVar("s1"),[]),Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("s2"),[])))))]),Rules([RDef("RevInit",[],Rule(Var("xs"),Op("TCons",[Var("xs"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),RDef("Rev",[],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TCons",[Var("xs"),Op("TCons",[Op("Cons",[Var("x"),Var("ys")]),Op("TNil",[])])]),Id)),RDef("RevExit",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("ys"),Op("TNil",[])])]),Var("ys"),Id))]),Strategies([SDef("reverse",[],Seq(Call(SVar("RevInit"),[]),Seq(Call(SVar("repeat"),[Call(SVar("Rev"),[])]),Call(SVar("RevExit"),[]))))]),Rules([RDef("UptoInit",[],Rule(Var("i"),Op("TCons",[Var("i"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),RDef("UptoExit",[],Rule(Op("TCons",[Var("i"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Var("xs"),Where(BA(Call(SVar("lt"),[]),Op("TCons",[Var("i"),Op("TCons",[Int(0),Op("TNil",[])])]))))),RDef("UptoStep",[],Rule(Op("TCons",[Var("i"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("i"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Op("Cons",[Var("i"),Var("xs")]),Op("TNil",[])])]),Id))]),Strategies([SDef("upto",[],Seq(Call(SVar("UptoInit"),[]),Rec("x",LChoice(Call(SVar("UptoExit"),[]),Seq(Call(SVar("UptoStep"),[]),Call(SVar("x"),[]))))))]),Rules([RDef("conc",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Call(SVar("at-end"),[Build(Var("l2"))]),Var("l1")),Id))]),Strategies([SDef("concat",[],Rec("x",Choice(Call(SVar("Nil"),[]),LRule(Rule(Op("Cons",[Var("l"),Var("ls")]),App(Call(SVar("at-end"),[BA(Call(SVar("x"),[]),Var("ls"))]),Var("l")),Id)))))]),Rules([RDef("Sep",[DefaultVarDec("s")],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("Cons",[App(Call(SVar("s"),[]),Op("TNil",[])),Op("Cons",[Var("x"),Var("xs")])]),Id))]),Strategies([SDef("separate-by",[DefaultVarDec("s")],Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Rec("x",Choice(Call(SVar("Nil"),[]),Seq(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Sep"),[Call(SVar("s"),[])]))))])))]),Rules([RDef("all-dist",[DefaultVarDec("s")],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env"),Op("TNil",[])])]),App(All(LRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Id))),Var("t")),Id)),RDef("one-dist",[DefaultVarDec("s")],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env"),Op("TNil",[])])]),App(One(LRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Id))),Var("t")),Id)),RDef("d",[DefaultVarDec("s")],Rule(Op("Pair",[Var("t"),Var("env")]),App(Call(SVar("s"),[]),Var("t")),Id)),RDef("t",[DefaultVarDec("s")],Rule(Op("Pair",[Var("t"),Var("env")]),Op("Pair",[App(Call(SVar("s"),[]),Var("t")),Var("env")]),Id)),RDef("coll",[DefaultVarDec("s")],Rule(Explode(Var("f"),Var("xs")),Op("TCons",[Explode(Var("f"),Var("ys")),Op("TCons",[Var("zs"),Op("TNil",[])])]),Where(AM(BA(Call(SVar("unzip"),[Call(SVar("s"),[])]),Var("xs")),Op("TCons",[Var("ys"),Op("TCons",[Var("zs"),Op("TNil",[])])])))))]),Strategies([SDef("env-alltd",[DefaultVarDec("s")],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("all-dist"),[Call(SVar("x"),[])])))),SDef("env-topdown",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("all-dist"),[Call(SVar("x"),[])])))),SDef("env-topdown",[DefaultVarDec("s"),DefaultVarDec("skip")],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("skip"),[Call(SVar("x"),[])]),Call(SVar("all-dist"),[Call(SVar("x"),[])]))))),SDef("env-bottomup",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("split"),[Call(SVar("all-dist"),[Call(SVar("x"),[])]),Call(SVar("Snd"),[])]),Call(SVar("s"),[])))),SDef("thread-alltd",[DefaultVarDec("s")],Rec("x",LChoice(Call(SVar("s"),[]),Thread(Call(SVar("x"),[]))))),SDef("env-oncetd",[DefaultVarDec("s")],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("one-dist"),[Call(SVar("x"),[])]))))]),Strategies([SDef("reduce",[DefaultVarDec("s")],Call(SVar("repeat"),[Rec("x",Choice(Some(Call(SVar("x"),[])),Call(SVar("s"),[])))])),SDef("outermost",[DefaultVarDec("s")],Call(SVar("repeat"),[Call(SVar("oncetd"),[Call(SVar("s"),[])])])),SDef("innermost'",[DefaultVarDec("s")],Call(SVar("repeat"),[Call(SVar("oncebu"),[Call(SVar("s"),[])])])),SDef("innermost",[DefaultVarDec("s")],Rec("x",Seq(All(Call(SVar("x"),[])),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("x"),[])),Id)))),SDef("pseudo-innermost3",[DefaultVarDec("s")],Rec("x",Seq(All(Call(SVar("x"),[])),Rec("y",Call(SVar("try"),[Seq(Call(SVar("s"),[]),Seq(All(Seq(All(Seq(All(Call(SVar("y"),[])),Call(SVar("y"),[]))),Call(SVar("y"),[]))),Call(SVar("y"),[])))])))))]),Strategies([SDef("topdown",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("s"),[]),All(Call(SVar("x"),[]))))),SDef("bottomup",[DefaultVarDec("s")],Rec("x",Seq(All(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("downup",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("s"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s"),[]))))),SDef("downup",[DefaultVarDec("s1"),DefaultVarDec("s2")],Rec("x",Seq(Call(SVar("s1"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s2"),[]))))),SDef("downup2",[DefaultVarDec("s1"),DefaultVarDec("s2")],Rec("x",Seq(Call(SVar("s1"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s2"),[]))))),SDef("topdownS",[DefaultVarDec("s"),VarDec("stop",FunType([ConstType(Var("a")),FunType([ConstType(Var("a"))],ConstType(Var("a")))],ConstType(Var("a"))))],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[])))))),SDef("bottomupS",[DefaultVarDec("s"),VarDec("stop",FunType([ConstType(Var("a")),FunType([ConstType(Var("a"))],ConstType(Var("a")))],ConstType(Var("a"))))],Rec("x",Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s"),[])))),SDef("downupS",[DefaultVarDec("s"),VarDec("stop",FunType([ConstType(Var("a")),FunType([ConstType(Var("a"))],ConstType(Var("a")))],ConstType(Var("a"))))],Rec("x",Seq(Call(SVar("s"),[]),Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s"),[]))))),SDef("downupS",[DefaultVarDec("s1"),DefaultVarDec("s2"),VarDec("stop",FunType([ConstType(Var("a")),FunType([ConstType(Var("a"))],ConstType(Var("a")))],ConstType(Var("a"))))],Rec("x",Seq(Call(SVar("s1"),[]),Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[]))))),SDef("don't-stop",[DefaultVarDec("s")],Fail),SDef("spinetd",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[One(Call(SVar("x"),[]))])))),SDef("spinebu",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("try"),[One(Call(SVar("x"),[]))]),Call(SVar("s"),[])))),SDef("spinetd'",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("s"),[]),Choice(One(Call(SVar("x"),[])),All(Fail))))),SDef("spinebu'",[DefaultVarDec("s")],Rec("x",Seq(Choice(One(Call(SVar("x"),[])),All(Fail)),Call(SVar("s"),[])))),SDef("somespinetd",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[Some(Call(SVar("x"),[]))])))),SDef("somespinebu",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("try"),[Some(Call(SVar("x"),[]))]),Call(SVar("s"),[])))),SDef("spinetd'",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("s"),[]),Choice(One(Call(SVar("x"),[])),All(Fail))))),SDef("spinebu'",[DefaultVarDec("s")],Rec("x",Seq(Choice(One(Call(SVar("x"),[])),All(Fail)),Call(SVar("s"),[])))),SDef("oncetd",[DefaultVarDec("s")],Rec("x",LChoice(Call(SVar("s"),[]),One(Call(SVar("x"),[]))))),SDef("oncebu",[DefaultVarDec("s")],Rec("x",LChoice(One(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("oncetd-stop",[DefaultVarDec("s"),VarDec("stop",FunType([ConstType(Var("a")),FunType([ConstType(Var("a"))],ConstType(Var("a")))],ConstType(Var("a"))))],Rec("x",LChoice(Call(SVar("s"),[]),Seq(Not(Call(SVar("stop"),[])),One(Call(SVar("x"),[])))))),SDef("sometd",[DefaultVarDec("s")],Rec("x",LChoice(Call(SVar("s"),[]),Some(Call(SVar("x"),[]))))),SDef("somebu",[DefaultVarDec("s")],Rec("x",LChoice(Some(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("alltd",[DefaultVarDec("s")],Rec("x",LChoice(Call(SVar("s"),[]),All(Call(SVar("x"),[]))))),SDef("alldownup2",[DefaultVarDec("s1"),DefaultVarDec("s2")],Rec("x",Seq(LChoice(Call(SVar("s1"),[]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[])))),SDef("downup2'-obsolete",[DefaultVarDec("s1"),DefaultVarDec("s2")],Rec("x",Seq(LChoice(Call(SVar("s1"),[]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[])))),SDef("alltd-fold",[DefaultVarDec("s1"),DefaultVarDec("s2")],Rec("x",LChoice(Call(SVar("s1"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s2"),[]))))),SDef("leaves",[DefaultVarDec("s"),DefaultVarDec("is-leaf"),VarDec("skip",FunType([ConstType(Var("a")),FunType([ConstType(Var("a"))],ConstType(Var("a")))],ConstType(Var("a"))))],Rec("x",LChoice(Seq(Call(SVar("is-leaf"),[]),Call(SVar("s"),[])),LChoice(Call(SVar("skip"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[])))))),SDef("leaves",[DefaultVarDec("s"),DefaultVarDec("is-leaf")],Rec("x",LChoice(Seq(Call(SVar("is-leaf"),[]),Call(SVar("s"),[])),All(Call(SVar("x"),[]))))),SDef("is-leaf",[],All(Fail)),SDef("manybu",[DefaultVarDec("s")],Rec("x",LChoice(Seq(Some(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])])),Call(SVar("s"),[])))),SDef("manytd",[DefaultVarDec("s")],Rec("x",LChoice(Seq(Call(SVar("s"),[]),All(Call(SVar("try"),[Call(SVar("x"),[])]))),Some(Call(SVar("x"),[]))))),SDef("somedownup",[DefaultVarDec("s")],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])]))),Seq(Some(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])]))))),SDef("breadthfirst",[DefaultVarDec("s")],Rec("x",Seq(All(Call(SVar("s"),[])),All(Call(SVar("x"),[])))))]),Strategies([SDef("repeat",[DefaultVarDec("s"),DefaultVarDec("c")],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Call(SVar("x"),[])),Call(SVar("c"),[])))),SDef("repeat",[DefaultVarDec("s")],Call(SVar("repeat"),[Call(SVar("s"),[]),Id])),SDef("repeat1",[DefaultVarDec("s"),DefaultVarDec("c")],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("x"),[]),Call(SVar("c"),[]))))),SDef("repeat1",[DefaultVarDec("s")],Call(SVar("repeat1"),[Call(SVar("s"),[]),Id])),SDef("repeat-until",[DefaultVarDec("s"),DefaultVarDec("c")],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("c"),[]),Call(SVar("x"),[]))))),SDef("while",[DefaultVarDec("c"),DefaultVarDec("s")],Rec("x",Call(SVar("try"),[Seq(Call(SVar("c"),[]),Seq(Call(SVar("s"),[]),Call(SVar("x"),[])))]))),SDef("do-while",[DefaultVarDec("s"),DefaultVarDec("c")],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[Seq(Call(SVar("c"),[]),Call(SVar("x"),[]))])))),SDef("while-not",[DefaultVarDec("c"),DefaultVarDec("s")],Rec("x",LChoice(Call(SVar("c"),[]),Seq(Call(SVar("s"),[]),Call(SVar("x"),[]))))),SDef("for",[DefaultVarDec("i"),DefaultVarDec("c"),DefaultVarDec("s")],Seq(Call(SVar("i"),[]),Call(SVar("while-not"),[Call(SVar("c"),[]),Call(SVar("s"),[])])))]),Signature([Operations([OpDecl("CUT",ConstType(Var("Control")))])]),Strategies([SDef("try",[DefaultVarDec("s")],LChoice(Call(SVar("s"),[]),Id)),SDef("if",[DefaultVarDec("c"),DefaultVarDec("b")],Call(SVar("try"),[Seq(Call(SVar("c"),[]),Call(SVar("b"),[]))])),SDef("cut",[DefaultVarDec("s")],LChoice(Call(SVar("s"),[]),Build(Op("CUT",[])))),SDef("cutchoice",[DefaultVarDec("s1"),DefaultVarDec("s2")],Seq(LChoice(Call(SVar("s1"),[]),Call(SVar("s2"),[])),Not(Match(Op("CUT",[]))))),SDef("if",[DefaultVarDec("c"),DefaultVarDec("b1"),DefaultVarDec("b2")],Call(SVar("cutchoice"),[Seq(Call(SVar("c"),[]),Call(SVar("cut"),[Call(SVar("b1"),[])])),Call(SVar("b2"),[])])),SDef("ior",[DefaultVarDec("a"),DefaultVarDec("b")],LChoice(Seq(Call(SVar("a"),[]),Call(SVar("try"),[Call(SVar("b"),[])])),Call(SVar("b"),[]))),SDef("eq",[],Scope(["x"],Match(Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])])))),SDef("FAIL",[],Seq(Call(SVar("obsolete"),[Build(Str("FAIL: use fail"))]),Fail))]),Rules([RDef("A",[],Rule(Op("F",[Var("x"),Con(Var("a"),Op("G",[Var("x")]),Call(SVar("oncetd"),[])),Var("b")]),Op("F",[Var("x"),Con(Var("a"),Op("H",[Var("b")]),Call(SVar("oncetd"),[])),Var("b")]),Id)),RDef("StringsWithQuotes",[],Rule(Str("\"quoted\""),Str("unquoted"),Id))]),Signature([Sorts([Sort("Prod",Kinds([Var("ListType")]))]),Operations([OpDecl("TNil",ConstType(Op("Prod",[Op("Nil",[])]))),OpDecl("TCons",FunType([ConstType(Var("a")),ConstType(Op("Prod",[Var("lt")]))],ConstType(Op("Prod",[Op("Cons",[Var("a"),Var("lt")])])))),OpDecl("Pair",FunType([ConstType(Var("a")),ConstType(Var("b"))],ConstType(Op("Prod",[Op("Cons",[Var("a"),Op("Cons",[Var("b"),Op("Nil",[])])])]))))])]),Signature([Sorts([Sort("List",Kinds([Var("Type")]))]),Operations([OpDecl("Nil",ConstType(Op("List",[Var("a")]))),OpDecl("Cons",FunType([ConstType(Var("a")),ConstType(Op("List",[Var("a")]))],ConstType(Op("List",[Var("a")]))))])])])
