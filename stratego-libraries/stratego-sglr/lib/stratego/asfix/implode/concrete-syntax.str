/**
 * Implosion of concrete syntax.
 */
module stratego/asfix/implode/concrete-syntax
imports
  stratego/concrete-syntax/markers

strategies

  implode-asfix-is-antiquote-cons =
      "FromTerm"
    + "FromMetaExpr"
    + "FromMetaListExpr"
    + "FromStrategy"
    + "FromApp"

  implode-asfix-is-quote-cons =
      "ToTerm"
    + "ToMetaExpr"
    + "ToMetaListExpr"
    + "ToBuild"
    + "ToStrategy"
    
  skip-concrete(impl) =
    ?appl(prod, args)
    ; <get-cons> prod => c
    ; <implode-asfix-is-quote-cons> c
    ; where(<remove-all(is-ignorable-syntax)> args => [ap])
    ; !c#([ap])
    ; rec skip(
        alltd(
           appl(prod(one(varsym(id)), id, id), id)
           ; impl

        <+ appl(where(get-cons; implode-asfix-is-antiquote-cons), id)
           ; impl

        <+ annotation(impl, skip)
        )
      )

  /**
   * @todo Reuse existing strategies to get the constructor.
   */
  annotation(impl, skip) =
    ?appl(prod, <id>)
    ; where(<get-cons> prod => "WithAnno")
    ; filter(not(is-ignorable-syntax); not(appl(prod(id, oncetd(lex(id)), id), id)))
    ; ?[x|xs] 
    ; !"WithAnno"#([<skip> x| <impl> xs])
