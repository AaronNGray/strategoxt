/**
 * Generates a C program with a function that produces the
 * given ATerm without any dependency on a file in the
 * fule system.
 *
 * @author Martin Bravenboer <martin@cs.uu.nl>
 */
module cgen-aterm
imports libstrategolib
signature
  constructors
    FunctionName : ConfigKey

strategies

  main-cgen-aterm =
    input-wrap(functionname-option,
      write-to-string
      ; explode-string
      ; where(print-header)
      ; repeat(
          splitmap(print-elem|15)
        ; print-newline
        ; Snd
        <+ map(print-elem)
        )
      ; where(print-footer)
      )

  functionname-option =
      ArgOption("--name"
      , OptionHandler(<set-config> (FunctionName(), <id>))
      | "--name           Function name for getting the ATerm"
      )

    + OptionCheck(<set-config> ("--help", ()),
        OptionOneCheck("--name")
      | "error: option --name is required"
      )

strategies

  print-header =
    where(
      <fputstrings> (["
#include <aterm1.h>

ATerm ", <get-config> FunctionName(), "(void) {
  static ATerm result = NULL;
  static const char parsetable[] = {
    "], <stdout-stream>)
    )

  print-footer =
    where(<fputs> ("
  0 };

  if(result == NULL) {
    result = ATreadFromString(parsetable);
  }
  return result;
}
", <stdout-stream>)
    )

  print-newline =
    where(<fputs> ("\n", <stdout-stream>))

  print-elem =
    <fputs> (<int-to-string>, <stdout-stream>)
    ; <fputs> (",", <stdout-stream>)

  fputstrings =
    ?(strings, stream)
    ; <map(<fputs> (<id>, stream))> strings
