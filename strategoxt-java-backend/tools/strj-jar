#!/bin/bash

## SETTINGS

PACKAGE=
MAINCLASS=
CLASSPATH=strategoxt.jar
JAR=`if which fastjar &>/dev/null; then echo fastjar; else echo jar; fi`
JAVAC=`if which ecj &>/dev/null; then echo ecj; else echo javac; fi`
if [ "$JAVAFLAGS" == "" ]; then
  JAVACFLAGS="-J-Xmx256m -J-Xms100m -J-server -J-XX:+UseParallelGC"
fi

[ "$TEMP" != "" ] || TEMP=/tmp
TEMPDIR=$TEMP/strj-jar-`date +'%N'`

if which strj-jar &>/dev/null; then
  CLASSPATH=$(cd $(dirname $(which strj-jar))/..; pwd)/share/strc-java/strategoxt.jar
fi

## PARAMETERS

while P=$1; shift; do
  if [ "$P" == "-cp" ]; then
    if [ -e $CLASSPATH ]; then
      CLASSPATH="$1:$CLASSPATH"
    else
      CLASSPATH="$1"
    fi
    shift
  elif [ "$P" == "-p" ]; then
    echo "Warning: ignoring option -p; currently unused" >&2
    PACKAGE="$1" # currently unused
    shift
  elif [ "$P" == "-i" ]; then
    INPUT="$1"
    shift
  elif [ "$P" == "-o" ]; then
    OUTPUT="$1"
    shift
  elif [ "$P" == "--help" ] || ["$P" == "-h" ]; then
    break
  else
    echo "Illegal argument: $P" >&2
    INPUT=
    break
  fi
done

if [ "$INPUT" == "" ]; then
  echo "Usage: strj-jar [-m MAINCLASS] [-cp CLASSPATH] [-runtimecp CLASSPATH] -i INPUT.java [-o OUTPUT.jar]"
  exit 1
fi

## PARAMETER VALIDATION

if [ ! -e "$INPUT" ]; then
  echo "File does not exist: $INPUT" >&2
  exit 1
elif [ "$CLASSPATH" == "strategoxt.jar" ] && [ ! -e strategoxt.jar ]; then
  echo "File not found: strategoxt.jar" >&2
  exit 1
elif [ "$OUTPUT" == "" ]; then
  OUTPUT="`dirname $INPUT`/`basename $INPUT .java`.jar"
fi

## COMPILATION

( mkdir -p $TEMPDIR
  echo $JAVAC -source 5 -nowarn $JAVACFLAGS -cp $CLASSPATH `basename $INPUT`
  $JAVAC -source 5 -nowarn $JAVACFLAGS -cp $CLASSPATH $INPUT -d $TEMPDIR) || exit 1

## JARRING

INPUTDIR=`dirname $INPUT`

if ls $INPUTDIR/*.str &>/dev/null; then
  echo "Warning: using this build directory may mean non-term files are included as attachments" >&2
fi

ATTACHMENTS=`ls $INPUTDIR | grep -vE '^.*\.(java|jar|astr|str|meta|dep|c|lo|o)$' | sed "s!^!-C $INPUTDIR !"` \
  || (echo "Illegal input file name: $INPUT">&2; exit 1)

echo $JAR cf $OUTPUT -C . . $ATTACHMENTS
$JAR cf $OUTPUT -C $TEMPDIR . $ATTACHMENTS
RET=$?

rm -rf $TEMPDIR

exit $RET
