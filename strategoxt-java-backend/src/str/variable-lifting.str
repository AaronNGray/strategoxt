/**
 * Lifting of local variables.
 *
 * @author Lennart Kats
 */
module variable-lifting

rules
 
  collect-lifted-tvars(|lifted-def, svars, tvars) =
    <flatten-list> [ <collect-direct-lifted-vars(|lifted-def)> tvars
                   , <collect-indirect-lifted-vars(LiftedTArgs)> svars]
  ; make-set-with-annos
  
  collect-lifted-svars(|lifted-def, svars) =
    <flatten-list> [ <collect-direct-lifted-vars(|lifted-def)> svars
                   , <collect-indirect-lifted-vars(LiftedSArgs)> svars]
  ; make-set-with-annos
  
  collect-direct-lifted-vars(|lifted-def) =
    filter(
      where(
        get-annos
      ; one(Frames(one(?lifted-def)))
      ; one(?Offset(_))
      )
    //; where(write-to-string; debug(!"  lifted: "))
    //<+
    //  write-to-string; debug(!"  not lifted: "); fail
    )

  collect-indirect-lifted-vars(lifted-args) =
    {| IsIndirectCollected:
      filter({ x: ?x
      ; not(<IsIndirectCollected> x{})
      ; x' := x{}
      ; rules(IsIndirectCollected: x')
      ; lifted-args
      ; not([])
      //; where(<debug(!"  liftedIndirect: ")> (x', <id>))
      ; <conc> (<id>, <collect-indirect-lifted-vars(lifted-args)>)
      })
    |}
  
  make-set-with-annos =
    foldr(![], union(strip-annos; eq), ![<id>])
  
  is-self-call =
    with(
      x := <id>{}
    )
  ; get-annos
  ; one(?Frames([x]))
