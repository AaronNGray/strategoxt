/**
 * Java output postprocessing.
 *
 * @author Lennart Kats
 */
module java-postprocess

imports
  Java-EBlock

strategies

  java-relabel =
    rules(CurrentLabel := "NO_OUTER_LABEL")
  ; rec rec(
      java-relabel-outer-label
    <+
      java-relabel-stm
    <+
      all(rec)
    )
  
  java-relabel-outer-label :
    |[ OuterFail: { bstm* } ]| -> bstm |[ { bstm'* } ]|
    with
      x_label := <OuterLabel>
    ; {| Relabel:
        rules(
          CurrentLabel := x_label
          Relabel: "OuterFail" -> x_label
        )
      ; bstm'* := <java-relabel> bstm*
      |}
  
  java-relabel-stm :
    |[ x_label: { bstm* } ]| -> |[ x_label': { bstm'* } ]|
    with
      x_label' := <newname> x_label
    ; {| Relabel:
        rules(
          OuterLabel   := <CurrentLabel>
          CurrentLabel := x_label
          Relabel: x_label -> x_label'
        )
      ; bstm'* := <java-relabel> bstm*
      |}
   
   java-relabel-stm :
     x_label -> x_label'
     where
       x_label' := <Relabel> x_label

strategies

  java-simplify =
    topdown-consnil(
      try(Block(flatten-list))
    ; repeat(java-simplify-stm + java-simplify-expr)
    )

  topdown-consnil(s) =
    rec rec(s; all-consnil(rec))
  
  java-simplify-stm :
    [Empty() | s*] -> s*
  
  java-simplify-stm :
    If(e, s1, Empty()) -> If(e, s1)
  
  java-simplify-stm :
    |[ if (e1 == e2) ; else stm2 ]| -> |[ if (e1 != e2) stm2 ]|
    
  java-simplify-stm :
    bstm* |[ if (TRACES_ENABLED) stm bstm* ]| -> bstm*
    where
      <get-config> "--stacktrace" => 0
    
  java-simplify-stm :
    bstm* |[ if (TRACES_ENABLED) stm bstm* ]| -> bstm* |[ stm bstm* ]|
    where
      <get-config> "--stacktrace" => 1
  
  java-simplify-expr :
    |[ new IStrategy[] {} ]| -> |[ EMPTY_STRATEGY_LIST ]|
  
  java-simplify-expr :
    |[ new IStrategoTerm[] {} ]| -> |[ EMPTY_TERM_LIST ]|

strategies

  /**
   * Determines if a Java construct is a non-declaration statement.
   *
   */
  is-Stm =
    ?Try(_, _, _)
    + ?Try(_, _)
    + ?Synchronized(_, _)
    + ?Throw(_)
    + ?Return(_)
    + ?Continue(_)
    + ?Break(_)
    + ?ForEach(_, _, _)
    + ?For(_, _, _, _)
    + ?For(_, _, _, _)
    + ?DoWhile(_, _)
    + ?While(_, _)
    + ?Switch(_, _)
    + ?AssertStm(_, _)
    + ?AssertStm(_)
    + ?If(_, _, _)
    + ?If(_, _)
    + ?ExprStm(_)
    + ?Labeled(_, _)
    + ?Empty()
    + ?Block(_)
