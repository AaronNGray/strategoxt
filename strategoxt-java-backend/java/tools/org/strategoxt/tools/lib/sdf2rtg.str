module sdf2rtg
imports 
  libstratego-lib
  libstratego-xtc
  libstratego-tool-doc
  lib/pp-rtg
  lib/sdf-options
  lib/core-sdf-grammar2rtg
  regular-xtc-tools
  sdf-desugar

strategies

  main-sdf2rtg =
    xtc-io-wrap(
      sdf-main-module-option + ignore-option + native-executables-option
    , sdf2rtg-usage
    , sdf2rtg-about
    , !["sdf2table", "implodePT"]
    , sdf2rtg
    )

  sdf2rtg = 
      native-transform(!"sdf2table", !["-n", "-m", <get-sdf-main-module> | <pass-v-verbose>])
    ; native-transform(!"implodePT", ![])
    ; read-from
    ; sdf-desugar
    ; core-sdf-grammar2rtg
    ; xtc-pp-rtg
    <+ <xtc-exit> 1

  native-transform(tool, args) =
    if <get-config> "-Xnativepath" => nativepath; not("") then
      xtc-ensure-file => FILE(input)
    ; xtc-new-file    => output
    ; input' := <abspath> input
    ; cwd    := <getcwd>
    ; <chdir <+ fatal-err(|"Native tool path not found")> nativepath
    ; <call> (<tool>, ["-i", input', "-o", output | <args>])
    ; if not(<file-exists> output) then // (shouldn't be reachable)
        fatal-err(|["Native tool ", <tool>, " failed to produce an output file."])
      end
    ; <chdir> cwd
    ; !FILE(output)
    else
      xtc-transform(tool, args)
    end
  <+
    <fatal-err(|[<tool>, " failed"])> <args <+ !"<args?>">

  native-executables-option =
    ArgOption("-Xnativepath"
    , <set-config> ("-Xnativepath", <id>)
    , !HelpString("-Xnativepath", "Sets the path to the native sdf2table and implodePT executables")
    )

  ignore-option =
    Option("--ignore-missing-cons"
    , <set-config> (IgnoreMissingCons(), ())
    , !HelpString("--ignore-missing-cons", "Ignore productions that do not have a constructor (default: produce error)")
    )

  module-option =
    ArgOption("--module"
    , where(<set-config> ("--module", <id>))
    , !"--module n       Generated module has name n"
    )

  sdf2rtg-usage =
    <tool-doc>
      [ Usage("sdf2rtg [OPTIONS]")
      , Summary(
         "Generates an abstract syntax definition in the rtg language
          from a SDF concrete syntax definition.")
      , OptionUsage()
      , AutoReportBugs()
      ]

  sdf2rtg-about =
    <tool-doc>
      [ AutoProgram()
      , Author(Person("Martin Bravenboer", "martin.bravenboer@gmail.com"))
      , GNU_LGPL("2002-2008", "Stratego Software Foundation <stratego@cs.uu.nl>")
      , Config([
          DefaultXTCRepository()
        , CurrentXTCRepository()
        ]) 
      ]

signature
  constructors
    IgnoreMissingCons : Option
