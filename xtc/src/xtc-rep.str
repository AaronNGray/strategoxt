module xtc-rep
signature
  sorts XtcKey
  constructors
    Tool       : String -> XtcKey
    Repository : XtcKey 
    Import     : XtcKey
    Imported   : String -> XtcKey

    XTC	       : Table

/**
 * Loading the repository
 */
strategies

  /**
   * Returns the location of the XTC repository.
   *
   * @type _ -> String
   */
  xtc-location =
    <get-config> "-r"
    <+ <getenv> "XTC_REPOSITORY"
    <+ GetInternalDefaultXtcRepository

  external GetInternalDefaultXtcRepository(|)

  xtc-read = ?rep
    ; if-verbose5(debug(!"Reading? "))
    ; not(<table-get>(XTC, Imported(rep)))
    ; where(<table-put>(XTC, Repository, [rep]))
    ; if-verbose4(debug(!"Reading repository: "))
    ; read-repository-file
    ; if-verbose6(say(!"Repository read: "))
    ; <table-putlist(table-append)>(XTC, <id>)
    ; if-verbose6(say(!"Repository stored in table: "))
    ; <table-put>(XTC, Imported(rep), [])
    ; if-verbose4(say(!"Repository read: "))

  read-repository-file = 
    if can-read-file then
      ReadFromFile
    else
      if file-exists then
          log(|Error(), <conc-strings> ("no read permission for repository ", <id>))
      else
        if not(<get-config> "register") then
          log(|Error(), <concat-strings> ["repository ", <id> , " does not exist"])
        end
      end
      ; ![]
    end

  xtc-import = 
    where(
      repeat(<table-get>(XTC, Import)
             ; filter(xtc-read)
             ; not([]))
    )

  xtc-load =
    if-verbose5(debug(!"xtc-load: ")); 
    where(
      <table-get>(XTC, Repository)
      <+ xtc-location
         ; xtc-read
	 ; xtc-import
    )
    ; if-verbose5(debug(!"xtc-loaded: "))

  xtc-store =
    if-verbose2(say(!"  Saving repository "))
    ; <get-config> "-r"
    ; if can-write-repository then
       <WriteToBinaryFile> (<id>, <table-getlist> XTC)
      else
        log(|Error(), <conc-strings> ("no write permission for repository ", <id>))
        ; fail
      end

  can-write-repository =
    file-exists < can-write-file + id
