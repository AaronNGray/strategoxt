module exec-test
imports sunit exec
strategies

  main = 
    test-suite(!"exec-test",
      test1;
      test2
    )

  test1 =
    where(
      <WriteToTextFile>("exec-test1-data1.trm", "abc");
      <WriteToTextFile>("exec-test1-data2.trm", "def")
    );
    apply-and-check(!"test1"
	, copy-file(id, !"exec-test1-data2", id)
	, !("exec-test1-data1", ".trm")
	, ?("exec-test1-data2", ".trm")
          ; where(<ReadFromFile> "exec-test1-data2.trm" => "abc")
	)

  // <cat> (filein, fileout) is same as shell command "cat < filein > fileout"
  cat :
    (filein, fileout) -> fileout
    where <call(<redirect-stdin-from-file> filein;
	        <redirect-stdout-to-file> fileout)> ("cat", [])

  test2 =
    where(
      <WriteToTextFile>("exec-test2-data1.trm", "abc");
      <WriteToTextFile>("exec-test2-data2.trm", "def")
    );
    apply-and-check(!"test2a"
	, cat 
	, !("exec-test2-data1.trm", "exec-test2-data3.trm")
	, ?"exec-test2-data3.trm"
          ; where(<call>("diff", ["exec-test2-data1.trm", "exec-test2-data3.trm"]))
	);
    apply-and-check(!"test2b"
	, cat 
	, !("exec-test2-data2.trm", "exec-test2-data4.trm")
	, ?"exec-test2-data4.trm"
          ; where(not(<call>("diff", ["-q", "exec-test2-data1.trm", "exec-test2-data4.trm"])))
	)
