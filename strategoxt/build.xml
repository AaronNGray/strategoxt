<?xml version="1.0"?>
<project name="org.strategoxt.strategoxt" default="all">

	<property name="baseline" value="baseline" />
	<property name="sdf2bundle" value="${user.home}/.nix-profile" />
	<property name="nativepath" value="${sdf2bundle}/bin/" />

	<!-- <property name="version" value="0" /> -->
	<property name="revision" value="0" />

	<!-- Import Ant contrib -->
	<taskdef resource="net/sf/antcontrib/antlib.xml" />

	<!-- Import the properties file, containing e.g. the version number -->
	<property file="build.properties" />

	<!-- Location of the syntax folder -->
	<property name="syntax-dir" value="syntax" />
	<!-- Location of libraries folder -->
	<property name="libraries-dir" value="stratego-libraries" />

	<!-- Destination of files -->
	<!-- <property name="lib" location="lib/" /> -->
	<property name="bin" location="bin/" />
	<property name="test-gen" location="test-bin/" />

	<!-- For CI builds -->
	<property name="install-prefix-out" location="dist" />
	<property name="install-prefix" location="${install-prefix-out}" />
	<property name="install-location" location="${install-prefix}/share/strategoxt" />
	<property name="subdists-install-prefix" location="sub-dist" />

	<target name="all" depends="explain, build" />

	<target name="explain">
		<echo>Going to do a build</echo>
		<echo>- revision: ${revision}</echo>
		<echo>- version: ${version}</echo>
		<echo>- install output (install-prefix): ${install-prefix}</echo>
		<echo>- dependencies install output (subdists-install-prefix): ${subdists-install-prefix}</echo>
		<echo>- sdf2bundle from: ${sdf2bundle}</echo>
	</target>

	<target name="antcontrib-build">
		<subant inheritall="false">
			<property name="install-prefix" location="${subdists-install-prefix}" />
			<fileset dir="ant-contrib" includes="build.xml" />
			<target name="install" />
		</subant>
	</target>

	<target name="antcontrib-load" depends="antcontrib-build">
		<taskdef resource="org/strategoxt/antcontrib/strategoxt-antlib.xml" classpath="${subdists-install-prefix}/share/strategoxt/antcontrib/strategoxt-ant.jar" />
	</target>

	<target name="build" depends="antcontrib-load">
		<mkdir dir="${subdists-install-prefix}" />
		<subant inheritall="false">
			<property name="install-prefix" location="${subdists-install-prefix}" />
			<property name="sdf2bundle" value="${sdf2bundle}" />
			<property name="nativepath" value="${nativepath}" />
			<fileset dir="syntax" includes="build.xml" />
			<target name="all" />
		</subant>
		<subant inheritall="false">
			<property name="install-prefix" location="${subdists-install-prefix}" />
			<property name="sdf2bundle" value="${sdf2bundle}" />
			<property name="nativepath" value="${nativepath}" />
			<property name="repository.syntax" location="${subdists-install-prefix}" />
			<property name="repository.libraries" location="${subdists-install-prefix}" />
			<fileset dir="stratego-libraries" includes="build.xml" />
			<target name="all" />
		</subant>
	</target>
	
	<target name="clean" depends="clean-syntax, clean-libraries"/>

	<target name="clean-syntax">
		<subant inheritall="false">
			<property name="install-prefix" location="${install-prefix}" />
			<fileset dir="syntax" includes="build.xml" />
			<target name="clean" />
		</subant>
		<delete dir="${test-gen}" />
		<delete dir="${subdists-install-prefix}" />
		<delete dir="${bin}" />
	</target>

	<target name="clean-libraries">
		<subant inheritall="false">
			<property name="install-prefix" location="${install-prefix}" />
			<fileset dir="stratego-libraries" includes="build.xml" />
			<target name="clean" />
		</subant>
		<delete dir="${test-gen}" />
		<delete dir="${subdists-install-prefix}" />
		<delete dir="${bin}" />
	</target>
				
	<target name="jar" depends="build">
		<mkdir dir="${bin}" />
		<jar destfile="${bin}/strategoxt.jar" manifest="stratego-libraries/java-backend/java/META-INF/MANIFEST.MF" update="false">
			<fileset dir="." includes="COPYING" />
			<fileset dir="ant-contrib" includes="**/*.xml" />
			<fileset dir="${subdists-install-prefix}" includes="**/*.class" />
			<zipgroupfileset dir="${subdists-install-prefix}" includes="**/*.jar" />
			<!-- <fileset dir="${subdists-install-prefix}" includes="**/*.rtree" />
			<fileset dir="${subdists-install-prefix}" includes="**/*.af" />
			<fileset dir="${subdists-install-prefix}" includes="**/*.tbl" /> -->
		</jar>
	</target>

	<target name="install" depends="jar">
		<mkdir dir="${install-location}/strategoxt" />
		<copy file="${bin}/strategoxt.jar" todir="${install-location}/strategoxt" overwrite="true" verbose="true" />
		<mkdir dir="${install-location}/bin" />
		<copy todir="${install-location}/bin" verbose="true">
			<fileset dir="wrapper-scripts/unix/" includes="*" />
		</copy>
		<chmod dir="${install-location}/bin" includes="*" perm="a+rx" />
		<copy todir="${install-prefix}" verbose="true">
			<fileset dir="${subdists-install-prefix}" includes="**/*" />
		</copy>
		<copy todir="${install-location}" verbose="true">
			<fileset dir="${baseline}/share/strategoxt" includes="macosx/*, linux/*, build-lib/*" />
		</copy>
		<copy todir="${install-prefix}/share" verbose="true">
			<fileset dir="${baseline}/share" includes="sdf-library/**/*" />
		</copy>
		<tar destfile="${install-prefix}/strategoxt-distrib.tar" basedir="${install-prefix}" excludes="strategoxt-distrib.tar" />
		<copy todir="stratego-libraries/java-backend/java/" verbose="true" overwrite="true">
			<fileset dir="${install-location}/strategoxt" includes="strategoxt.jar" />
		</copy>
		<delete file="${install-prefix}/nix-support/hydra-build-products" />
		<echo file="${install-prefix}/nix-support/hydra-build-products" append="true">file jar ${install-location}/strategoxt/strategoxt.jar${line.separator}</echo>
		<echo file="${install-prefix}/nix-support/hydra-build-products" append="true">file tar ${install-prefix}/strategoxt-distrib.tar</echo>
	</target>

	<target name="test-compiler" depends="antcontrib-load">
		<subant inheritall="false">
			<property name="strj-sut" location="${install-location}/strategoxt/strategoxt.jar" />
			<property name="install-prefix" location="${install-prefix}" />
			<fileset dir="stratego-libraries" includes="build.xml" />
			<target name="test-compiler" />
		</subant>
	</target>

	<target name="test-interpreter" depends="antcontrib-load">
		<subant inheritall="false">
			<property name="strj-sut" location="${install-location}/strategoxt/strategoxt.jar" />
			<property name="install-prefix" location="${subdists-install-prefix}" />
			<fileset dir="stratego-libraries" includes="build.xml" />
			<target name="test-interpreter" />
		</subant>
	</target>

	<target name="test" depends="test-compiler, test-interpreter">

	</target>

	<!-- <target name="test">
		<taskdef resource="org/strategoxt/antcontrib/strategoxt-antlib.xml" />
		<mkdir dir="${test-gen}" />
		<for param="deffile">
			<path>
				<fileset dir="${libraries-dir}" includes="sglr/tests/*.def" excludes="sglr/tests/List.def" />
			</path>
			<sequential>
				<basename file="@{deffile}" property="@{deffile}.basename" suffix=".def" />
				<dirname file="@{deffile}" property="@{deffile}.dirname" />
				<property name="@{deffile}.rel.in" value="@{deffile}" relative="yes" />
				<property name="@{deffile}.rel.out" value="${test-gen}/${@{deffile}.basename}" relative="yes" />

				<sdf2rtg input="${@{deffile}.rel.in}" output="${@{deffile}.rel.out}.rtg" main="Main" />
				<rtg2sig input="${@{deffile}.rel.out}.rtg" output="${@{deffile}.rel.out}.str" main="Main" />
				<sdf2table input="@{deffile}" output="${test-gen}/${@{deffile}.basename}.tbl" main="Main" />
			</sequential>
		</for>

		<for param="strfile">
			<path>
				<fileset dir="${libraries-dir}" includes="*/tests/*.str" />
				<fileset dir="${syntax-dir}/java-front" includes="test/*.str" />
			</path>
			<sequential>
				<trycatch>
					<try>
						<strj-test input="@{strfile}" synaterm="${subdists-install-prefix}/share/strategoxt/aterm-front" synbox="${subdists-install-prefix}/share/strategoxt/gpp/syn/box" generated="${test-gen}" compiler="${install-location}/strategoxt.jar" />
					</try>
					<catch>
						<echo message="FAILURE: Test @{strfile} failed" />
					</catch>
				</trycatch>
			</sequential>
		</for>
	</target>
-->
</project>
