module parse-stratego-builder

imports libstrc
imports cleardep/fileutils
imports pluto/builder
imports pluto/builderfactory
imports separate-compilation/utils
imports separate-compilation/fileutils

signature
	constructors
		ParseStrategoInput : Path * IncludePath -> ParseStrategoInput
		ParseStrategoOutput : ModuleName * AST -> ParseStrategoOutput
		
strategies
	
	parse-stratego-builder-factory = builder-factory(
		parse-stratego-builder-description,
		parse-stratego-builder-persistent-path,
		parse-stratego-builder-build | "ParseStrategoBuilderFactory"
	)
	
	parse-stratego-builder-description :
			ParseStrategoInput(file, _) -> <conc-strings> ("Parse ", file)
			
	parse-stratego-builder-persistent-path :
			ParseStrategoInput(file, _) -> absolute-persistent-path
		where
			relative-file-name:= <separate-compilation-get-relative-file> file;
			relative-persistent-path :=<conc-strings>(<to-java-compilation-folder> relative-file-name, "/parse.dep");
			absolute-persistent-path := RelativePath(AbsolutePath(<output-dirname>), relative-persistent-path)
	
	parse-stratego-builder-build = let
		extract-module-name : (_, Module(name,_)) -> name
	 in
		  ?(builder, ParseStrategoInput(file, pack-include-path))
		; <require> file
		; <path-get-full-path> file => file-path
	    ; !(IncludePathName(file-path),pack-include-path)
	    ; (separate-compilation-parse-file 
	      	<+ (log(|Error(), ["File not found: ", <id>]); fail)) => ast
		; <extract-module-name> ast => module-name
		; !ParseStrategoOutput(module-name, ast)
     end