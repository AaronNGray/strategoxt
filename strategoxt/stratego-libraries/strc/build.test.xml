<?xml version="1.0"?>
<project name="libstrc-test" default="test-all">
	<!-- Import Stratego/XT Ant contributions -->
	<taskdef resource="org/strategoxt/antcontrib/strategoxt-antlib.xml" />

	<!-- Import Ant contrib -->
	<taskdef resource="net/sf/antcontrib/antlib.xml" />

	<!-- Import the properties file, telling us which compiler to use for Java -->
	<property file="build.properties" />

	<!-- Build configuration. Overwrite these from importer -->
	<property name="strj-sut" value="" />
	<property name="dep.libstratego-lib" location="../lib/spec" />

	<!--
	<property name="sdf2bundle" value="${user.home}/.nix-profile" />
	<property name="nativepath" value="${sdf2bundle}/bin/" />
	<property name="install-prefix" location="dist" />
	<property name="install-location" location="${install-prefix}/share/strategoxt/libstrc" /> -->

	<target name="test-all" depends="test-test1" />

	<target name="test-strc">
		<!-- 
	   For each in "tests/test-strc" invoke the compiler on the file matching "testXX.str"
	     - succeed if the compilation succeeds. fail if the compilation fails
	  -->
		<for param="str-source">
			<path>
				<fileset dir="tests/test-strc" includes="test??.str" />
			</path>
			<sequential>
				<log message="Testing @{str-source}.sh" />
				<trycatch property="failure">
					<try>
						<exec executable="@{str-source}.sh" dir="tests/test-strc" failonerror="true">
							<env key="STRJ" value="${strj-sut}" />
						</exec>
					</try>

					<catch>
						<fail message="Test failure of @{str-source}: ${failure}" />
					</catch>

					<finally>
					</finally>
				</trycatch>
				<delete includeemptydirs="true">
					<fileset dir="tests/test-strc" includes="*.actual, **/*.java, **/*.class, **/*.dep, **/*.rtree, **/*.tmp" />
				</delete>
			</sequential>
		</for>
	</target>

	<macrodef name="strj-workingdir">
		<attribute name="input" />
		<attribute name="output" />
		<attribute name="package" />
		<attribute name="workdir" />
		<attribute name="strj" />
		<element name="strjargs" optional="true" />
		<element name="str-deps" optional="true" />
		<sequential>
			<property name="@{input}.abs" location="@{input}" />
			<property name="@{output}.abs" location="@{output}" />
			<uptodate-mio input="@{input}" output="@{output}" type="strj">
				<action>
					<java classname="org.strategoxt.strj.Main" failonerror="true" fork="true" dir="@{workdir}" classpath="@{strj}">
						<arg value="-i" />
						<arg value="${@{input}.abs}" />
						<arg value="-o" />
						<arg value="${@{output}.abs}" />
						<arg value="-p" />
						<arg value="@{package}" />
						<arg value="-D" />
						<arg value="VERSION_TERM=&quot;${version}&quot;" />
						<arg value="-D" />
						<arg value="SVN_REVISION_TERM=&quot;${revision}&quot;" />
						<strjargs />
					</java>
				</action>
				<deps>
					<str-deps />
				</deps>
			</uptodate-mio>
		</sequential>
	</macrodef>

	<target name="test-test1">
		<property name="test-dir" location="tests/test1" />
		<property name="test-gen" location="${test-dir}/test-gen" />
		<property name="test-gen-bin" location="${test-gen}" />
		<for param="test-source">
			<path>
				<fileset dir="${test-dir}" includes="test??.str, test???.str" />
			</path>
			<sequential>
				<log message="Testing @{test-source}" />
				<mkdir dir="${test-gen}" />
				<mkdir dir="${test-gen}/org/test" />
				<mkdir dir="${test-gen-bin}" />
				<trycatch property="failure">
					<try>
						<!-- do the test -->
						<strj-workingdir input="@{test-source}" strj="${strj-sut}" output="${test-gen}/org/test/Main.java" package="org.test" workdir="${test-dir}">
							<strjargs>
								<arg value="-la" />
								<arg value="stratego-lib" />
								<arg value="-I" />
								<arg value="${dep.libstratego-lib}" />
							</strjargs>
						</strj-workingdir>
						<javac srcdir="${test-gen}" destdir="${test-gen-bin}" classpath="${strj-sut}" source="1.7" target="1.7" nowarn="off" debug="true" debuglevel="lines,vars,source" />
						<java classname="org.test.Main" failonerror="true" fork="true" classpath="${test-gen-bin}:${strj-sut}" dir="${test-gen-bin}" />
					</try>

					<catch>
						<fail message="Test failure of @{test-source}: ${failure}" />
					</catch>

					<finally>
						<delete dir="${test-gen}" />
						<delete dir="${test-gen-bin}" />
					</finally>
				</trycatch>
			</sequential>
		</for>
	</target>

</project>