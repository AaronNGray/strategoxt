/**
 * Stratego compiler for Java
 *
 * @author Lennart Kats
 */
module strj

imports
  shared-constructors

  libstrc
  libstratego-lib
  libstratego-xtc
  libstratego-gpp
  libjava-front
    
  strj-options
  s2j
  lib/dr-scoping

strategies

  main-strj =
    strj-parse-options
  ; main-module-required
  ; log-timed(
      xtc-input(strj)
    | "Compilation succeeded", 1
    )
  ; <exit> 0
  <+
    log(|Error(), ["Compilation failed (", <run-time ; real-to-string(|2)>, " secs)"])
  ; <exit> 1
  
  strj =
    if FILE(get-extension => "ctree") then
      xtc-ensure-file
    ; strc-get-infile
    ; read-from
    <+
      <get-config> "-i"
    ; err(|"File does not exist")
    ; fail
    else
      dr-scope-all-verbose(
        strc-front-end
      )
    end
  ; try(mark-always-needed(|<get-config> "-m", 0, 0))
  ; strc-optimize
  ; s2j
  ; log-timed(list-loop(output-java) | "Pretty printing succeeded", 1)

  output-java :
    ast -> file
    with
      name := <output-filename <+ fatal-err(|"Unexpected output")> ast
    ; file := <fopen <+ fatal-err(|"Could not open output file")> (name, "w")
    ; box  := <pp-java5-to-abox> ast
    ; <box2text-stream(|80, file)> box
    ; <fclose> file
    <+
      output-java-error

   output-filename :
     CompilationUnit(
       _
     , _
     , [ClassDec(ClassDecHead(_, Id(x_name), _, _, _), _)]
     )
     -> x_name'
     with
       x_name' := <conc-strings> (<output-dirname>, "/", x_name, ".java")
   
   output-dirname =
     OutputDirName
   <+
     <get-config> "-o"
   ; dirname
   ; try(file-exists <+ mkdir)
   ; rules(OutputDirName := <id>)
   <+
     strc-getoutfile(!"")
   ; dirname
   ; try(file-exists <+ mkdir)
   ; rules(OutputDirName := <id>)

   // Using XTC for debugging:
   // using something like rtg-format-check(true, true|<java-rtg>) is more expensive atm,
   // because of the import-term involved)
   output-java-error =
      err-msg(|"Internal error: generated Java AST is malformed")
    ; write-to => FILE(file)
    ; try(<xtc-command(!"format-check")> ["--vis", "-i", file, "--rtg", <xtc-find> "Java-15.rtg" | <pass-verbose>])
    ; log(|Critical(), "Fatal errors encountered in generated code")
    ; <xtc-exit> 1
