! $Id$
!
! Stratego (http://www.stratego-language.org) syntax highlighting pattern
! for NEdit
! by Arthur van Dam <adam@cs.uu.nl>
!
! This file is just a quick-and-dirty setup for Stratego syntax highlighting.
! Feel free to make improvements yourself, or contact me.
!
! Configuring NEdit to use a new pattern set: 
! 
! * Close your NEdit sessions 
! * Start an NEdit session using the import command line option with the pattern you downloaded: 
! 
!   # nedit -import pats-file
! 
!   (replace pats-file with the correct file name) 
! * Go into the recognition patterns dialog (Preferences>Default Settings>Syntax Highlighting>Recognition Patterns...) and verify that the patterns are imported 
! * Use Preferences>Save Defaults... to store the modifications. 
! 
! This version has been verified with the following versions on NEdit
!  - 5.2
!  - 5.3
!  - 5.4
! It was verified *not* to work with
!  - 5.02

nedit.highlightPatterns: Stratego:1:0{\n\
		nostr VLC begin end A:"\\\\end\\{code\\}":"\\\\begin\\{code\\}":"\\\\begin\\{code\\}":Text Comment::\n\
		nostr VLC body A:"&":"&"::Text Key:nostr VLC begin end A:C\n\
		nostr VLC begin end head:"\\\\literate.*?\\n":"\\\\begin\\{code\\}"::Text Comment::\n\
		nostr VLC body head:"&":"&"::Text Key:nostr VLC begin end head:C\n\
		str LC:"/\\*":"\\*/"::Comment::\n\
		str SC:"//":"$"::Comment::\n\
		str LC B:"\\(\\*":"\\*\\)"::Comment::\n\
		string:"L?""":"""":"$":String::\n\
		character constant:"L?'.'":::Character Const::\n\
		operators:"\\+|\\<\\+|\\+\\>|=\\>|\\-\\>|;|!|\\?|\\{\\||\\|\\}":::Keyword::\n\
		str keyword:"<(?:all|constructors|end|fail|id|imports|in|let|module|not|one|overlays|override|prim|rules|script|signature|some|sorts|strategies|stratego|test|thread|where)>":::Keyword::\n\
		scopesSpec:"(\\{((\\s)*([\\l'\\-_][\\w'\\-]*)(\\s)*,)*(\\s)*([\\l'\\-_][\\w'\\-]*)(\\s)*:|\\})":::Label::\n\
		str strategy def:"^[\\s]*([\\l'\\-_][\\w'\\-]*)[\\s\\n]*(\\([\\s\\n]*([\\l'\\-_][\\w'\\-]*([\\s\\n]*,[\\s\\n]*[\\l'\\-_][\\w'\\-]*)*)?([\\s\\n]*\\|[\\s\\n]*([\\l'\\-_][\\w'\\-]*([\\s\\n]*,[\\s\\n]*[\\l'\\-_][\\w'\\-]*)*))?[\\s\\n]*\\))?[\\n\\s]*=":::Identifier::\n\
		str strategy def name:"\\1":""::Identifier:str strategy def:C\n\
		str strategy def args:"\\2":""::Text Arg:str strategy def:C\n\
		str strategy def term-args:"\\6":""::Text Arg1:str strategy def:C\n\
		str rule def:"^[\\s]*([\\l'\\-_][\\w'\\-]*)[\\s\\n]*(\\([\\s\\n]*([\\l'\\-_][\\w'\\-]*([\\s\\n]*,[\\s\\n]*[\\l'\\-_][\\w'\\-]*)*)?([\\s\\n]*\\|[\\s\\n]*([\\l'\\-_][\\w'\\-]*([\\s\\n]*,[\\s\\n]*[\\l'\\-_][\\w'\\-]*)*))?[\\s\\n]*\\))?[\\n\\s]*:":::Plain::\n\
		str rule def name:"\\1":""::Identifier1:str rule def:C\n\
		str rule def args:"\\2":""::Text Arg:str rule def:C\n\
		str rule def term-args:"\\6":""::Text Arg1:str rule def:C\n\
		str strat app:"\\<[^\\+]":"\\>":"(//|/\\*)":Subroutine::\n\
		str strat app nest1:"\\<[^\\+]":"\\>"::Subroutine1:str strat app:\n\
		string escape chars:"\\\\(?:.|\\n)":::String1:string:\n\
	}
nedit.languageModes:	Stratego:.str .r::::::
