StrategoXT 0.13 -- released January ?, 2005

---------++ Summary of Changes

Paragraph about dynamic rules, compiler features, library, improved
tools and strategoxt-utils.

---------++ New Dynamic Rule Features

    (Eelco Visser)

---------++ Stratego Compiler

---------+++ Compilation of Pattern-Matching in Dynamic Rules

Pattern matching in dynamic rules is implemented by replacing
non-context variables in the left-hand side of the rule by dummy
terms. This term used to be the empty lists, which caused some
problems when if a the left-hand side itself already contains an empty
list. The dynamic rule dummy is now a =DR_DUMMY=, which solves these
issues.

Note that two rules that have the same left-hand side pattern, except
for an empty list in the first and a non-context variable in the
second, now also have a different key. If you want them to have the
same key, then you can for example move the =[]= pattern to the where
condition.

    (Martin Bravenboer)

---------+++ Redefinition of External Strategies

In program that use separate compilation, redefinition of external
strategies was not always detected in the previous release. If a
redefined strategy was only invoked from the code that was separately
compiled, then the redefinition was not noticed by the compiler. This
has now been fixed.

    (Martin Bravenboer)

---------+++ Improved Reporting of Ambiguities

By default, SGLR applies some heuristic filters for removing
ambiguities in parse trees. These heuristic filters are discouraged,
since these disambiguations are not defined in a syntax
definition. These filters can now be disabled per Stratego module by
including the term =HeuristicFilters(Off)= in the .meta file for that
module. This is especially useful if you are using a lot of concrete
syntax and if you are implementing an object language embedding in
Stratego. Disabling the heuristic filters makes ambiguities and
non-ambiguities less surprising. See the next subsection for an
example.

    (Martin Bravenboer)

---------+++ Improved Reporting of Ambiguities

If you are using concrete object syntax in Stratego, then you might
encounter ambiguities in your Stratego program, in particular if you
disable the heuristic filters of SGLR. Ambiguites in the Stratego code
(not in the object code) caused the compiler to fail in a horrible way
during C compilation. This has now been fixed by detecting these
ambiguities and reporting them in a more user-friendly way.

For example, consider this Stratego program
<verbatim>
module foo
imports Stratego list-cons tuple-cons
strategies

  main =
    !|[ Foo ]|
</verbatim>

and its meta file:
<verbatim>
Meta([
  Syntax("StrategoStratego")
, HeuristicFilters(Off())
])
</verbatim>

The generated =|[ Foo ]|= construct is highly ambiguous, which is now
reported as:
<verbatim>
martin@logistico:~/tmp/str> strc -i foo.str
compiling foo.str
error: ambiguity in the definition of main. Alternatives:
    - Op("CallNoArgs",[Op("SVar",[Str("Foo")])])
    - Op("Var",[Str("Foo")])
    - Op("ConstType",[Op("SortNoArgs",[Str("Foo")])])
</verbatim>

This report uses abstract syntax for Stratego, which might be improved
to concrete syntax in the future.

    (Martin Bravenboer)

---------+++ Cons and Nil: Special Constructor Names

=Cons/2= (=Cons= with two argument terms) and =Nil/0= are reserved
constructor names in Stratego, used for lists. The compiler handled
these constructors names somewhat sloppy, resulting in compilation
errors for programs that use =Cons= and =Nil= constructor names with a
differnt arity. This has now been fixed, hence only =Cons/2= and
=Nil/0= are reserved constructor names from now.

    (Martin Bravenboer)

---------++ Stratego Standard Library

----------+++ Separate compilation

In the previous version of StrategoXT, the separately compiled
=liblib= library imported the SSL as well as the XTC library. This
library has now been split into =libstrategolib= (the SSL) and
=libxtclib= (XTC). The module =liblib= is still available and imports
the libraries above, in order to avoid having to patch zillions of
Stratego modules.

    (Eelco Visser)

---------+++ Obsolete Strategy: iowrap

The strategy =iowrap= is now obsolete. Several releases ago it was
replaced by =io-wrap=, which is easier to use, thanks to the storage
of command-line option values in the global =config= table. Users that
still use =iowrap= will now get a warning.

    (Rob Vermaas)

---------+++ New Module for Logging

A small library for logging has been added to the Stratego Standard
Library (it used to be part of the =stratego-regular= package). The
=log= strategy in the =logging= module combines several features:

   * The =log= strategy does not change the current term and is
     therefore easy to insert in your code. Optionally, it takes a
     term argument that will be logged as well. Thus, you easily log a
     different term then the current term.

   * The =log= strategies print to the stream specified by the
     =log-stream= entry in the =config= table, or by defaylt to
     =stderr=. This makes logging to different files easier from
     within a Stratego program.

   * The =log= strategies take a severity argument, which is used to
     determine whether the message should logged at all, based on the
     verbosity level specified on the command-line.

   * The log message will include the name of the program that
     produced the message and the severity of the message.

    (Niels Janssen and Martin Bravenboer)

---------+++ New Strategy: =call= with Optional Redirection

The SSL now includes a strategy that makes the redirections of file
descriptors from method calls much easier. This new =call= strategy
takes three term arguments, which are optional (=Some= or =None=) file
descriptors for the =stdin=, =stdout=, and =stderr= of the new
process. This strategy makes it easier to write to result of a program
invocation to some file, without knowing all the nasty low-level
functions of processes and IO.

    (Martin Bravenboer)

---------+++ Bug Fixes: Pipe module

=stdin-from-pipe= and =stdout-to-pipe= didn't work correctly when the
Pipe ]rgument was =stdin= (0) or =stdout= (1). Since =stdin= and
=stdout= were explicitly closed, the connection with the pipe was
lost. Using =dup2= instead of =dup= solves the problem because there
is no need to close file descriptiors. =write-term-to-text-pipe= uses
=WriteToTextFile= but the =outfile= argument is a stream. Replacing
=WriteToTextFile= by =fprint= solved the problem.

    (Merijn de Jonge)

---------++ Deployment and Build System

---------+++ Separate package for StrategoXT Utils

Tools that are not essential to most Stratego users are now in a
separate package, =strategoxt-utils=. This package consists of the
ex-StrategoXT packages =aterm-tools=, =dot-tools=, =graph-tools=,
=stratego-util= and =stratego-tools=. Obviously, the installation of
this package is optional and most users will only need if you want to
visualize ATerms with the Dot language and =Graphviz=.

More concrete, the following tools are part of strategoxt-utils:
=GraphXML2dot=, =pp-dot=, =sdf-wf=, =term-to-dot=, =tohtml-sdf=,
=graph-term2GraphXML=, =GraphXML-analysis=, =pp-stratego-latex-alltt=,
=sdf-doc=, =sdf-wf=, =tohtml=, =GraphXML2dot=, =ismap2usemap=,
=sdf2sg=, =sdf-imports=, =term-to-adot=.

Furthermore, the Emacs mode for Stratego is now part of StrategoXT
Utils. In the future, release more utils might be moved to this
package.

    (Rob Vermaas)

---------+++ AutoXT

All macros now use the XT prefix

	* autoxt.m4: USE_XT_PACKAGES is obsolete and should be replaced by
	in your configure.ac files by XT_USE_XT_PACKAGES. Thanks to Akim
	for suggesting to use autoupdate macros.

	* autoxt.m4: DETECT_SVN_REVISION was already obsolete, but now
	also used an autoupdate macro.

    (Akim Demaille and Martin Bravenboer)

---------+++ AC_CONFIG_AUX_DIR

    (Akim Demaille and Martin Bravenboer)

---------++ Tools

---------+++ sglri

added error reporting of martin to sglri

* src/implode/sglri.str: added the --no-heuristic-filters option
to disable the heuristic filters of sglr.

    (Rob Vermaas and Martin Bravenboer)

---------+++ aterm2xml and xml2aterm

* trans/data2xml-doc.str, trans/xml-info2data.str: the --explicit
and the --very-explicit mode now use the XML namespace
http://aterm.org for the XML elements the represent ATerm
structures and types, such as list, tuple, int, string, anno
etc. In the explicit mode, this avoids conflicts with 'real'
ATerms of the same name. I'm using the namespace prefix 'at'.

* trans/data2xml-doc.str, trans/xml-info2data.str: all modes now
preserve all annotations by representing them as nested "anno"
elements in the XML namespace http://aterm.org.

* xtc/xml2aterm.str: the explicity mode is no longer required for
this tool, since it is no longer ambiguous whether the xml is
implicit, explicit or very explicit.

    (Martin Bravenboer)

---------+++ pp-aterm

   * --max-depth flag for pp-aterm

    (Rob Vermaas)

---------+++ ppgen

   * fixed error reporting of ppgen

    (Martin Bravenboer)

---------+++ sdf2rtg

* trans/sdf2rtg/core-sdf-grammar2rtg.str: nice names for character
classes.

sdf2rtg: Report productions and symbols in concrete syntax. Also,
added some hints about how to solve problems.

    (Martin Bravenboer)

---------++ Detailed List of Issues

The full list of issues closed in this release is available at:

   * http://www.stratego-language.org/Stratego/StrategoRelease013Issues

---------++ Download and Installation

The release page contains the source distributions, binary RPMs, and
detailed instructions on how to install the distributions:

   * http://www.stratego-language.org/Stratego/StrategoRelease013

---------++ Bugs and Known Problems

See our issue tracking systems for reports about (open) bugs:

   * https://catamaran.labs.cs.uu.nl/jira/browse/STR

Please report any problems with installation or bugs in the
implementation to our issue tracking system. Please check the existing
issues to see if a report about the problem was already submitted.

---------++ Contributions

Developments, beta tests, and bug fixes were carried out by

   * Martin Bravenboer
   * Akim Demaille
   * Niels Janssen
   * Merijn de Jonge
   * Karl Trygve Kalleberg
   * Rob van der Leek
   * Rob Vermaas
   * Eelco Visser
