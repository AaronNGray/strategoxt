StrategoXT 0.9.5 -- released March 26, 2004

---------++ Summary of Changes

---------++ Documentation

Document for Stratego/XT users has been improved in several areas.

Rob Vermaas, who is now a scientific programmer at our institute, is
working on updating the completely out-of-date README files in the
distribution.

  (Rob Vermaas)

Feedback by new users inspired us to revive the Tools web and start
working on a comprehensive reference for the tools in Stratego/XT. The
reference is still far from being complete, but it is a start. The
tools of GPP are already documented pretty thorough in the tool
reference.

   * http://www.program-transformation.org/Tools/ToolReference

  (Martin Bravenboer and Merijn de Jonge)

We have started to develop a central website for all information
related to SDF, the Syntax Definition Formalism, at the
program-transformation Wiki. Again this action was inspired by new
users having difficulty to find documentation and guidance. The new
website is available at http:///www.syntax-definition.org

  (Martin Bravenboer)

---------++ Compiler

The name of a module declared in file did not really matter in the
past. This was rather frustrating for xDoc. From Stratego/XT 0.9.5 the
compiler shows a warning message if the declared module name does not
correspond with the name of the file.

  (Rob Vermaas)

In Stratego/XT 0.9.4 compiling programs that use term arguments
resulted in loads of warnings from the C compiler. The type of the
arguments where not declared correctly in the C code produced by the C
compiler. This problem has been fixed in this release. The declared
types of the argument are now correct for term arguments.

  (Martin Bravenboer)

---------++ Stratego Standard Library

The SSL in 0.9.5 features a new hashtable implementation. Hashtables
used to be handled by name. In the Stratego runtime, SSL, and Stratego
programs.  In the spirit passing Streams around in Stratego programs,
it is now possible to pass hashtables around as well. A hashtable
created in this way will not affect other parts of the program, unless
the hashtable is passed to the code. The old table mechanism is of
course still available and is still useful. The new strategies
include: =new-hashtable(|initial_size, max_load)=,
=hashtable-put(|key, value)=, =hashtable-get(|key)=. We are
considering to lift hashtables from the API to the language level by
providing syntax for constructing and accessing hashtables.

  (Martin Bravenboer)

A common frustration in the SUnit unit-testing framework is forgetting
a =!= before a input or output term. SUnit now provides a variants of
the unit-testing strategies that accept term arguments for the
description, input, and expected output of a test e.g.
=apply-test(foo | "foo test", input, output)=

  (Rob Vermaas)

The module =term-io= in the SSL features new strategies for writing
ATerms to strings (=write-to-string=) and vice versa
(=read-from-string=). These strategies have been added to accept ATerm
values as command-line arguments, but they should be useful in
general.

  (Martin Bravenboer)

The module list-set provides a general subset checker (=set-eq=,
=subset=, =subseteq=). All these strategies are parameterizable with a
user-defined compare/eq strategy.

(Arthur van Dam)

---------++ Utilities

---------+++ Pretty-Printing

The pp-table-diff utility checks from now on fails if the output
should be be used as a path (=--patch=), but the existing pp-table is
not complete. This is useful for signaling incompleteness of the
pp-table during a build, especially in the buildfarm.

  (Merijn de Jonge)

   * Pptable-diff: if inconsistencies are detected and the --patch switch
     is not specified, the program terminates with an exit code of 1
   * pptable-diff: now detects whether Pptable-diff succeeded or not

    * Smart merge modified pp file with newly generated pp file after
      grammar change

   * Bug fix in sdf-2-pp-lib.str: pretty-print table generator now generates
     syntactically correct entries for all SDF2 constructs

---------+++ Syntax Definition and Parsing

    * Upgrade to sdf-front and sdf-tools to SDF2 as it appears in PGEN
    2.0
          o the PGEN 2.0 SDF sytax definition includes constructor declarations
                + generate a stratego signature from this syntax
                definition
          o unpack-sdf:
                + unpack does not obey the XT calling convention (-i -o)
                + make directories of modules with pathnames
          o pack-sdf:
                + Cannot find modules with pathnames
                + Make it work with new sdf syntax definition

---------+++ Parse-Unit

    *  parse-unit:
          o design a concrete syntax for testsuites
          o allow partial specification of expected results
          (wildcards)


	* analyse/parse-unit/*: added [ ] delimiters for test input. This
	is useful for testing typical string literals in programming
	languages. Writing many double quotes is not very attractive in
	this case.

	* analyse/parse-unit/*: the test description is now optional. In
	this case the test input will be shown as the description (or the
	file name if the input is a file). 

	Example of testsuite without descriptions:
	----------------------------------------------------
	testsuite Java Expressions
	topsort Expr

	test "1 + 2" -> Plus(Int("1), Int("2))
	
	test "1++2" fails
	
        test "6*7" succeeds
	----------------------------------------------------

	* analyse/parse-unit/*: designed a concrete syntax for parse-unit
	testsuites. Parse-unit is now ready for the technology push.

	Example:
	----------------------------------------------------
	testsuite RTG nonterminals
	topsort NonTerm

	test Primitive string
	  "<string>" -> string

	test Primitive string
	  "String" -> plain("String")

	test Quoted non terminal 1
	  "[Bla]"  -> nonterm(quoted([chars("Bla")]))

	test Quoted non terminal 1
	  "[Bl]a]" fails

	test Quoted non terminal 1
	  "[Bl]a]" succeeds
	----------------------------------------------------

	The concrete syntax does not require escaping and that's very
	convenient in typical parse-testsuites. Instead of escaping
	special characters you just write more double quotes if your test
	involves double quotes. Descriptions of tests and testsuite are
	terminated by an newline. Wildcards are allowed in the syntax, but
	are not supported in the implementation. Implementing wildcards in
	parse-unit is a to do.

(Martin Bravenboer)

    * sglri should accept an -s argument and pass this to sglr.
    * pack stratego command line options -o and --nodep (report)
    * \r in string literals (report)
    * parse-stratego does not use the meta file when there is a dot in the filename (report)
    * Remove eval-config feature from the config module (report)
    * strc doesn't accept --input (report)
    * Various strc --main problems (report)
    * pp-table syntax definition does not support CR LF (\r \n)
    * (report)

(Rob Vermaas)

	* src/sig2: removed all the sig2 tools. They are not used in
	practice and are replaced by much better tools in
	stratego-regular.

(Martin Bravenboer)


Syntax definitions of concrete object syntax embeddings require
renamings of the sorts of the imported syntax definitions. Defining
these renaming modules by hand is annoying and error-prone. sdf-tools
now features =gen-renamed-sdf-module= a tool that automates this
task. It takes an SDF syntax definition and produces an SDF module
that renames the sorts in some user-definable way by prefixing it with
the language name for example.

    * Lang-Renamed.sdf generator. Generates an SDF module that renames
      all sorts in a syntax definition by prefixing them with a given
      prefix.

 trans/gen-renamed-sdf-module.str: since we are now using the
constructors of the SDF2 syntax definition in PGEN 2.0 it is
possible to implode the AsFix result of the sdf normalizer instead
of a yield followed by a parse. This is major performance
improvement. implodePT is used because the output of the
normalizer is AsFix2ME.

(Martin Bravenboer)

	* src/implode/implode-asfix.str: *not* funny: after checking
	every possible mistake I could make I observed that implode-asfix
	must do some obscure renaming on 'keywords' (whatever keywords are
	to implode-asfix). This indeed appeared to be true: module,
	exports, imports, etc. are *renamed* in implode-asfix! Well, not
	anymore of course. 

(Martin Bravenboer)

---------++ Configuration

Stratego/XT 0.9.5 requires more recent versions of the SDF tools, PGEN
2.0. The sdf2-bundle 2.0.1 includes the 

    * Change --with-stratego-xt flag to --with-strategoxt.

---------++ Issue Tracking System

We have finally adopted an issue tracking system. Arthur van Dam
suggested to use JIRA. He has taken care of evaluating and installing
it. We have just started to use the system, but it already looks very
promosing. Please report issues to the JIRA issue tracking system from
now on. New issues are reported to the stratego-bugs mailing list. Of
course you are welcome to discuss issues at the stratego-dev mailing
list first.

(Arthur van Dam)

---------++ Download and Installation

The release page contains the source distributions, binary RPMs, and
detailed instructions on how to install the distributions:

   * http://www.stratego-language.org/Stratego/StrategoRelease095

---------++ Bugs and Known Problems

Not all the bugs and known problems for StrategXT distributions have
been solved in this release. See our Issue Tracking systems and the
stratego-bugs list for reports about (open) bugs:

   * https://catamaran.labs.cs.uu.nl/jira/
   * https://mail.cs.uu.nl/pipermail/stratego-bugs/

For an overview of features planned for future releases:

   * ReleasePlan: http://www.stratego-language.org/Stratego/ReleasePlan
   * Todo: http://www.stratego-language.org/Stratego/ToDo

Please report any problems with installation or bugs in the
implementation to our Issue Tracking system. Please check the exisintg
issues to see if a report about the problem was already submitted.

-----------------------++ Contributions

Developments, beta tests, and bug fixes were carried out by

  * Martin Bravenboer
  * Arthur van Dam
  * Rob Vermaas

