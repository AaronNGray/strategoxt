StrategoXT 0.9.5 -- released March 26, 2004

---------++ Summary of Changes

---------++ Documentation

Update and minimize README files of subpackages (and toplevel!)

(Rob Vermaas)

Tool Reference

(Martin Bravenboer and Merijn de Jonge)

SDF website "syntax-definition.org"

(Martin Bravenboer)

---------++ Compiler

Check that name of module is declared correctly

(Rob Vermaas)

    * pack-stratego always fails with a parse error in a .str if no -I
      arguments are used.


spec/front/spec-to-sdefs.str: more controlled application of
desugaring of DefaultVarDec to the default type for strategy and
term arguments. C compiler will not complain any more about
incorrect arguments :) .

(Martin Bravenboer)

* src/sig2: removed all the sig2 tools. They are not used in
practice and are replaced by much better tools in
stratego-regular.

(Martin Bravenboer)

---------++ Stratego Standard Library

	* ssl/term-io.str: added write-to-string. This strategies takes an
	ATerm and returns the ATerm in a String.

	* ssl/term-io.str: add read-from-string. This strategies takes
	a String and returns the ATerm in this String.

(Martin Bravenboer)

	* ssl/list-set.str: Introduced a general subset checker.
	End user strategies include: `set-eq`, `subset`, `subseteq`, all
	parameterizable with a user-defined compare/eq strategy.

(Arthur van Dam)

    * SUnit: test strategies with term arguments. e.g. apply-test(foo
      | "foo test", input, output)

(Arthur van Dam)

	* ssl/table.str: 
	- new-hashtable =
	- new-hashtable(|initial_size, max_load)
	- destroy-hashtable
	- hashtable-put(|key, value)
	- hashtable-get(|key)
	- hashtable-remove(|key)
	- hashtable-keys

	Hashtable strategies that operate on an Hashtable representation
	in een ATerm. These strategies require you to pass this
	representation around in Stratego, not the name of a
	hashtable. The internal structure of this representation should
	not be used in any way and is subject to change (compare to Stream
	as ATerm).

(Martin Bravenboer)

---------++ Utilities

	* src/implode/implode-asfix.str: *not* funny: after checking
	every possible mistake I could make I observed that implode-asfix
	must do some obscure renaming on 'keywords' (whatever keywords are
	to implode-asfix). This indeed appeared to be true: module,
	exports, imports, etc. are *renamed* in implode-asfix! Well, not
	anymore of course. 

(Martin Bravenboer)

---------+++ Pretty-Printing

   * Pptable-diff: if inconsistencies are detected and the --patch switch
     is not specified, the program terminates with an exit code of 1
   * pptable-diff: now detects whether Pptable-diff succeeded or not

    * Smart merge modified pp file with newly generated pp file after
      grammar change

   * Bug fix in sdf-2-pp-lib.str: pretty-print table generator now generates
     syntactically correct entries for all SDF2 constructs

---------+++ Syntax Definition and Parsing

    * Upgrade to sdf-front and sdf-tools to SDF2 as it appears in PGEN
    2.0
          o the PGEN 2.0 SDF sytax definition includes constructor declarations
                + generate a stratego signature from this syntax
                definition
          o unpack-sdf:
                + unpack does not obey the XT calling convention (-i -o)
                + make directories of modules with pathnames
          o pack-sdf:
                + Cannot find modules with pathnames
                + Make it work with new sdf syntax definition

---------+++ Parse-Unit

    *  parse-unit:
          o design a concrete syntax for testsuites
          o allow partial specification of expected results
          (wildcards)


	* analyse/parse-unit/*: added [ ] delimiters for test input. This
	is useful for testing typical string literals in programming
	languages. Writing many double quotes is not very attractive in
	this case.

	* analyse/parse-unit/*: the test description is now optional. In
	this case the test input will be shown as the description (or the
	file name if the input is a file). 

	Example of testsuite without descriptions:
	----------------------------------------------------
	testsuite Java Expressions
	topsort Expr

	test "1 + 2" -> Plus(Int("1), Int("2))
	
	test "1++2" fails
	
        test "6*7" succeeds
	----------------------------------------------------

	* analyse/parse-unit/*: designed a concrete syntax for parse-unit
	testsuites. Parse-unit is now ready for the technology push.

	Example:
	----------------------------------------------------
	testsuite RTG nonterminals
	topsort NonTerm

	test Primitive string
	  "<string>" -> string

	test Primitive string
	  "String" -> plain("String")

	test Quoted non terminal 1
	  "[Bla]"  -> nonterm(quoted([chars("Bla")]))

	test Quoted non terminal 1
	  "[Bl]a]" fails

	test Quoted non terminal 1
	  "[Bl]a]" succeeds
	----------------------------------------------------

	The concrete syntax does not require escaping and that's very
	convenient in typical parse-testsuites. Instead of escaping
	special characters you just write more double quotes if your test
	involves double quotes. Descriptions of tests and testsuite are
	terminated by an newline. Wildcards are allowed in the syntax, but
	are not supported in the implementation. Implementing wildcards in
	parse-unit is a to do.

(Martin Bravenboer)

    * sglri should accept an -s argument and pass this to sglr.
    * pack stratego command line options -o and --nodep (report)
    * \r in string literals (report)
    * parse-stratego does not use the meta file when there is a dot in the filename (report)
    * Remove eval-config feature from the config module (report)
    * strc doesn't accept --input (report)
    * Various strc --main problems (report)
    * pp-table syntax definition does not support CR LF (\r \n)
    * (report)

(Rob Vermaas)

	* src/sig2: removed all the sig2 tools. They are not used in
	practice and are replaced by much better tools in
	stratego-regular.

(Martin Bravenboer)

    * Lang-Renamed.sdf generator. Generates an SDF module that renames
      all sorts in a syntax definition by prefixing them with a given
      prefix.



	* trans/gen-renamed-sdf-module.str: since we are now using the
	constructors of the SDF2 syntax definition in PGEN 2.0 it is
	possible to implode the AsFix result of the sdf normalizer instead
	of a yield followed by a parse. This is major performance
	improvement. implodePT is used because the output of the
	normalizer is AsFix2ME.

(Martin Bravenboer)

---------++ Configuration

Stratego/XT 0.9.5 requires more recent versions of the SDF tools, PGEN
2.0. The sdf2-bundle 2.0.1 includes the 

    * Change --with-stratego-xt flag to --with-strategoxt.

---------++ Issue Tracking System

We have finally adopted an issue tracking system. Arthur van Dam
suggested to use JIRA. He has taken care of evaluating and installing
it. We have just started to use the system, but it already looks very
promosing. Please report issues to the JIRA issue tracking system from
now on. New issues are reported to the stratego-bugs mailing list. Of
course you are welcome to discuss issues at the stratego-dev mailing
list first.

(Arthur van Dam)

---------++ Download and Installation

The release page contains the source distributions, binary RPMs, and
detailed instructions on how to install the distributions:

   * http://www.stratego-language.org/Stratego/StrategoRelease095

---------++ Bugs and Known Problems

Not all the bugs and known problems for StrategXT distributions have
been solved in this release. See our Issue Tracking systems and the
stratego-bugs list for reports about (open) bugs:

   * https://catamaran.labs.cs.uu.nl/jira/
   * https://mail.cs.uu.nl/pipermail/stratego-bugs/

For an overview of features planned for future releases:

   * ReleasePlan: http://www.stratego-language.org/Stratego/ReleasePlan
   * Todo: http://www.stratego-language.org/Stratego/ToDo

Please report any problems with installation or bugs in the
implementation to our Issue Tracking system. Please check the exisintg
issues to see if a report about the problem was already submitted.

-----------------------++ Contributions

Developments, beta tests, and bug fixes were carried out by

  * Martin Bravenboer
  * Arthur van Dam
  * Rob Vermaas
  * Eelco Visser
