"pp-tables-0"(PP-Table([PP-Entry(Path1("PointerOf"),[V([],[H([],[FBOX(KW,S("\"*\""))]),Arg("1")])]),PP-Entry(Path("PointerOf",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("Pointer"),[Arg("1"),Arg("2")]),PP-Entry(Path("Pointer",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path("Pointer",[selector("2","opt"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("ParamListVarArgs"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\",\"")),FBOX(KW,S("\"...\"")),FBOX(KW,S("\")\""))]),PP-Entry(Path("ParamListVarArgs",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("ParamList"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path("ParamList",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("ArrayDecl"),[Arg("1"),FBOX(KW,S("\"[\"")),Arg("2"),FBOX(KW,S("\"]\""))]),PP-Entry(Path("ArrayDecl",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path("ArrayDecl",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path1("DeclBracket"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("DeclBracket"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("DeclBracket"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("FunType"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("ParamDecl"),[Arg("1"),Arg("2")]),PP-Entry(Path("ParamDecl",[selector("1","alt")]),[Arg("1"),Arg("1"),Arg("1"),Arg("1")]),PP-Entry(Path("ParamDecl",[selector("2","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("ParamDeclTD"),[Arg("1"),Arg("2")]),PP-Entry(Path("ParamDeclTD",[selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("TypeName"),[Arg("1"),Arg("2")]),PP-Entry(Path("TypeName",[selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("TypeName",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path1("Enum"),[FBOX(KW,S("\"enum\"")),Arg("1"),FBOX(KW,S("\"{\"")),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("Enum",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path("Enum",[selector("2","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("EnumId"),[FBOX(KW,S("\"enum\"")),Arg("1")]),PP-Entry(Path1("Enumerator"),[Arg("1"),Arg("2")]),PP-Entry(Path("Enumerator",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path1("EnumVal"),[FBOX(KW,S("\"=\"")),Arg("1")]),PP-Entry(Path1("Struct"),[FBOX(KW,S("\"struct\"")),Arg("1"),FBOX(KW,S("\"{\"")),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("Struct",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path("Struct",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path1("StructId"),[FBOX(KW,S("\"struct\"")),Arg("1")]),PP-Entry(Path1("Union"),[FBOX(KW,S("\"union\"")),Arg("1"),FBOX(KW,S("\"{\"")),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("Union",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path("Union",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path1("UnionId"),[FBOX(KW,S("\"union\"")),Arg("1")]),PP-Entry(Path1("MemDecl"),[Arg("1"),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path("MemDecl",[selector("2","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("MemDecl"),[Arg("1"),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path("MemDecl",[selector("1","iter")]),[Arg("1")]),PP-Entry(Path("MemDecl",[selector("2","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("BitFieldSize"),[Arg("1"),FBOX(KW,S("\":\"")),Arg("2")]),PP-Entry(Path("BitFieldSize",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path1("IntConst"),[Arg("1")]),PP-Entry(Path1("FloatConst"),[Arg("1")]),PP-Entry(Path1("OctConst"),[Arg("1")]),PP-Entry(Path1("HexConst"),[Arg("1")]),PP-Entry(Path1("CharConst"),[Arg("1")]),PP-Entry(Path1("StringLit"),[Arg("1")]),PP-Entry(Path("StringLit",[selector("1","iter")]),[Arg("1")]),PP-Entry(Path1("ArrayIndex"),[Arg("1"),FBOX(KW,S("\"[\"")),Arg("2"),FBOX(KW,S("\"]\""))]),PP-Entry(Path1("FunCall"),[Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path("FunCall",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Field"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("DerefMember"),[Arg("1"),FBOX(KW,S("\"->\"")),Arg("2")]),PP-Entry(Path1("PostIncr"),[Arg("1"),FBOX(KW,S("\"++\""))]),PP-Entry(Path1("PostDecr"),[Arg("1"),FBOX(KW,S("\"--\""))]),PP-Entry(Path1("PreIncr"),[FBOX(KW,S("\"++\"")),Arg("1")]),PP-Entry(Path1("PreDecr"),[FBOX(KW,S("\"--\"")),Arg("1")]),PP-Entry(Path1("SizeofExp"),[FBOX(KW,S("\"sizeof\"")),Arg("1")]),PP-Entry(Path1("SizeofType"),[FBOX(KW,S("\"sizeof\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("Address"),[FBOX(KW,S("\"&\"")),Arg("1")]),PP-Entry(Path1("Deref"),[FBOX(KW,S("\"*\"")),Arg("1")]),PP-Entry(Path1("Positive"),[FBOX(KW,S("\"+\"")),Arg("1")]),PP-Entry(Path1("Negative"),[FBOX(KW,S("\"-\"")),Arg("1")]),PP-Entry(Path1("Tilde"),[FBOX(KW,S("\"~\"")),Arg("1")]),PP-Entry(Path1("Negation"),[FBOX(KW,S("\"!\"")),Arg("1")]),PP-Entry(Path1("TypeCast"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("Mul"),[Arg("1"),FBOX(KW,S("\"*\"")),Arg("2")]),PP-Entry(Path1("Div"),[Arg("1"),FBOX(KW,S("\"/\"")),Arg("2")]),PP-Entry(Path1("Mod"),[Arg("1"),FBOX(KW,S("\"%\"")),Arg("2")]),PP-Entry(Path1("Add"),[Arg("1"),FBOX(KW,S("\"+\"")),Arg("2")]),PP-Entry(Path1("Subt"),[Arg("1"),FBOX(KW,S("\"-\"")),Arg("2")]),PP-Entry(Path1("ShiftLeft"),[Arg("1"),FBOX(KW,S("\"<<\"")),Arg("2")]),PP-Entry(Path1("ShiftRight"),[Arg("1"),FBOX(KW,S("\">>\"")),Arg("2")]),PP-Entry(Path1("Lt"),[Arg("1"),FBOX(KW,S("\"<\"")),Arg("2")]),PP-Entry(Path1("Gt"),[Arg("1"),FBOX(KW,S("\">\"")),Arg("2")]),PP-Entry(Path1("Le"),[Arg("1"),FBOX(KW,S("\"<=\"")),Arg("2")]),PP-Entry(Path1("Ge"),[Arg("1"),FBOX(KW,S("\">=\"")),Arg("2")]),PP-Entry(Path1("Equal"),[Arg("1"),FBOX(KW,S("\"==\"")),Arg("2")]),PP-Entry(Path1("NotEqual"),[Arg("1"),FBOX(KW,S("\"!=\"")),Arg("2")]),PP-Entry(Path1("And"),[Arg("1"),FBOX(KW,S("\"&\"")),Arg("2")]),PP-Entry(Path1("ExOr"),[Arg("1"),FBOX(KW,S("\"^\"")),Arg("2")]),PP-Entry(Path1("IncOr"),[Arg("1"),FBOX(KW,S("\"|\"")),Arg("2")]),PP-Entry(Path1("LAnd"),[Arg("1"),FBOX(KW,S("\"&&\"")),Arg("2")]),PP-Entry(Path1("LOr"),[Arg("1"),FBOX(KW,S("\"||\"")),Arg("2")]),PP-Entry(Path1("IfExp"),[Arg("1"),FBOX(KW,S("\"?\"")),Arg("2"),FBOX(KW,S("\":\"")),Arg("3")]),PP-Entry(Path1("Assign"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path1("AssignEq"),[FBOX(KW,S("\"=\""))]),PP-Entry(Path1("AssignMul"),[FBOX(KW,S("\"*=\""))]),PP-Entry(Path1("AssignDiv"),[FBOX(KW,S("\"/=\""))]),PP-Entry(Path1("AssignMod"),[FBOX(KW,S("\"%=\""))]),PP-Entry(Path1("AssignPlus"),[FBOX(KW,S("\"+=\""))]),PP-Entry(Path1("AssignMin"),[FBOX(KW,S("\"-=\""))]),PP-Entry(Path1("AssignSL"),[FBOX(KW,S("\"<<=\""))]),PP-Entry(Path1("AssignSR"),[FBOX(KW,S("\">>=\""))]),PP-Entry(Path1("AssignAnd"),[FBOX(KW,S("\"&=\""))]),PP-Entry(Path1("AssignExp"),[FBOX(KW,S("\"^=\""))]),PP-Entry(Path1("AssignOr"),[FBOX(KW,S("\"|=\""))]),PP-Entry(Path1("Comma"),[Arg("1"),FBOX(KW,S("\",\"")),Arg("2")]),PP-Entry(Path1("EmptyExp"),[]),PP-Entry(Path1("Typedef"),[FBOX(KW,S("\"typedef\""))]),PP-Entry(Path1("Extern"),[FBOX(KW,S("\"extern\""))]),PP-Entry(Path1("Static"),[FBOX(KW,S("\"static\""))]),PP-Entry(Path1("Auto"),[FBOX(KW,S("\"auto\""))]),PP-Entry(Path1("Register"),[FBOX(KW,S("\"register\""))]),PP-Entry(Path1("Int"),[FBOX(KW,S("\"int\""))]),PP-Entry(Path1("Char"),[FBOX(KW,S("\"char\""))]),PP-Entry(Path1("Short"),[FBOX(KW,S("\"short\""))]),PP-Entry(Path1("Long"),[FBOX(KW,S("\"long\""))]),PP-Entry(Path1("Float"),[FBOX(KW,S("\"float\""))]),PP-Entry(Path1("Double"),[FBOX(KW,S("\"double\""))]),PP-Entry(Path1("Signed"),[FBOX(KW,S("\"signed\""))]),PP-Entry(Path1("Unsigned"),[FBOX(KW,S("\"unsigned\""))]),PP-Entry(Path1("Void"),[FBOX(KW,S("\"void\""))]),PP-Entry(Path1("Const"),[FBOX(KW,S("\"const\""))]),PP-Entry(Path1("Volatile"),[FBOX(KW,S("\"volatile\""))]),PP-Entry(Path1("Declaration"),[Arg("1"),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path("Declaration",[selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("Declaration",[selector("1","alt"),selector("2","iter")]),[Arg("1")]),PP-Entry(Path("Declaration",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Declaration2"),[Arg("1"),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path("Declaration2",[selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("Declaration2",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("IdDeclInit"),[Arg("1"),FBOX(KW,S("\"=\"")),Arg("2")]),PP-Entry(Path1("DeclInit"),[Arg("1"),FBOX(KW,S("\"=\"")),Arg("2")]),PP-Entry(Path1("ArrayInit"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("ArrayInit",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("ArrayInitIncomplete"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\",\"")),FBOX(KW,S("\"}\""))]),PP-Entry(Path("ArrayInitIncomplete",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("AssignInit"),[Arg("1")]),PP-Entry(Path1("TypeSpec"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("TypeSpec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("TypeSpec",[selector("2","alt")]),[Arg("1"),Arg("1"),Arg("1")]),PP-Entry(Path("TypeSpec",[selector("3","iter-star")]),[Arg("1")]),PP-Entry(Path("TypeSpec",[selector("3","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("DQualifiers"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("DQualifiers",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("DQualifiers",[selector("3","iter-star")]),[Arg("1")]),PP-Entry(Path1("DeclSpec"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),Arg("5")]),PP-Entry(Path("DeclSpec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("DeclSpec",[selector("3","iter-star")]),[Arg("1")]),PP-Entry(Path("DeclSpec",[selector("4","alt")]),[Arg("1"),Arg("1"),Arg("1")]),PP-Entry(Path("DeclSpec",[selector("5","iter-star")]),[Arg("1")]),PP-Entry(Path("DeclSpec",[selector("5","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("Id"),[Arg("1")]),PP-Entry(Path1("TypeId"),[Arg("1")]),PP-Entry(Path1("Label"),[Arg("1"),FBOX(KW,S("\":\"")),Arg("2")]),PP-Entry(Path1("Case"),[FBOX(KW,S("\"case\"")),Arg("1"),FBOX(KW,S("\":\"")),Arg("2")]),PP-Entry(Path1("Default"),[FBOX(KW,S("\"default\"")),FBOX(KW,S("\":\"")),Arg("1")]),PP-Entry(Path1("Compound"),[FBOX(KW,S("\"{\"")),Arg("1"),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("Compound",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("Compound",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("Stat"),[Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("If"),[FBOX(KW,S("\"if\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("IfElse"),[FBOX(KW,S("\"if\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2"),FBOX(KW,S("\"else\"")),Arg("3")]),PP-Entry(Path1("Switch"),[FBOX(KW,S("\"switch\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("While"),[FBOX(KW,S("\"while\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("DoWhile"),[FBOX(KW,S("\"do\"")),Arg("1"),FBOX(KW,S("\"while\"")),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path1("For"),[FBOX(KW,S("\"for\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\";\"")),Arg("2"),FBOX(KW,S("\";\"")),Arg("3"),FBOX(KW,S("\")\"")),Arg("4")]),PP-Entry(Path1("Goto"),[FBOX(KW,S("\"goto\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("Continue"),[FBOX(KW,S("\"continue\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path1("Break"),[FBOX(KW,S("\"break\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path1("Return"),[FBOX(KW,S("\"return\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("Exit"),[FBOX(KW,S("\"exit\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("TranslationUnit"),[Arg("1")]),PP-Entry(Path("TranslationUnit",[selector("1","iter")]),[Arg("1")]),PP-Entry(Path1("FunDef"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("FunDef",[selector("1","alt")]),[Arg("1"),Arg("1"),Arg("1"),Arg("1"),Arg("1")]),PP-Entry(Path("FunDef",[selector("2","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("TypeQualifiers"),[Arg("1")]),PP-Entry(Path("TypeQualifiers",[selector("1","iter")]),[Arg("1")]),PP-Entry(Path1("OldFun"),[Arg("1"),Arg("2")]),PP-Entry(Path("OldFun",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("NoTypeSpecifier"),[]),PP-Entry(Path1("IdDecl"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("IdDecl",[selector("3","opt")]),[Arg("1")]),PP-Entry(Path1("FunDecl"),[Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),Arg("3")]),PP-Entry(Path("FunDecl",[selector("3","opt")]),[Arg("1")]),PP-Entry(Path1("TypedefDeclarator1"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("TypedefDeclarator1",[selector("3","opt")]),[Arg("1")]),PP-Entry(Path1("TypedefDeclarator2"),[Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),Arg("3")]),PP-Entry(Path("TypedefDeclarator2",[selector("3","opt")]),[Arg("1")]),PP-Entry(Path1("OldFunction1"),[Arg("1"),Arg("2"),FBOX(KW,S("\"(\"")),Arg("3"),FBOX(KW,S("\")\""))]),PP-Entry(Path("OldFunction1",[selector("3","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("OldFunction2"),[Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),Arg("3")]),PP-Entry(Path("OldFunction2",[selector("3","opt")]),[Arg("1")]),PP-Entry(Path1("PpIf"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\"#\"")),FBOX(KW,S("\"endif\""))]),PP-Entry(Path("PpIf",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path("PpIf",[selector("3","iter-star")]),[Arg("1")]),PP-Entry(Path("PpIf",[selector("3","iter-star"),selector("1","seq")]),[Arg("1"),Arg("2")]),PP-Entry(Path("PpIf",[selector("3","iter-star"),selector("1","seq"),selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path("PpIf",[selector("4","opt")]),[Arg("1")]),PP-Entry(Path("PpIf",[selector("4","opt"),selector("1","seq")]),[Arg("1"),Arg("2")]),PP-Entry(Path("PpIf",[selector("4","opt"),selector("1","seq"),selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("return"),[FBOX(KW,S("\"return\""))]),PP-Entry(Path1("exit"),[FBOX(KW,S("\"exit\""))])]))
