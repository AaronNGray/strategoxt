[
   PointerOf                                       -- V [H [KW["*"]] _1],
   PointerOf.1:iter-star                           -- _1,
   Pointer                                         -- _1 _2,
   Pointer.2:opt                                   -- _1,
   Pointer.2:opt.1:bracket-symbol                  -- _1,
   Pointer.2:opt.1:bracket-symbol.1:alt            -- _1 _2,
   ParamListVarArgs                                -- KW["("] _1 KW[","] KW["..."] KW[")"],
   ParamListVarArgs.1:iter-sep                     -- _1 KW[","],
   ParamList                                       -- KW["("] _1 KW[")"],
   ParamList.1:iter-star-sep                       -- _1 KW[","],
   ArrayDecl                                       -- _1 KW["["] _2 KW["]"],
   ArrayDecl.1:opt                                 -- _1,
   ArrayDecl.2:opt                                 -- _1,
   DeclBracket                                     -- KW["("] _1 KW[")"],
   DeclBracket1                                    -- KW["("] _1 KW[")"],
   DeclBracket2                                    -- KW["("] _1 KW[")"],
   FunType                                         -- KW["("] _1 KW[")"] _2,
   ParamDecl                                       -- _1 _2,
   ParamDecl.1:bracket-symbol                      -- _1,
   ParamDecl.1:bracket-symbol.1:alt                -- _1 _1 _1 _1,
   ParamDecl.1:bracket-symbol.1:alt.2:iter         -- _1,
   ParamDecl.2:opt                                 -- _1,
   ParamDecl.2:opt.1:bracket-symbol                -- _1,
   ParamDecl.2:opt.1:bracket-symbol.1:alt          -- _1 _2,
   ParamDecl2                                      -- _1 _2,
   ParamDecl2.1:bracket-symbol                     -- _1,
   ParamDecl2.1:bracket-symbol.1:alt               -- _1 _2,
   TypeName                                        -- _1 _2,
   TypeName.1:bracket-symbol                       -- _1,
   TypeName.1:bracket-symbol.1:alt                 -- _1 _2,
   TypeName.1:bracket-symbol.1:alt.2:iter          -- _1,
   TypeName.2:opt                                  -- _1,
   Enum                                            -- KW["enum"] _1 KW["{"] _2 KW["}"],
   Enum.1:opt                                      -- _1,
   Enum.2:iter-sep                                 -- _1 KW[","],
   EnumId                                          -- KW["enum"] _1,
   Enumerator                                      -- _1 _2,
   Enumerator.2:opt                                -- _1,
   EnumVal                                         -- KW["="] _1,
   Struct                                          -- KW["struct"] _1 KW["{"] _2 KW["}"],
   Struct.1:opt                                    -- _1,
   Struct.2:iter                                   -- _1,
   StructId                                        -- KW["struct"] _1,
   Union                                           -- KW["union"] _1 KW["{"] _2 KW["}"],
   Union.1:opt                                     -- _1,
   Union.2:iter                                    -- _1,
   UnionId                                         -- KW["union"] _1,
   MemDecl                                         -- _1 _2 KW[";"],
   MemDecl.2:iter-sep                              -- _1 KW[","],
   MemDecl1                                        -- _1 _2 KW[";"],
   MemDecl1.1:iter                                 -- _1,
   MemDecl1.2:iter-sep                             -- _1 KW[","],
   BitFieldSize                                    -- _1 KW[":"] _2,
   BitFieldSize.1:opt                              -- _1,
   IntConst                                        -- _1,
   FloatConst                                      -- _1,
   OctConst                                        -- _1,
   HexConst                                        -- _1,
   CharConst                                       -- _1,
   StringLit                                       -- _1,
   StringLit.1:iter                                -- _1,
   ArrayIndex                                      -- _1 KW["["] _2 KW["]"],
   FunCall                                         -- _1 KW["("] _2 KW[")"],
   FunCall.3:iter-star-sep			   -- H[_1 ","],
   Field                                           -- _1 KW["."] _2,
   DerefMember                                     -- _1 KW["->"] _2,
   PostIncr                                        -- _1 KW["++"],
   PostDecr                                        -- _1 KW["--"],
   PreIncr                                         -- KW["++"] _1,
   PreDecr                                         -- KW["--"] _1,
   SizeofExp                                       -- KW["sizeof"] _1,
   SizeofType                                      -- KW["sizeof"] KW["("] _1 KW[")"],
   Address                                         -- KW["&"] _1,
   Deref                                           -- KW["*"] _1,
   Positive                                        -- KW["+"] _1,
   Negative                                        -- KW["-"] _1,
   Tilde                                           -- KW["~"] _1,
   Negation                                        -- KW["!"] _1,
   TypeCast                                        -- KW["("] _1 KW[")"] _2,
   Mul                                             -- _1 KW["*"] _2,
   Div                                             -- _1 KW["/"] _2,
   Mod                                             -- _1 KW["%"] _2,
   Add                                             -- _1 KW["+"] _2,
   Subt                                            -- _1 KW["-"] _2,
   ShiftLeft                                       -- _1 KW["<<"] _2,
   ShiftRight                                      -- _1 KW[">>"] _2,
   Lt                                              -- _1 KW["<"] _2,
   Gt                                              -- _1 KW[">"] _2,
   Le                                              -- _1 KW["<="] _2,
   Ge                                              -- _1 KW[">="] _2,
   Equal                                           -- _1 KW["=="] _2,
   NotEqual                                        -- _1 KW["!="] _2,
   And                                             -- _1 KW["&"] _2,
   ExOr                                            -- _1 KW["^"] _2,
   IncOr                                           -- _1 KW["|"] _2,
   LAnd                                            -- _1 KW["&&"] _2,
   LOr                                             -- _1 KW["||"] _2,
   IfExp                                           -- _1 KW["?"] _2 KW[":"] _3,
   Assign                                          -- _1 _2 _3,
   AssignEq                                        -- KW["="],
   AssignMul                                       -- KW["*="],
   AssignDiv                                       -- KW["/="],
   AssignMod                                       -- KW["%="],
   AssignPlus                                      -- KW["+="],
   AssignMin                                       -- KW["-="],
   AssignSL                                        -- KW["<<="],
   AssignSR                                        -- KW[">>="],
   AssignAnd                                       -- KW["&="],
   AssignExp                                       -- KW["^="],
   AssignOr                                        -- KW["|="],
   Comma                                           -- _1 KW[","] _2,
   EmptyExp                                        -- ,
   Typedef                                         -- KW["typedef"],
   Extern                                          -- KW["extern"],
   Static                                          -- KW["static"],
   Auto                                            -- KW["auto"],
   Register                                        -- KW["register"],
   Int                                             -- KW["int"],
   Char                                            -- KW["char"],
   Short                                           -- KW["short"],
   Long                                            -- KW["long"],
   Float                                           -- KW["float"],
   Double                                          -- KW["double"],
   Signed                                          -- KW["signed"],
   Unsigned                                        -- KW["unsigned"],
   Void                                            -- KW["void"],
   Const                                           -- KW["const"],
   Volatile                                        -- KW["volatile"],
   Declaration                                     -- _1 _2 KW[";"],
   Declaration.1:bracket-symbol                    -- _1,
   Declaration.1:bracket-symbol.1:alt              -- _1 _2,
   Declaration.1:bracket-symbol.1:alt.2:iter       -- _1,
   Declaration.2:iter-star-sep                     -- _1 KW[","],
   Declaration2                                    -- _1 _2 KW[";"],
   Declaration2.1:bracket-symbol                   -- _1,
   Declaration2.1:bracket-symbol.1:alt             -- _1 _2,
   Declaration2.2:iter-star-sep                    -- _1 KW[","],
   IdDeclInit                                      -- _1 KW["="] _2,
   DeclInit                                        -- _1 KW["="] _2,
   ArrayInit                                       -- KW["{"] _1 KW["}"],
   ArrayInit.1:iter-sep                            -- _1 KW[","],
   ArrayInitIncomplete                             -- KW["{"] _1 KW[","] KW["}"],
   ArrayInitIncomplete.1:iter-sep                  -- _1 KW[","],
   AssignInit                                      -- _1,
   TypeSpec                                        -- _1 _2 _3,
   TypeSpec.1:iter-star                            -- _1,
   TypeSpec.2:bracket-symbol                       -- _1,
   TypeSpec.2:bracket-symbol.1:alt                 -- _1 _1 _1,
   TypeSpec.3:iter-star                            -- _1,
   TypeSpec.3:iter-star.1:bracket-symbol           -- _1,
   TypeSpec.3:iter-star.1:bracket-symbol.1:alt     -- _1 _2,
   DQualifiers                                     -- _1 _2 _3,
   DQualifiers.1:iter-star                         -- _1,
   DQualifiers.3:iter-star                         -- _1,
   DeclSpec                                        -- _1 _2 _3 _4 _5,
   DeclSpec.1:iter-star                            -- _1,
   DeclSpec.3:iter-star                            -- _1,
   DeclSpec.4:bracket-symbol                       -- _1,
   DeclSpec.4:bracket-symbol.1:alt                 -- _1 _1 _1,
   DeclSpec.5:iter-star                            -- _1,
   DeclSpec.5:iter-star.1:bracket-symbol           -- _1,
   DeclSpec.5:iter-star.1:bracket-symbol.1:alt     -- _1 _2,
   Id                                              -- _1,
   TypeId                                          -- _1,
   Label                                           -- _1 KW[":"] _2,
   Case                                            -- KW["case"] _1 KW[":"] _2,
   Default                                         -- KW["default"] KW[":"] _1,
   Compound                                        -- KW["{"] _1 _2 KW["}"],
   Compound.1:iter-star                            -- _1,
   Compound.2:iter-star                            -- _1,
   Stat                                            -- _1 KW[";"],
   If                                              -- KW["if"] KW["("] _1 KW[")"] _2,
   IfElse                                          -- KW["if"] KW["("] _1 KW[")"] _2 KW["else"] _3,
   Switch                                          -- KW["switch"] KW["("] _1 KW[")"] _2,
   While                                           -- KW["while"] KW["("] _1 KW[")"] _2,
   DoWhile                                         -- KW["do"] _1 KW["while"] KW["("] _2 KW[")"] KW[";"],
   For                                             -- KW["for"] KW["("] _1 KW[";"] _2 KW[";"] _3 KW[")"] _4,
   Goto                                            -- KW["goto"] _1 KW[";"],
   Continue                                        -- KW["continue"] KW[";"],
   Break                                           -- KW["break"] KW[";"],
   Return                                          -- KW["return"] _1 KW[";"],
   Exit                                            -- KW["exit"] _1 KW[";"],
   FunDef                                          -- _1 _2 _3,
   FunDef.1:bracket-symbol                         -- _1,
   FunDef.1:bracket-symbol.1:alt                   -- _1 _1 _1 _1 _1,
   FunDef.1:bracket-symbol.1:alt.5:iter            -- _1,
   FunDef.2:bracket-symbol                         -- _1,
   FunDef.2:bracket-symbol.1:alt                   -- _1 _2,
   FunDef.2:bracket-symbol.1:alt.2:seq             -- _1 _2,
   FunDef.2:bracket-symbol.1:alt.2:seq.2:iter-star -- _1,
   NoTypeSpecifier                                 -- ,
   IdDecl                                          -- _1 _2 _3,
   IdDecl.3:opt                                    -- _1,
   FunDecl                                         -- _1 KW["("] _2 KW[")"] _3,
   FunDecl.3:opt                                   -- _1,
   TypedefDeclarator1                              -- _1 _2 _3,
   TypedefDeclarator1.3:opt                        -- _1,
   TypedefDeclarator2                              -- _1 KW["("] _2 KW[")"] _3,
   TypedefDeclarator2.3:opt                        -- _1,
   OldFunction1                                    -- _1 _2 KW["("] _3 KW[")"],
   OldFunction1.3:iter-sep                         -- _1 KW[","],
   OldFunction2                                    -- _1 KW["("] _2 KW[")"] _3,
   OldFunction2.3:opt                              -- _1,
   PpIf                                            -- _1 _2 _3 _4 KW["#"] KW["endif"],
   PpIf.2:iter-star                                -- _1,
   PpIf.3:iter-star                                -- _1,
   PpIf.3:iter-star.1:seq                          -- _1 _2,
   PpIf.3:iter-star.1:seq.2:iter-star              -- _1,
   PpIf.4:opt                                      -- _1,
   PpIf.4:opt.1:seq                                -- _1 _2,
   PpIf.4:opt.1:seq.2:iter-star                    -- _1,
   return                                          -- KW["return"],
   exit                                            -- KW["exit"]
]
