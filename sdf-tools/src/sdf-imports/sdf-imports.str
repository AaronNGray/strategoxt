module sdf-imports
imports get-modules lib pack-graph pack file Sdf2 sdf-xtc-tools xtc-lib
signature
  sorts Node
  constructors
    Node: X * X * X -> Z

strategies

  main =
    get-modules(imports-sdf, !"sdf"); <exit>0

  imports-sdf(mkpt, ext) =
    \ root -> (root, ["." | <mkpt>()], []) \
    ; graph-nodes(
        my-parse-sdf(ext)
      , out-edges
      , add-node
      )

  my-parse-sdf(ext) = 
      (guarantee-extension(ext), id)
    ; ?module-name
    ; find-in-path
    ; debug(!"  including ")
    ; xtc-temp-files(
        !FILE(<id>)
      ; xtc-parse-sdf2-module
      ; read-from
      )
    ; !Node(module-name, <get-module-name>, <get-sdf-imports>)

rules

  get-module-name =
    ?'module(unparameterized(<id>), _, _)

  get-sdf-imports =
      collect(?'imports(<id>))
    ; concat
    ; map(?'module(unparameterized(<id>)))

  add-node:
    (m, Node( (f,p), location, edges), xs) -> <conc>(xs',[Node(m, location)])
      where <map(add_edge(!m))> edges => edges'
          ; <conc> (edges', xs) => xs'

  out-edges:
    Node(_, _, edges) -> edges

  add_edge(k) :
    x -> Edge(<k> (), x)
