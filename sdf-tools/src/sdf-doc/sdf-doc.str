module sdf-doc
imports lib Sdf2 graph-terms
strategies

  main =
    io-wrap(sort-graph)

  sort-graph =
    collect(
       \ prod    (  ss,sort(s),_) -> <build-edges>(ss,s) \
    <+ \ prod-fun(_,ss,sort(s),_) -> <build-edges>(ss,s) \
    <+ \ alias   (   a,sort(s))   -> <build-edges>(a ,s) \
         , skip-appl // skip the production child of non-imploded application node
    )
    ; concat
    ; graph-from-edges

  graph-from-edges :
    edgelist -> graph(nodes(<collect-nodes>edgelist),edges(edgelist))

  build-edges :
    (ss,s) -> <filter(collect(\sort(x)-><mk-edge>(x,s)\));concat> ss

  mk-edge :
    (x,y) -> ['id(x),'id(y)]

  skip-appl(x,t) :
    appl(_,ts) -> <x> ts

  collect-nodes =
    collect(?'id(_))
