module sdf-label
imports
  Sdf2
  Literal-lib
  verbalize-sdf
  AsFix
  liblib

signature
   constructors
      empty-layout : a

strategies

  sdf-label= io-wrap(Sdf-label)

  Sdf-label =
    alltd(dont-label <+ label-production)

  label-production
    = ( prod(map(try(label-symbol)),id,id)
     <+ prod-fun(id,map(try(label-symbol)),id,id)
      )
    ; warn-if-labels-not-unique

  dont-label
    = priorities(id)
    + context-free-priorities(id)
    + lexical-priorities(id)
    + variables(id)
    + lexical-variables(id)
//    + context-free-variables(id)
//    + Imports(id)
//    + Sorts(id)


  warn-if-labels-not-unique
    = if( where ( get-argument-symbols  
                ; filter(\label(l,_)->l\)
                ; contains-doubles
                )
        , debug(!"Labels not unique in production: ")
        )

  contains-doubles
    = not(?l;uniq;?l)

  get-argument-symbols
    = \prod      (ss,_,_) -> ss\
    + \prod-fun(_,ss,_,_) -> ss\
     
  label-symbol
    = label(id,id)
   <+ \sort(n) -> label(<sortname2label>n,sort(n))\
   <+ \sym     -> label(<symbol2label>sym,sym)\
//   <+ \sym     -> label(<lit2str>sym,sym)\

  sortname2label
    //= quote
    = lcHd;quote-sdf-keyword

  symbol2label
    = sym2str';lcHd;quote-sdf-keyword
  
  lcHd
    = explode-string;[lc|id];implode-string

  quote-sdf-keyword
    = not(is-sdf-keyword) <+ quote

  is-sdf-keyword
    = "aliases" + "lexical" + "priorities" + "context-free" 
    + "definition" + "syntax" + "variables" + "module" + "exports" 
    + "hiddens" + "left" + "right" + "assoc" + "non-assoc" + "bracket"
    + "sorts" + "restrictions" + "constructor" + "memo"
