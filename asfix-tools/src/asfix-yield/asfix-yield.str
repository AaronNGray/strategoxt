module asfix-yield
imports lib AsFix
strategies

  main =
      parse-options( io-options )
    ; where(
        option-defined(?Output(outfile))
      ; <open-file>(outfile, "w") <+ !stdout => outfile
      )
    ; input-file
    ; (id, asfix-yield(!outfile))
    ; <exit> 0

  short-description(p) =  
    !["Usage: ", <p>(), " [options]"]

  long-description(p)  = 
    !["The asfix-yield utility unparses an asfix tree to flat text.\n",
      "It reads from standard input and writes to standard output.\n"]

  asfix-yield(outfile) = 
    if is-asfix2 then
      asfix-yield2(outfile)
    else
      <fatal-error> ["not in AsFix format"]
    end

  asfix-yield2(outfile) = 
    leaves(
        is-string
      ; split(outfile, \x -> [x]\ )
      ; print
     <+ split(
          outfile, \x -> [x] \); printascii
        , is-leaf
        , skip2
        )

  skip2(x) = 
      appl(id, list(x))
    + amb([x|id])
    + parsetree(x,id)
    // + flatlex(id,x)

  is-asfix2 =
      parsetree(id, id)
    + appl(id,id)
