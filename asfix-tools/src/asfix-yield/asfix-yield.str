module asfix-yield
imports liblib AsFix
strategies

  main =
      parse-options(io-options, asfix-yield-usage, system-about)
    ; (<open-file> (<get-config> "-o", "w") <+ !stdout) => outfile
    ; input(asfix-yield(!outfile))
    ; <exit> 0

  asfix-yield-usage =
    default-system-usage(
      !["Usage: asfix-yield [options]"]
    , !["The asfix-yield utility unparses an asfix tree to flat text.\n",
        "It reads from standard input and writes to standard output.\n"]
    )

  asfix-yield(outfile) = 
    if is-asfix2 then
      asfix-yield2(outfile)
    else
      <fatal-error> ["not in AsFix format"]
    end

  asfix-yield2(outfile) = 
    leaves(
        is-string
      ; split(outfile, \x -> [x]\ )
      ; print
     <+ split(
          outfile, \x -> [x] \); printascii
        , is-leaf
        , asfix-skip2
        )

  asfix-skip2(x) = 
      appl(id, list(x))
    + amb([x|id])
    + parsetree(x,id)
    // + flatlex(id,x)

  is-asfix2 =
      parsetree(id, id)
    + appl(id,id)
