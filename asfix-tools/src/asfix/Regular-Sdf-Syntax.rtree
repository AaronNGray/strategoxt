Specification([Imports(["Kernel-Sdf-Syntax","IntCon"]),Signature([Constructors([OpDecl("empty",ConstType(Var("Symbol"))),OpDecl("seq",FunType([ConstType(Var("Symbol")),ConstType(Op("List",[Var("Symbol")]))],ConstType(Var("Symbol")))),OpDecl("opt",FunType([ConstType(Var("Symbol"))],ConstType(Var("Symbol")))),OpDecl("iter",FunType([ConstType(Var("Symbol"))],ConstType(Var("Symbol")))),OpDecl("iter-star",FunType([ConstType(Var("Symbol"))],ConstType(Var("Symbol")))),OpDecl("iter-sep",FunType([ConstType(Var("Symbol")),ConstType(Var("Symbol"))],ConstType(Var("Symbol")))),OpDecl("iter-star-sep",FunType([ConstType(Var("Symbol")),ConstType(Var("Symbol"))],ConstType(Var("Symbol")))),OpDecl("iter-n",FunType([ConstType(Var("Symbol")),ConstType(Var("NatCon"))],ConstType(Var("Symbol")))),OpDecl("iter-sep-n",FunType([ConstType(Var("Symbol")),ConstType(Var("Symbol")),ConstType(Var("NatCon"))],ConstType(Var("Symbol")))),OpDecl("set",FunType([ConstType(Var("Symbol"))],ConstType(Var("Symbol")))),OpDecl("pair",FunType([ConstType(Var("Symbol")),ConstType(Var("Symbol"))],ConstType(Var("Symbol")))),OpDecl("func",FunType([ConstType(Var("Symbols")),ConstType(Var("Symbol"))],ConstType(Var("Symbol")))),OpDecl("alt",FunType([ConstType(Var("Symbol")),ConstType(Var("Symbol"))],ConstType(Var("Symbol")))),OpDecl("perm",FunType([ConstType(Var("Symbols"))],ConstType(Var("Symbol"))))])])])
