Specification([Imports(["asfix","list","tuple","Character-Class-Syntax.r"]),Signature([Constructors([OpDecl("ConcLayout",FunType([ConstType(Var("Layout"))],ConstType(Var("Conclayout")))),OpDecl("id",FunType([ConstType(Var("a"))],ConstType(Var("a"))))])]),Overlays([Overlay("conc-prod",["s"],Op("prod",[Op("Cons",[Op("cf",[Op("iter",[Var("s")])]),Op("Cons",[Op("cf",[Op("opt",[Var("layout")])]),Op("Cons",[Op("cf",[Op("iter",[Var("s")])]),Op("Nil",[])])])]),Op("cf",[Op("iter",[Var("s")])]),Var("no-attrs")])),Overlay("iter-inj-prod",["s"],Op("prod",[Op("Cons",[Op("cf",[Var("s")]),Op("Nil",[])]),Op("cf",[Op("iter",[Var("s")])]),Var("no-attrs")])),Overlay("af-iter-inj",["s","x"],Op("appl",[Op("iter-inj-prod",[Var("s")]),Op("Cons",[Var("x"),Op("Nil",[])])])),Overlay("af-conc",["s","x","l","y"],Op("appl",[Op("conc-prod",[Var("s")]),Op("Cons",[Var("x"),Op("Cons",[Var("l"),Op("Cons",[Var("y"),Op("Nil",[])])])])]))]),Overlays([Overlay("flatlit",["str"],Op("flatlex",[Op("lit",[Var("str")]),Var("str")])),Overlay("white",["str"],Op("flatlex",[Op("cf",[Op("opt",[Var("layout")])]),Var("str")])),Overlay("start",["s","l1","x","l2"],Op("appl",[Op("prod",[Op("Cons",[Op("cf",[Op("opt",[Var("layout")])]),Op("Cons",[Op("cf",[Op("sort",[Var("s")])]),Op("Cons",[Op("cf",[Op("opt",[Var("layout")])]),Op("Nil",[])])])]),Op("sort",[Str("<START>")]),Var("no-attrs")]),Op("Cons",[Var("l1"),Op("Cons",[Var("x"),Op("Cons",[Var("l2"),Op("Nil",[])])])])])),Overlay("CfLayout",["l"],Op("appl",[Op("prod",[Op("Cons",[Op("lex",[Var("layout")]),Op("Nil",[])]),Op("cf",[Var("layout")]),Var("no-attrs")]),Op("Cons",[Var("l"),Op("Nil",[])])])),Overlay("ConcCfLayout",["l1","l2"],Op("appl",[Op("prod",[Op("Cons",[Op("cf",[Var("layout")]),Op("Cons",[Op("cf",[Var("layout")]),Op("Nil",[])])]),Op("cf",[Var("layout")]),Op("attrs",[Op("Cons",[Op("atr",[Str("left")]),Op("Nil",[])])])]),Op("Cons",[Var("l1"),Op("Cons",[Var("l2"),Op("Nil",[])])])])),Overlay("NoCfLayout",[],Op("appl",[Op("prod",[Op("Nil",[]),Op("cf",[Op("opt",[Var("layout")])]),Var("no-attrs")]),Op("Nil",[])])),Overlay("CfOptLayout",["l"],Op("appl",[Op("prod",[Op("Cons",[Op("cf",[Var("layout")]),Op("Nil",[])]),Op("cf",[Op("opt",[Var("layout")])]),Var("no-attrs")]),Op("Cons",[Var("l"),Op("Nil",[])])])),Overlay("Space",[],Op("CfLayout",[Op("appl",[Op("prod",[Op("Cons",[Op("char-class",[Op("Cons",[Op("range",[Int(9),Int(10)]),Op("Cons",[Int(32),Op("Nil",[])])])]),Op("Nil",[])]),Op("lex",[Var("layout")]),Op("attrs",[Op("Cons",[Op("id",[Str("Layout")]),Op("Nil",[])])])]),Op("Cons",[Int(32),Op("Nil",[])])])])),Overlay("NewLine",[],Op("CfLayout",[Op("appl",[Op("prod",[Op("Cons",[Op("char-class",[Op("Cons",[Op("range",[Int(9),Int(10)]),Op("Cons",[Int(32),Op("Nil",[])])])]),Op("Nil",[])]),Op("lex",[Var("layout")]),Op("attrs",[Op("Cons",[Op("id",[Str("Layout")]),Op("Nil",[])])])]),Op("Cons",[Int(10),Op("Nil",[])])])])),Overlay("OptNewLine",[],Op("CfOptLayout",[Var("NewLine")]))]),Strategies([SDef("yield",[],Seq(Rec("x",LChoice(Seq(Call(SVar("appl"),[Id,Call(SVar("map"),[Call(SVar("x"),[])])]),LRule(Rule(Op("appl",[Var("p"),Var("ts")]),App(Call(SVar("concat"),[]),Var("ts")),Id))),LChoice(LRule(Rule(Op("flatlex",[Wld,Var("str")]),App(Call(SVar("explode-string"),[]),Var("str")),Id)),LRule(Rule(Var("a"),Op("Cons",[Var("a"),Op("Nil",[])]),Id))))),Call(SVar("implode-string"),[])))]),Rules([RDef("flatten",[],Rule(Op("appl",[Op("prod",[Wld,Var("srt"),Wld]),Var("ts")]),Op("flatlex",[Var("srt"),Var("str")]),AM(Call(SVar("yield"),[]),Var("str")))),RDef("flatten",[],Rule(Op("flatlex",[Var("srt"),Var("str")]),Op("flatlex",[Var("srt"),Var("str")]),Id)),RDef("lit-tree",[],Rule(Var("str"),Op("appl",[Op("prod",[Var("char-sorts"),Op("lit",[Var("str")]),Var("no-attrs")]),Var("chars")]),Seq(AM(BA(Call(SVar("explode-string"),[]),Var("str")),Var("chars")),AM(BA(Call(SVar("map"),[LRule(Rule(Var("c"),Op("char-class",[Op("Cons",[Var("c"),Op("Nil",[])])]),Id))]),Var("chars")),Var("char-sorts"))))),RDef("conc-layout1",[],Rule(Op("",[Op("CfOptLayout",[Var("l1")]),Op("CfOptLayout",[Var("l2")])]),Op("CfOptLayout",[Op("ConcCfLayout",[Var("l1"),Var("l2")])]),Id)),RDef("conc-layout2",[],Rule(Op("",[Var("NoCfLayout"),Var("l")]),Var("l"),Id)),RDef("conc-layout3",[],Rule(Op("",[Var("l"),Var("NoCfLayout")]),Var("l"),Id))]),Strategies([SDef("conc-layout",[],LChoice(Call(SVar("conc-layout1"),[]),LChoice(Call(SVar("conc-layout2"),[]),Call(SVar("conc-layout3"),[]))))]),Rules([RDef("UnStart",[],Rule(Op("start",[Var("s"),Var("l1"),Var("x"),Var("l2")]),Op("",[Var("l1"),Var("x"),Var("l2")]),Id)),RDef("CombineLayout",[DefaultVarDec("s1"),DefaultVarDec("s2")],Rule(Op("",[Op("",[Var("l1"),Var("x"),Var("l2")]),Op("",[Var("l3"),Var("y"),Var("l4")])]),Op("",[Var("l1"),App(Call(SVar("s1"),[]),Op("",[Var("x"),App(Call(SVar("s2"),[]),Op("",[Var("l2"),Var("l3")])),Var("y")])),Var("l4")]),Id))]),Strategies([SDef("concat-layout",[],Call(SVar("foldr1a"),[LChoice(Call(SVar("conc-layout"),[]),LRule(Rule(Var("x"),Op("ConcLayout",[Var("x")]),Id)))])),SDef("foldr1a",[DefaultVarDec("s")],Rec("f",LChoice(LRule(Rule(Op("Cons",[Var("x"),Op("Nil",[])]),Var("x"),Id)),LRule(Rule(Op("Cons",[Var("a"),Op("Cons",[Var("b"),Var("xs")])]),App(Call(SVar("f"),[]),Op("Cons",[App(Call(SVar("s"),[]),Op("",[Var("a"),Var("b")])),Var("xs")])),Id)))))])])
