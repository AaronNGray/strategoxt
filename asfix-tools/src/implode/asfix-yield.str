\literate
% GT -- Grammar Tools
% Copyright (C) 2000 Merijn de Jonge <mdejonge@cwi.nl>
%                    Eelco Visser <visser@acm.org>
%                    Joost Visser <jvisser@cwi.nl>
%
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 2, or (at your option)
% any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
% 02111-1307, USA.

% $Id: asfix-yield.str,v 1.1 2002/11/27 23:10:44 stratego Exp $

\begin{code}
module asfix-yield
(*
	Author: Joost Visser (Joost.Visser@cwi.nl)

	Usage:
	  asfix-yield -i <AsFix> -o <String>

	  Flattens an AsFix tree to its yield.
*)
imports
  lib
  Sdf-ParseTree-Syntax
  Sdf-FlatLex-Syntax

strategies

  main
    = iowrap(asfix-yield)

rules

  Yield-parsetree:
    parsetree(t,n) -> t

  Yield-appl:
    appl(p,ts) -> <concat> ts

  Yield-flatlex:
    flatlex(str) -> <explode-string> str

  Yield-asfixchar:
    c -> [c]

strategies

  asfix-yield
    = Yield-parsetree
    ; rec x( ( appl(id,map(x)) ; Yield-appl )
          <+ Yield-flatlex
          <+ Yield-asfixchar
           )
    ; implode-string

  
\end{code}
