module sglri
imports liblib

strategies

  sglri =
    xtc-io-wrap(sglri-options, parse-and-implode)

  sglri-options =
      ArgOption("-p",
        where(<set-config> ("-p", <id>)),
        !"-p <file.tbl>           Use parse table <file.tbl> (required)")
    + ArgOption("--start", 
        where(<set-config> ("--start", <id>)),
        !"--start <symbol>        Start parsing with <symbol>")
    + sglr-filter-options

    + Option(fail, fail, !"")

    + ArgOption("--sglr", 
        where(<extend-config> ("--sglr", [<id>])),
        !"--sglr <opt>            Pass <opt> to sglr")
    + ArgOption("--impl", 
        where(<extend-config> ("--impl", [<id>])),
        !"--impl <opt>            Pass <opt> to implode-asfix")

    + Option(fail, fail, !"")

  sglr-filter-options =
      Option("--no-heuristic-filters"
      , where(<extend-config> ("--sglr", ["-fi", "-fe"]))
      , !"--no-heuristic-filters  Don't use hearistic disambiguation filters (encouraged)"
    )


  (*
  short-description(p) = 
    !["Usage: ", <p>(), " [options]"]
 
  long-description(p)  = 
    !["The sglri tool parses a text file according to the parse table provided with\n",
      "the -p option and implodes the resulting concrete (asfix) tree to an abstract\n",
      "syntax tree.\n"] *)

  parse-and-implode =
      sglr(get-parse-table, pass-sglri-args)
    ; implode-asfix(<get-config <+ ![]> "--impl")

  pass-sglri-args = 
    ( !["-s", <get-config>"--start"] <+ ![] ) => start
  ; ( <get-config>"--sglr" <+ ![] )           => sglr
  ; <concat>[ ["-2"], start, sglr]

  get-parse-table =
    <get-config> "-p" <+ <fatal-error> ["** ERROR: no parse table specified"]

  sglr(tbl) = sglr(tbl, ![])
    
  sglr(tbl, args) =
    xtc-transform(!"sglr", !["-p", <tbl> | <args>])
      
  implode-asfix(args) = 
    xtc-transform(!"implode-asfix", args)
