/**
 * Reporting syntax errors in commands to the user.
 */
module sglri-error-reporting
imports error-support
strategies

  /**
   * Reports an sglri error summary to the stderr.
   *
   * Always fails.   
   *
   * @type  summary -> _
   */
  report-sglri-error-summary(|input) =
    finally(
      where(
        read-from
      ; ?summary(_, file, [error(err, [localized(descr, <id>)])])
      ; switch id
          case ?area-in-file(_, area) : <report-area(|file, descr, area)> input
	  case ?file(error-file) : <report-file(|err,descr)>input
        end
      )
      <+ read-from ; debug(!"Parse error cannot be presented. Please report bug.")
    , fail)

  /**
   * Presents file error message at stderr.
   */
  report-file(|err,descr) =
     if !err => "Parse Table error" then
       <fprintnl> ( <stderr-stream> (), [<get-config>"-p", ": ", err, ", ", descr])
     else
       fail
     end
  
  /**
   * Presents the 'area' in the input file at stderr.
   *
   * @type  FILE -> _
   */
  report-area(|file, descr, area) =
    let y-pos =
          !area
          ; ?area(begin-line, begin-column, _, end-column, _, _)
          ; !begin-line
          ; dec 
          ; if <lt> (<id>, 0) then !0 else id end

        x-pos =
          !area
          ; ?area(begin-line, begin-column, _, end-column, _, _)
          ; <dec> begin-column => c
          ; if <lt> (c, 0) then !0 else id end

     in ?FILE(<read-text-file>)
      ; get-lines
      ; add-indices
      ; where(y-pos => y)

      ; where(<fprintnl> (<stderr-stream> (), [file, ": ",  descr, " at line ", <int-to-string> begin-line, ", column ", <int-to-string> begin-column]))

      ; at-suffix(?[(y, _) | _]; ?context)

      /**
       * If there are 2 or more elements, drop the rest.
       */
      ; !context
      ; if !context => [s1, s2 | _ ] then
          ![s1, s2]
        end

      ; where(map(<fprintnl> (<stderr-stream> (), [<Snd>])))

      /**
       * Indicate the position in the file
       */
      ; <conc-strings> (<copy-char> (<x-pos> (), ' '), "^")
      ; where(<fprintnl> (<stderr-stream> (), [<id>]))
    end
