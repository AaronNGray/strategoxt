[
   Roundinterface.2:iter-sep.1:seq.2:opt                   -- _1,
   Roundinterface.2:iter-sep.1:seq                         -- _1 _2,
   Roundinterface.2:iter-sep                               -- _1 KW[","],
   Roundinterface                                          -- _1 _2 KW[";"],
   Optional                                                -- KW["optional"],
   Using                                                   -- KW["using"],
   Group                                                   -- KW["group"],
   Pointer                                                 -- KW["*"],
   Prototype.4:opt.1:seq.1:alt.2:iter-star-sep             -- _1 KW[","],
   const                                                   -- KW["const"],
   Interfacedef                                            -- V  [H  [KW["interface"] _1] V is=3 [KW["{"] _2] KW["}"]],
   Interfacedef.2:iter-star                                -- H  [_1],
   Interfacedef.2:iter-star.1:alt                          -- _1 _2,
   Interfacedef.2:iter-star.1:alt.2:seq                    -- H  [KW["using"] _1],
   Usingclause                                             -- H hs=0 [_1 KW[";"]],
   Usingclause.1:iter-sep                                  -- H hs=0 [_1 KW[","]],
   Prototype                                               -- H hs=0 [H  [_1 _2 _3 _4 _5] KW[";"]],
   Prototype.1:opt                                         -- _1,
   Prototype.4:opt                                         -- _1,
   Prototype.4:opt.1:seq                                   -- H hs=0 [KW["("] H  [_1] KW[")"]],
   Prototype.4:opt.1:seq.1:alt                             -- _1 _2,
   Prototype.4:opt.1:seq.1:alt.1:opt                       -- _1,
   Prototype.4:opt.1:seq.1:alt.1:opt.1:iter-sep            -- H hs=0 [H  [_1] KW[","]],
   Prototype.5:opt                                         -- _1,
   Prototype.5:opt.1:seq                                   -- KW["="] _1,
   Parameterdef                                            -- _1 _2,
   Type                                                    -- _1,
   Type.1:alt                                              -- _1 _2,
   Declarator                                              -- _1 H hs=0 [_2 _3],
   Declarator.1:opt                                        -- _1,
   Declarator.2:opt                                        -- _1,
   Datadefinitions                                         -- _1,
   Datadefinitions.1:iter-star                             -- _1,
   Datadefinition                                          -- _1 _2 _3 KW["**/"],
   Datadefinition.2:alt                                    -- KW["type"] KW["group"] KW["using"],
   Componentdef                                            -- V  [H  [KW["component"] _1] V vs=0 is=3 [KW["{"] V vs=1 [_2]] KW["}"]],
   Componentdef.2:iter-star                                -- _1,
   Specials                                                -- V is=3 [H  [KW["specials"]] _1],
   Specials.1:iter-star                                    -- _1,
   Provides                                                -- V vs=0 is=3 [H  [KW["provides"]] _1],
   Provides.1:iter-star                                    -- _1,
   Requires                                                -- V vs=0 is=3 [H  [KW["requires"]] _1],
   Requires.1:iter-star                                    -- _1,
   Contains                                                -- V vs=0 is=3 [H  [KW["contains"]] _1],
   Contains.1:iter-star                                    -- _1,
   Connects                                                -- V vs=0 is=3 [H  [KW["connects"]] _1],
   Connects.1:iter-star                                    -- _1,
   Uses                                                    -- V vs=0 is=3 [H  [KW["uses"]] _1],
   Uses.1:iter-star                                        -- _1,
   Usessection                                             -- H hs=0 [_1 KW[";"]],
   Usessection.1:iter-sep                                  -- H hs=0 [_1 KW[","]],
   Prefixspecial                                           -- H hs=0 [H  [KW["prefix"] _1] KW[";"]],
   Filespecial                                             -- H hs=0 [H  [KW["file"] _1] KW[";"]],
   Externalinterface                                       -- H hs=0 [H  [_1 _2] KW[";"]],
   Externalinterface.2:iter-sep                            -- H hs=0 [_1 KW[","]],
   Externalinterface.2:iter-sep.1:seq                      -- H  [_1 _2],
   Externalinterface.2:iter-sep.1:seq.2:opt                -- _1,
   Constituent                                             -- _1,
   Constituent.1:alt                                       -- _1 _1 _1,
   Modules                                                 -- H  [KW["module"] V  [_1]],
   Modules.1:iter                                          -- _1,
   Module                                                  -- H hs=0 [H  [_1 _2] KW[";"]],
   Module.2:iter-star-sep                                  -- H hs=0 [_1 KW[","]],
   Fileattr                                                -- H  [KW["file"] _1],
   Presentattr                                             -- KW["present"],
   Legacyattr                                              -- KW["legacy"],
   Noprefixattr                                            -- KW["no_prefix"],
   Components                                              -- H  [KW["component"] V  [_1]],
   Components.1:iter                                       -- _1,
   Componentdecl                                           -- H hs=0 [H  [_1 _2] KW[";"]],
   Componentdecl.2:iter-sep                                -- H hs=0 [_1 KW[","]],
   Privateinterfaces                                       -- H  [KW["interface"] V  [_1]],
   Privateinterfaces.1:iter                                -- _1,
   Interfacedecl                                           -- H hs=0 [H  [_1 _2] KW[";"]],
   Interfacedecl.2:iter-sep                                -- H hs=0 [_1 KW[","]],
   Interfacedecl.2:iter-sep.1:seq                          -- H  [_1 _2],
   Interfacedecl.2:iter-sep.1:seq.2:opt                    -- _1,
   Cable                                                   -- H hs=0 [H  [_1 KW["="] _2] KW[";"]],
   Fibres                                                  -- V  [H  [KW["within"] _1] V is=3 [KW["{"] _2] KW["}"]],
   Fibres.2:iter-star                                      -- _1,
   Exceptcable                                             -- H hs=0 [H  [KW["interface"] _1 KW["="] _2 KW["except"] _3] KW[";"]],
   Exceptcable.3:iter-sep                                  -- H hs=0 [_1 KW[","]],
   Requiredconstants                                       -- H hs=0 [H  [KW["const"] _1] KW[";"]],
   Requiredconstants.1:iter-sep                            -- H hs=0 [_1 KW[","]],
   Addressablefunctions                                    -- H hs=0 [H  [KW["addressable"] _1] KW[";"]],
   Addressablefunctions.1:iter-sep                         -- H hs=0 [_1 KW[","]],
   Switch                                                  -- H hs=0 [V is=3 [H  [KW["switch"] _1] _2 _3] KW[";"]],
   Inswitches                                              -- V  [KW["in"] V is=3 [KW["{"] _1] KW["}"]],
   Outswitches                                             -- V  [H  [KW["out"]] _1],
   Outswitches.1:iter-sep                                  -- H hs=0 [_1 KW[","]],
   Outswitchlist                                           -- H  [V  [V is=3 [KW["{"] _1] KW["}"]] _2],
   Outswitchlist.2:opt                                     -- _1,
   Ontrigger                                               -- H  [KW["on"] _1],
   Otherwisetrigger                                        -- KW["otherwise"],
   Functiondef                                             -- H hs=0 [H  [_1 KW["="] _2] KW[";"]],
   Constantsig                                             -- _1,
   Functionsig                                             -- H hs=0 [_1 KW["("] H  [_2] KW[")"]],
   Functionsig.2:iter-star-sep                             -- H hs=0 [_1 KW[","]],
   Functionname1                                           -- H hs=0 [_1 KW["."] _2 KW["."] _3],
   Functionname2                                           -- H hs=0 [_1 KW["."] _2],
   Functioncall1                                           -- H hs=0 [_1 KW["("] H  [_2] KW[")"]],
   Functioncall1.2:iter-star-sep                           -- H hs=0 [_1 KW[","]],
   Functioncall2                                           -- _1,
   Interface1                                              -- H hs=0 [_1 KW["."] _2],
   Interface2                                              -- _1,
   Exprlist                                                -- _1,
   Exprlist.1:iter-sep                                     -- H hs=0 [_1 KW[","]],
   If                                                      -- _1 KW["?"] _2 KW[":"] _3,
   Lor                                                     -- _1 KW["||"] _2,
   Land                                                    -- _1 KW["&&"] _2,
   Incor                                                   -- _1 KW["|"] _2,
   Exor                                                    -- _1 KW["^"] _2,
   And                                                     -- _1 KW["&"] _2,
   Eq                                                      -- _1 KW["=="] _2,
   Neq                                                     -- _1 KW["!="] _2,
   Lte                                                     -- _1 KW["<="] _2,
   Lt                                                      -- _1 KW["<"] _2,
   Gt                                                      -- _1 KW[">"] _2,
   Gte                                                     -- _1 KW[">="] _2,
   Shifhtleft                                              -- _1 KW["<<"] _2,
   Shiftright                                              -- _1 KW[">>"] _2,
   Plus                                                    -- _1 KW["+"] _2,
   Min                                                     -- _1 KW["-"] _2,
   Mult                                                    -- _1 KW["*"] _2,
   Div                                                     -- _1 KW["/"] _2,
   Mod                                                     -- _1 KW["%"] _2,
   Neqation                                                -- KW["!"] _1,
   Negative                                                -- KW["-"] _1,
   Positive                                                -- KW["+"] _1,
   Tilde                                                   -- KW["~"] _1,
   Const                                                   -- KW["const"] _1,
   Integer                                                 -- _1,
   true                                                    -- KW["true"],
   false                                                   -- KW["false"],
   void                                                    -- KW["void"],
   null                                                    -- KW["null"],
   Identifier                                              -- _1,
   Parameter                                               -- _1,
   Inlinefunction1                                         -- KW["inline"] _1,
   Inlinefunction2                                         -- KW["inline"] _1 KW["using"] _2,
   Inlinefunction2.2:iter-sep                              -- _1 KW[","],
   Koalaspec                                               -- V vs=1 [_1],
   Koalaspec.1:iter-star                                   -- _1,


   Renaming                                     -- _1 KW["/"] _2,
   DelIntf                                      -- KW["-"] _1,
   AddIntf                                      -- KW["+"] _1,
   DelCable                                     -- KW["-"] _1,
   AddCable                                     -- KW["+"] _1,
   DelConstituent                               -- KW["-"] _1,
   AddConstituent                               -- KW["+"] _1
]
