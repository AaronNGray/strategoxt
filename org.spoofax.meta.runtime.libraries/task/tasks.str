module task/tasks

imports
	
	task/core
  task/messages
	task/interface
  
signature

	constructors

    Id      : Term                                 -> Instruction		
    Concat  : List(Term)                           -> Instruction
    Choice  : List(Result)                         -> Instruction
    Match   : ID * List(Term) * Term               -> Instruction
    Rewrite : ID * Term                            -> Instruction
    
rules
  
  perform-task(|nr): Id(term) -> term
  	
rules
	     
  task-is-combinator = ?Concat(_)

	perform-task(|nr): Concat(term*) -> <map(is-list <+ MkSingleton); concat> term*

rules
  
	task-is-combinator = ?Choice(_)

  perform-task(|nr): Choice(choice*) -> <Hd> choice*

rules
      	
  perform-task(|nr): Match(key, bound, term) -> <task-match> (key, term, bound)
  
  perform-task(|nr): Rewrite(key, term) -> <task-match> (key, term)
  
  	