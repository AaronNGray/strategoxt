module task/tasks

imports
	
	task/core
  task/messages
	task/interface
  
signature

	constructors
		
    Id      : Term              -> Instruction   
    Combine : List(Term)        -> Instruction
    Collect : List(Term)        -> Instruction
    Choice  : List(List(Term))  -> Instruction
    Rewrite : ID * Term         -> Instruction
    Index   : Int * List(Term)  -> Instruction
    
rules
	
	task-is-combinator = ?Choice(_)
	perform-task(|nr) = ?Choice(<fetch-elem(not(?[]))>)
     
rules
  
  perform-task(|nr) = ?Id(<MkSingleton>)
  	
rules
       
  task-is-combinator = ?Combine(_)
  perform-task(|nr)  = ?Combine(<map(is-list <+ MkSingleton)>); concat

rules
       
  task-is-combinator = ?Collect(_)
  perform-task(|nr)  = ?Collect(<map(is-list <+ MkSingleton)>); concat; MkSingleton
  
rules
      	
  perform-task(|nr) = ?Rewrite(key, term); <task-rewrite; MkSingleton> (key, term)
  
rules
  
  perform-task(|nr) = ?Index(i, <index(|i)>);  MkSingleton
  