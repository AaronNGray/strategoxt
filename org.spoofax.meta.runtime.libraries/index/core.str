module index/core

signature

  sorts
  
    URI Entry
  
rules

  /**
   * Sets up the index library for given language, project paths and current file.
   * Must be called once before doing anything with the library.
   *
   * Example:
   *   <index-setup(|"MiniJava", [<project-path>], "test/test.mjv")
   *
   * @param language          The language to set the index up for.
   * @param project-path      The project paths that contain all source files to analyse and compile.
   * @param current-partition The current partition that is being analysed. Can be retrieved later using 
   *                          index-get-current-partition. Can also be changed later using index-set-current-partition.
   * @type x -> x
   */
  index-setup(|language, project-paths, current-partition) =
    prim("LANG_index_setup", language, project-paths, current-partition)
    
  /**
   * Sets the current file the index (analysis) is operating on to the given file.
   *
   * Example:
   *   <index-set-current-partition> "fullpath/file.ext"
   *   <index-set-current-partition> ("fullpath/file.ext", "subfile")
   *
   * @type x -> ?x
   */
  index-set-current-partition = 
    prim("LANG_index_set_current_file", <id>)

  /**
   * Adds given element to the index.
   *
   * Example:
   *   <index-add(|"fullpath/file.ext")> Def([Entity(), "Bar"])
   *   <index-add(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
   *
   * @param partition The partition to add the element to.
   * @type x -> ?x
   */
  index-add(|partition) =
    prim("LANG_index_add", <id>, partition)

  /**
   * Adds all given elements to the index.
   *
   * Example:
   *   <index-add-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
   *   <index-add-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
   *
   * @param partition The partition to add the elements to.
   * @type List(x) -> ?List(x)
   */
  index-add-all(|partition) =
    list-loop(with(index-add(|partition)))
    
  /**
   * Removes given entry from the index that is contained in given partition.
   *
   * Example:
   *   <index-remove(|"fullpath/file.ext")> Def([Entity(), "Bar"])
   *   <index-remove(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
   * 
   * @param partition The partition to remove the element from.
   * @type x -> ?x
   */
  index-remove(|partition) =
    prim("LANG_index_remove", <id>, partition)
    
  /**
   * Removes entries with given template from the index (from all partitions).
   *
   * Example:
   *   <index-remove-all> Def([Entity(), "Bar"])
   * 
   * @param partition The partition to remove the element from.
   * @type x -> ?x
   */
  index-remove-all =
    prim("LANG_index_remove_all", <id>)
    
  /**
   * Removes given entry from the index (from all partitions).
   *
   * Example:
   *   <index-remove-all> DefData([Entity(), "Bar"], Type(), Type("Bar"))
   * 
   * @param partition The partition to remove the element from.
   * @type x -> ?x
   */
  index-remove-one =
    prim("LANG_index_remove_one", <id>)
    
  /**
   * Removes all elements from the index that are contained in given partition.
   *
   * Example:
   *   <index-clear-partition> "fullpath/file.ext"
   *   <index-clear-partition> ("fullpath/file.ext", "subfile")
   *
   * @type x -> ?x
   */
  index-clear-partition = 
    prim("LANG_index_clear_file", <id>)
    
  /**
   * Removes all elements from the index.
   *
   * @type x -> x
   */
  index-clear = 
    prim("LANG_index_clear_all")
    
  /**
   * Removes all elements from the index and re-analyzes all partitions in the project.
   *
   * @type x -> x
   */
  index-reload = 
    prim("LANG_index_reload")
   
  /**
   * Serializes index to a cache on disk.
   *
   * @type x -> x
   */
  index-commit = 
    prim("LANG_index_commit")

  /**
   * Starts a transaction on the index for the current partition. Additions to the index are not visible to other files 
   * until index-end-transaction is called. Operations on the index are only thread safe during a transaction.
   *
   * @type x -> x
   */
  index-start-transaction = 
    prim("LANG_index_start_transaction")
  
  /**
   * Ends a transaction on the index for the current partition. Additions made to the index during the transaction are
   * added to the global index visible for other files. Operations on the index are not thread safe any more after 
   * this call.
   *
   * @type x -> x
   */
  index-end-transaction = 
    prim("LANG_index_end_transaction")
  
  /**
   * Starts a transaction, applies given strategy and ends the transaction. All index operations used from the given
   * strategy are thread safe.
   * 
   * @param s The strategy to apply. Transaction will still properly end if strategy fails.
   * @type x -> x'
   *
   * @see index-start-transaction
   * @see index-end-transaction
   */
  index-transaction(s) = 
      prim("LANG_index_start_transaction")
    ; try(s)
    ; prim("LANG_index_end_transaction")
