module nbl/incremental

imports
	
	index/query
	nbl/collect
	nbl/query
	nbl/uri
	nbl/entries

signature

  constructors
    
    Read    : URI                      -> Entry
    ReadAll : URI                      -> Entry
    ReadAll : URI * Namespace * Prefix -> Entry
      
rules // Dependencies
  
  /**
   * Gets the set of partitions with read dependencies to the given entries.
   *
   * Example:
   *   <nabl-get-dependent-partitions> [Def([Entity(), "Bar"]), ...] => [("fullpath/file.ext", "partition"), ...]
   *
   * @type List(entry) -> List(partition)
   */
  nabl-get-dependent-partitions = 
    nabl-get-dependent-partitions(nabl-get-all-reads)
    
  nabl-remove-own-partition(|partition) =
    remove-all(?(partition, _))
          
rules /** @internal Storing reads */
  
  nabl-collect-reads(s) =
    {| nabl-ReadSet:
    	rules(nabl-ReadSet := <new-iset>);
    	try(s);
    	nabl-ReadSet;
    	iset-elements
  	|}
    	
rules /** @internal Entry difference */
  
  nabl-diff-entry =
    ?Def(_)
    
  nabl-diff-entry =
    ?Prop(_, _, _)
      
  nabl-diff-eq:
    (entry1, entry2) -> <id>
    where
      <nabl-uri-eq> (<nabl-uri> entry1, <nabl-uri> entry2)

  nabl-diff:
    (defs1, defs2) -> (added, removed)
    with
      added   := <diff(nabl-diff-eq)> (defs2, defs1);
      removed := <diff(nabl-diff-eq)> (defs1, defs2)

rules /** @internal */
  
  nabl-get-dependent-partitions(construct-from-uri):
    entries -> partitions
    where
      references := <mapconcat(construct-from-uri)> entries;
      partitions := <make-set> <mapconcat(index-get-partitions-of)> references
      
rules /** @internal URI & value projections */
  
  /** @internal */  
  nabl-uri-impl:
    Read(uri) -> uri
    
  /** @internal */  
  nabl-uri-impl:
    ReadAll(uri) -> uri
    
  /** @internal */  
  nabl-uri-impl:
    ReadAll(uri, _, _) -> uri
    
  /** @internal */
  nabl-value-impl:
    Read(value) -> value

  /** @internal */
  nabl-value-impl:
    ReadAll(value) -> value
    
  /** @internal */
  nabl-value-impl:
    ReadAll(value, _, _) -> value
