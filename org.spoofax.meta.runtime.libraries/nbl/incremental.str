module nbl/incremental

imports
	
	index/core
	index/query
	nbl/collect
	nbl/query
	nbl/entries
	nbl/uri

signature

  constructors
    
    Read    : URI * Int -> Entry
    ReadInv : Int * URI -> Entry
      
rules // Construction
	
	nabl-new-reads(|nr):
		uri -> [Read(uri, nr), ReadInv(nr, uri)]

rules // Index
	
	nabl-entry-olds:
		partition -> <collect-partition; index-get-all-in-partition; filter(nabl-diff-entry)> partition
			
	nabl-entry-clear:
		partition -> <collect-partition; index-clear-partition> partition
      
rules // Entry difference
  
  nabl-diff-entry =
    ?Def(_)
    
  nabl-diff-entry =
    ?Prop(_, _, _)
      
  nabl-diff-eq:
    (entry1, entry2) -> <id>
    where
      <nabl-uri-eq> (<nabl-uri> entry1, <nabl-uri> entry2)

  nabl-entry-diff:
    (old, new) -> (added, removed)
    with
      added   := <diff(nabl-diff-eq)> (new, old);
      removed := <diff(nabl-diff-eq)> (old, new)
      
  nabl-entry-incremental:
    (old, new) -> [added*, removed*]
    with
      (added*, removed*) := <nabl-entry-diff> (old, new)

	nabl-get-reads:
		<with(uri := <nabl-uri> | "Could not extract URI from given term.")> -> [read*, fail-read*]
		with
			read*      := <nabl-get-all-values> Read(uri, ());
			fail-read* := <nabl-get-all-values> Read(<nabl-replace-uri-qualifier(|())> uri, ())
		
	nabl-remove-read:
		nr -> <id>
		with
			uri* := <nabl-get-all-values> ReadInv(nr, ());
			<index-remove-all> ReadInv(nr, ());
			// TODO: these may remove reads from other tasks as well?
			<map(!Read(<id>, ()); index-remove-all)> uri*;
			<filter(!Read(<nabl-replace-uri-qualifier(|())>, ()); index-remove-all)> uri*
      
rules /** @internal URI & value projections */
  
  /** @internal */  
  nabl-uri-impl:
    Read(uri, _) -> uri

  /** @internal */  
  nabl-value-impl:
    Read(_, value) -> value
    
  /** @internal */  
  nabl-uri-impl:
    ReadInv(uri, _) -> uri

  /** @internal */  
  nabl-value-impl:
    ReadInv(_, value) -> value
    