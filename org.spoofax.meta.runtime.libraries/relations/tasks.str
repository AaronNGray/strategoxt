module relations/tasks

imports
	
	relations/entries
  relations/query
  relations/incremental
  relations/interface
  task/create
  task/tasks
  nabl/uri
  nabl/incremental
  nabl/utils
	
signature
  
  constructors

    RelationLookup   : Relation * Term -> Instruction
    RelationMatch    : Relation * Term * Term -> Instruction
    RelationDistance : Relation * Term * Term -> Instruction
    
rules // Lookup

	relation-create-lookup(|ctx, rel):
		term -> <task-create-insert(|ctx); task-create-combine(|ctx)> lookup
		with
			lookup := <new-task(|ctx)> RelationLookup(rel, term)

  perform-task(|task-id):
    RelationLookup(rel, term) -> result*
    where
		  <relation-try-term-to-uri; relation-add-read(|task-id)> term
		; result* := <relation-lookup(|rel)> term
		  // TODO: remove redundant relation-try-term-to-uri call, already called in relation-lookup.
  
rules // Match
	
  relation-create-match(|ctx):
  	(rel, actual, expected) -> <relation-create-match(|ctx, rel, expected)> actual

  relation-create-match(|ctx, rel, expected):
  	actual -> result
  	with
  	  match-task := <new-task(|ctx)> RelationMatch(rel, actual, expected)
  	; if custom-task := <relation-match-custom(|ctx)> (rel, actual, expected) then
  	  	result := <task-create-choice(|ctx)> [custom-task, match-task]
  	  else
  	  	result := match-task
  	  end
  	
	perform-task(|task-id):
		RelationMatch(rel, actual, expected) -> expected
		where
      actual'   := <relation-try-term-to-uri> actual
    ; <relation-add-read(|task-id)> actual'
    ; expected' := <relation-try-term-to-uri> expected
    ; <relation-add-read(|task-id)> expected'
      // TODO: storing reads when actual and/or expected are lists will not work.
    ; <relation-match(|rel, expected)> actual
      // TODO: remove redundant relation-try-term-to-uri calls, already called in relation-match.
		  
rules // Distance
	
  relation-create-distance(|ctx, rel, values):
  	actual -> <new-task(|ctx)> RelationDistance(rel, actual, values)
	
	// Task needs to be a combinator because `expected*` needs to be queried like a list to find the distance.
	task-is-combinator = ?RelationDistance(_, _, _)
	
  perform-task(|task-id): 
  	RelationDistance(rel, actual, value*) -> [<get-index> (<try-remove-list; relation-try-term-to-uri> actual, <map(relation-try-term-to-uri)> value*)]
		// Remove list on `actual` because this task is a combinator and `actual` may only contain one element.
