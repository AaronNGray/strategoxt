module nabl/entries

imports
  
  nabl/collect
  nabl/utils
  nabl/uri
  index/core
  editor/origins
  
signature

  constructors
    
    Def          : URI                    -> Entry
    Alias        : URI * URI              -> Entry
    InverseAlias : URI * URI              -> Entry
    Use          : URI                    -> Entry
    Prop         : URI * Property * Value -> Entry

rules // Index entries to diff
  
  analyze-diff-entry = ?Def(_)
 
rules
  
  new-def(|partition, uri):
    x -> definition
    with
      definition := <origin-track-forced(!Def(uri))> x;
      <index-add(|partition)> definition;
			<new-alias(|partition, <nabl-nonunique-uri> uri, uri)> x
      
  new-alias(|partition, uri, alias-uri):
    x -> alias
    with
      alias := <origin-track-forced(!Alias(uri, alias-uri))> x;
      ialias := <origin-track-forced(!InverseAlias(alias-uri, uri))> x;
      if <not(eq)> (uri, alias-uri) then
      	<index-add(|partition)> alias;
      	<index-add(|partition)> ialias
      end

  new-use(|partition, uri):
    x -> use
    with
      use := <origin-track-forced(!Use(uri))> x;
      <index-add(|partition)> use

rules // index uri & value projections
  
  /** @internal */
  nabl-uri:
    Def(uri) -> uri
    
  /** @internal */
  nabl-uri:
    Alias(uri, _) -> uri
    
  /** @internal */
  nabl-uri:
    InverseAlias(uri, _) -> uri
    
  /** @internal */  
  nabl-uri:
    Use(uri) -> <nabl-is-uri> uri
    
  /** @internal */  
  nabl-uri:
    Prop(uri, _, _) -> uri
        
  /** @internal */
  nabl-value:
    Def(value) -> value
    
  /** @internal */
  nabl-value:
    Alias(_, value) -> value
    
  /** @internal */
  nabl-value:
    InverseAlias(_, value) -> value

  /** @internal */
  nabl-value:
    Use(value) -> value
    
  /** @internal */
  nabl-value:
    Prop(_, _, value) -> value
