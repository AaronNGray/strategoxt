module nabl/utils

imports
	
	libstratego-lib
	task/core
	editor/annotations

rules 
	
	match(m|val) = where (!val; m)
	
	vdebug(s) = where(verbose < debug(s) + id)
	verbose   = fail

	is-completion-name = ?"completion123"
  fix-completion-name = is-completion-name; !""
  
  measure-time(s, log) =
    where(before := <times>);
    s;
    where(after := <times>; !(after, before); diff-times; times-to-seconds; Fst; log)
  
  measure-time(s, log | name) = 
    measure-time(s, record-time(|name); log)
  
  record-time(|name) = id
  	
 	try-make-list = is-list <+ ?Dependency(_) <+ ![<id>]
		
	try-remove-list = is-list < Hd + id
	
	// @deprecated use editor/annotations get-annotation(s)
	has-annotation(s) = get-annotation(s)
	
rules // multimap simulation
	
	hash-multimap-put(|key, value):
		hashtable -> hashtable
		where
			values := <hash-multimap-getorcreate(|key)> hashtable;
			<hashtable-put(|key, [value|values])> hashtable 
			
	hash-multimap-putlist(|key, put-value*):
		hashtable -> hashtable
		where
			value* := <hash-multimap-getorcreate(|key)> hashtable;
			<hashtable-put(|key, [value*, put-value*])> hashtable 
			
	hash-multimap-getorcreate(|key) =
		hashtable-get(|key) <+ hashtable-put(|key, []); ![]
	
	hash-multimap-copy(|from):
		to -> to
		where
			// wtf is this I don't even.. hashtable-fold needs term arguments instead of current term arguments.
			<hashtable-fold(hash-multimap-copy-fold|to)> from
			
	hash-multimap-copy-fold(|key, value*):
		to -> <hash-multimap-putlist(|key, value*)> to

rules // Debugging
	
	debug0 = debug(!"0 ")
	debug1 = debug(!"1 ")
	debug2 = debug(!"2 ")
	debug3 = debug(!"3 ")
	debug4 = debug(!"4 ")
	debug5 = debug(!"5 ")
	debug6 = debug(!"6 ")
	debug7 = debug(!"7 ")
	debug8 = debug(!"8 ")
	debug9 = debug(!"9 ")

	debuga = debug(!"a ")
	debugb = debug(!"b ")
	debugc = debug(!"c ")
	
	debugx = debug(!"x ")
	debugy = debug(!"y ")
	debugz = debug(!"z ")
