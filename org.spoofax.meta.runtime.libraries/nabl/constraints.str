module nabl/constraints

imports
  nabl/uri
  nabl/collect
  nabl/entries
  nabl/tasks
  task/core
  task/tasks
  properties/tasks
  
rules
  
  nabl-lookup-local(|ctx) =
    nabl-uri
  ; nabl-lookup-local(|ctx, <nabl-uri-namespace>, <nabl-uri-name>)
    
  nabl-lookup-local(|ctx, ns) =
    nabl-uri
  ; nabl-lookup-local(|ctx, ns, <nabl-uri-name>)
  
  nabl-lookup-local(|ctx, ns, name) =
    nabl-uri-parent
  ; nabl-create-resolvedefs(|ctx, ns, name, [])

rules
  
  nabl-lookup-lexical(|ctx) =
    nabl-uri
  ; nabl-lookup-lexical(|ctx, <nabl-uri-namespace>, <nabl-uri-name>)
    
  nabl-lookup-lexical(|ctx, ns) =
    nabl-uri
  ; nabl-lookup-lexical(|ctx, ns, <nabl-uri-name>)
  
  nabl-lookup-lexical(|ctx, ns, name) =
    nabl-uri-parents
  ; map(nabl-create-resolvedefs(|ctx, ns, name, []))
  ; task-create-choice(|ctx)
  
  nabl-lookup-lexical-parent(|ctx) =
    nabl-uri
  ; nabl-lookup-lexical-parent(|ctx, <nabl-uri-namespace>, <nabl-uri-name>)
    
  nabl-lookup-lexical-parent(|ctx, ns) =
    nabl-uri
  ; nabl-lookup-lexical-parent(|ctx, ns, <nabl-uri-name>)
  
  nabl-lookup-lexical-parent(|ctx, ns, name) =
    nabl-uri-parent
  ; nabl-lookup-lexical(|ctx, ns, name)
    
rules
  
  nabl-lookup-local-import(|ctx) =
    nabl-uri
  ; nabl-lookup-local-import(|ctx, <nabl-uri-namespace>, <nabl-uri-name>)
  
  nabl-lookup-local-import(|ctx, ns) =
    nabl-uri
  ; nabl-lookup-local-import(|ctx, ns, <nabl-uri-name>)
  
  nabl-lookup-local-import(|ctx, ns, name) =
    nabl-uri-parent
  ; prop-create-lookup(|ctx, Import(ns))
  ; nabl-create-resolvedefs(|ctx, ns, name, [])
  
rules
  
  nabl-lookup-lexical-import(|ctx) =
    nabl-uri
  ; nabl-lookup-lexical-import(|ctx, <nabl-uri-namespace>, <nabl-uri-name>)
  
  nabl-lookup-lexical-import(|ctx, ns) =
    nabl-uri
  ; nabl-lookup-lexical-import(|ctx, ns, <nabl-uri-name>)
  
  nabl-lookup-lexical-import(|ctx, ns, name) =
    nabl-uri-parents
  ; map(
    	prop-create-lookup(|ctx, Import(ns))
    ; nabl-create-resolvedefs(|ctx, ns, name, [])
    )
  ; task-create-choice(|ctx)
    