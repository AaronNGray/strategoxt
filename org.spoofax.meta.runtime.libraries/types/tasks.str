module types/tasks

imports 
	
	nbl/resolve
	nbl/collect
	nbl/entries
	nbl/query
	nbl/utils
  types/interface
  task/core
  
signature
  
  constructors

    PropLookup : Property * Term -> Instruction    
    PropCalc   : Term * Term     -> Instruction
    PropCheck  : Term * Term     -> Instruction

rules
  
  perform-task(|n): 
  	PropLookup(kind, t) -> result
  	where
  		resolved := <nabl-collect-one-resolved-def> t;
  		switch !resolved
  			case ?Def(_) : nabl-get-property(|kind); insert-results-or-create-dependency; try-make-list
  			otherwise    : id
  		end => result
  	
  perform-task(|n): 
  	PropCalc(result, check*) -> <try-make-list> result
  	where 
  		<try-remove-list> check*
	
  perform-task(|n): 
  	PropCheck(term, expected) ->  term*
  	where
  		term*     := <try-make-list> term;
  		expected* := <try-make-list> expected;
  		<cart(eq)> (term*, expected*)
  		
rules
  
  desugar-task(|partition): 
  	PropCalc(Type(), t) -> <type-of-task(|partition)> t