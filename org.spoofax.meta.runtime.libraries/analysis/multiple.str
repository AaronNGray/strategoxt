module analysis/multiple

imports

  analysis/core
  task/core
  nbl/utils

rules // Multi file analysis
  
  analyze-multiple(parse-file, complete-work-unit|language, project-path):
    path* -> result*
    with
    	measure-time(
      	file* := <map(analyze-parse-file(parse-file); where(complete-work-unit))> path*
    	, id | "analyze-multiple-parse");
      result* := <analyze-multiple-files(complete-work-unit|language, project-path)> file*

  analyze-parse-file(parse-file):
    path -> File(path, ast)
    with
      if not(ast := <file-exists; parse-file> path) then
        ast := ()
      end

  analyze-multiple-files(complete-work-unit|language, project-path):
    file* -> (error*, result*, evaluated-count)
    with
    	measure-time(
	      result* := <map(analyze-collect(|language, project-path); where(complete-work-unit))> file*
	      , id | "analyze-multiple-collect"
	    );
      measure-time(
      	(error*, evaluated-count) := <analyze-perform-all> result*
      	, id | "analyze-multiple-perform"
      )
      
rules // Utility

  nabl-analyze-multiple-work-units = 
    length; !(<id>, 3); mul
