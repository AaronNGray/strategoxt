module analysis/core

imports
	
	nbl/-
	task/-
	analysis/-
	index/-

signature

  constructors
  
    File : Path * AST -> File
    Result : Partition * AST * AST * List(Entry) * List(Entry) * List(Task) * List(Task) * 
             List(Term) * List(Term) * List(Term) -> Result
    // Result(partition, initial-ast, analyzed-ast, old-entry*, new-entry*, removed-task*, added-task*, 
    //        error*, warning*, note*)
    
rules
	
	analyze-collect(|language, project-path):
    File(partition, ast) -> Result(partition, ast, analyzed-ast, removed-entry*, added-entry*, removed-task*, added-task*, [], [], [])
    with
    	//<vdebug(!"Collect for: ")> partition;
    	//measure-time(
    		index-setup(|language, [project-path], partition);
		    index-start-collection(|partition);
    		task-setup(|project-path);
    		task-start-collection(|partition);
      	analyzed-ast                   := <nabl-collect(|partition, Language(language))> ast;
      	(removed-task* , added-task*)  := <task-stop-collection(|partition)>;
      	(removed-entry*, added-entry*) := <index-stop-collection>
      //	id | "analyze-collect-collect"
      //)
	
	analyze-incremental:
		Result(_, _, _, removed-entry*, added-entry*, _, _, _, _, _) -> changed-read*
		with
		  changed-read*  := <map(nabl-uri; try(nabl-replace-uri-qualifier(|())))> [removed-entry*, added-entry*]
    	
	analyze-perform-all:
		changed-read* -> error*
		with
      task-evaluate(|changed-read*) => error*
      