module format-check
imports aterm2irtg liblib strategoxt-xtc-tools tool-doc

/**
 * Main program
 */
strategies

  main-format-check = 
    xtc-io-wrap(
      fc-options
    , fc-usage
    , fc-about 
    , !["core-format-check"]
    , if is-xhtml-mode then
        format-check-to-xhtml
      else
        if is-vis-mode then
          format-check-pp-aterm
        else
          format-check
        end
      end
    ; xtc-output(id)
    ; get-exit-code
    ; xtc-exit
    )

  format-check =
    xtc-ensure-file
    ; xtc-try-transform(!"core-format-check", 
          <flatten-list> ["--rtg-nf", <input-to-rtg-nf>, <pass-verbose> (), <pass-start-nonterm>]
      )

  format-check-to-xhtml =
    xtc-ensure-file
    ; xtc-try-transform(!"core-format-check-to-xhtml",
          <flatten-list> ["--rtg-nf", <input-to-rtg-nf>, <pass-verbose> (), <pass-start-nonterm>]
      )
    ; xtc-transform(!"pp-xml-doc", pass-verbose)

  format-check-pp-aterm =
    xtc-ensure-file
    ; xtc-transform(!"core-format-check-pp-aterm",
          <flatten-list> ["--rtg-nf", <input-to-rtg-nf>, <pass-verbose> (), <pass-start-nonterm>]
      )
    ; xtc-abox2text

strategies

  xtc-try-transform(tool, args) :
    FILE(f) -> FILE(g)
    where <xtc-new-file> f => g
        ; ( <conc; xtc-command(tool)> (<args>, ["-i", f, "-o", g])
          <+ where(<set-config> ("--exit-code", 1))
          )

  get-exit-code =
    <get-config> "--exit-code" <+ !0

/**
 * Options
 */
strategies

  fc-options =
         rtg-option(|"Format check against rtg in file")
    + rtg-nf-option(|"Format check against normalized rtg in file")
    + start-nonterm-option(|"Term must be of type s (default: start non-terms of rtg)")
    + xhtml-option
    + vis-option

  xhtml-option =
    Option("--xhtml"
    , set-xhtml-mode
    , !HelpString("--xhtml", "Present the result in XHTML")
    )

  is-xhtml-mode =
    <get-config> "--xhtml"

  set-xhtml-mode =
    <set-config> ("--xhtml", ())

  vis-option =
    Option("--vis"
    , set-vis-mode
    , !HelpString("--vis", "Visualize in colored pp-aterm")
    )

  is-vis-mode =
    <get-config> "--vis"

  set-vis-mode =
    <set-config> ("--vis", ())

  fc-usage =
    <tool-doc> fc-tool-doc()

  fc-about =
    <tool-doc> fc-tool-about()

overlays

  fc-tool-doc =
    [ Usage("format-check --rtg file [OPTIONS]")
    , Summary(
       "Checks if a term is in the language defined by an
        RTG. If it is, then the term is said to be in the right
        format."
      )
    , OptionUsage()
    , AutoReportBugs()
    ]

  fc-tool-about =
    [ AutoProgram()
    , Author(Person("Martin Bravenboer", "martin@cs.uu.nl"))
    , GNU_LGPL("2002-2004", "Martin Bravenboer <martin@cs.uu.nl>")
    , Config([
        DefaultXTCRepository()
      , CurrentXTCRepository()
      ]) 
    ]
