/**
 * Removes all seq and empty constructs by replacing them with groups.
 *
 * @author  Martin Bravenboer
 */
module regexp-normalize
imports options regexp regexp-util

strategies

  /**
   * @type  RegExp(a) -> RegExp(a)
   */
  regexp-normalize =
    regexp-topdown(
      try(
        plus(maybe-group)
      + star(maybe-group)
      + choice(maybe-group, maybe-group)
      + opt(maybe-group)
      + \ egroup(r) -> group(<regexp-to-list> r) \
      )
    )
  ; !seq(<regexp-to-list>)

strategies

  maybe-group =
    ?seq(_, _)
    < regexp-seq-to-list
    ; (  \ []  -> group([]) \ // @todo or error?
      <+ ?[<id>]
      <+ !group(<id>)
      )
    + id


strategies

  /**
   * @type  RegExp(a) -> List(RegExp(a))
   */
  regexp-to-list =
    rec x(
       \ seq(rs)     -> <map(x); concat> rs \
    <+ \ seq(r1, r2) -> [r1 | <x> r2] \
    <+ \ empty()     -> []            \
    <+ \ r           -> [r]           \
    )
    ; filter(not(?empty()))