module regexp-normalize-test
imports sunit regexp-normalize

strategies 

  main-regexp-normalize-test = 
    test-suite(!"regular expression normalization",
      id-tests
    ; group-tests
    )

  id-tests =
      apply-id-test(|sym("a"))
    ; apply-id-test(|plus(sym("a")))
    ; apply-id-test(|star(sym("a")))
    ; apply-id-test(|plus(star(star(sym("a")))))

  group-tests =
      apply-group-test(|
         seq(sym("a"), sym("b"))
      , seq([sym("a"), sym("b")])
      )
    ; apply-group-test(|
         seq(sym("a"), seq(sym("b"), sym("c")))
      , seq([sym("a"),     sym("b"), sym("c")])
      )
    ; apply-group-test(|
             star(   seq(sym("a"), sym("b")))
      , seq([star(group([sym("a"), sym("b")]))])
      )
    ; apply-group-test(|
        star(        seq(sym("a"), plus(   seq(sym("b"), sym("c")))))
      , seq([star(group([sym("a"), plus(group([sym("b"), sym("c")]))]))])
      )
    ; apply-group-test(|
        star(        seq(sym("a"), star(   seq(sym("b"), sym("c")))))
      , seq([star(group([sym("a"), star(group([sym("b"), sym("c")]))]))])
      )

  apply-id-test(|term) =
      apply-test(!"identity test 1", regexp-normalize, !term, !seq([term]))
    ; apply-test(!"identity test 2", regexp-normalize; regexp-normalize, !term, !seq([term]))


  apply-group-test(|t1, t2) =
      apply-test(!"group test", regexp-normalize, !t1, !t2)
    ; apply-test(!"group test", regexp-normalize; regexp-normalize, !t1, !t2)