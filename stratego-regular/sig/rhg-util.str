/**
 * @author  Martin Bravenboer <martin@cs.uu.nl>
 */
module rhg-util
imports rhg list

strategies

  /**
   * Returns the right hand sides of productions of the specified non terminal.
   *
   * @type RHG -> List(ProdRuleRHS)
   */
  productions-of(|nt : NonTerm) =
    ?RHG(_, ProdRules(<id>))
    ; filter(?ProdRule(nt, <id>))
    ; concat

strategies

  /**
   * @type RHG * NonTerm * Term -> ProdRuleRHS
   */
  get-ProdRuleRHS =
    ?(RHG(_, ProdRules(<id>)), nt, t)
    ; getfirst(?ProdRule(nt, <id>))
    ; getfirst(?RHS(t, _, _))

  to-NonTerm-ProdRuleRHS :
    ProdRule(nt, rhs) -> <map(!(nt, <id>))> rhs

  /**
   * @type  RHG * NonTerm * Term -> ProdRuleRHS
   */
  get-ProdRuleRHS-rhss =
    ?(RHG(_, ProdRules(<id>)), nt, t)
    ; getfirst(?ProdRule(nt, <id>))
    ; filter(?RHS(t, _, _))

  /**
   * @type  RHG * NonTerm -> ProdRuleRHS
   */
  get-ProdRuleRHS-refs =
    ?(RHG(_, ProdRules(<id>)), nt)
    ; getfirst(?ProdRule(nt, <id>))
    ; filter(?Ref(_))

strategies

  /**
   * @type  RHG -> RHG
   */
  group-productions =
    RHG(id, ProdRules(rhg-group-by-nonterm))

  /**
   * @type  List(ProdRule) -> List(ProdRule)
   */
  rhg-group-by-nonterm =
    group-by(
      \ ProdRule(nt, _) -> nt \ // key producer
    , \ ProdRule(_, rhss) -> rhss \ // reducer to vales
    , \ (nt, rhsss) -> ProdRule(nt, <concat> rhsss) \ // builder
    )

strategies

  /**
   * Rewrites an rhg to one rhs in a prodrule.
   *
   * @type RHG -> RHG 
   */
  ungroup-productions =
    RHG(id, ProdRules(ungroup-productions))

  /**
   * Rewrites an list of prodrules to one rhs in a prodrule.
   *
   * @type List(ProdRule) -> List(ProdRule)
   */
  ungroup-productions =
      map(\ ProdRule(nt, rhss) -> <map(!ProdRule(nt, [<id>]))> rhss \)
    ; concat

strategies 

  group-by(k, r, build) = 
      ?items
    ; map(k)
    ; make-set
    ; map(build-group-by-pairs(k, r, build, !items))

  build-group-by-pairs(k, r, build, items) = 
      ?key
    ; where(<items; filter(where(k; ?key)); map(r)> () => values)
    ; <build> (key, values)