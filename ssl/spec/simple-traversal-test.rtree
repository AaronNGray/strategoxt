Specification([Imports(["sunit","simple-traversal"]),Signature([Constructors([OpDecl("F",FunType([ConstType(Var("Term")),ConstType(Var("Term"))],ConstType(Var("Term")))),OpDecl("G",FunType([ConstType(Var("Term")),ConstType(Var("Term"))],ConstType(Var("Term")))),OpDecl("A",ConstType(Var("Term"))),OpDecl("B",ConstType(Var("Term")))])]),Strategies([SDef("main",[],Call(SVar("test-suite"),[Build(Str("simple-traversal-test")),Seq(Call(SVar("test1"),[]),Seq(Call(SVar("test2"),[]),Call(SVar("test3"),[])))])),SDef("test1",[],Seq(Call(SVar("apply-test"),[Build(Str("test1a")),All(Fail),Build(Var("A")),Build(Var("A"))]),Call(SVar("apply-and-fail"),[Build(Str("test1b")),All(Fail),Build(Op("F",[Op("G",[Var("B"),Op("F",[Var("A"),Var("B")])]),Op("F",[Var("B"),Var("A")])]))]))),SDef("f",[DefaultVarDec("x")],Call(SVar("F"),[Call(SVar("x"),[]),Id])),SDef("test2",[],Seq(Call(SVar("apply-test"),[Build(Str("test2")),Call(SVar("leaves"),[Build(Var("A")),All(Fail)]),Build(Op("F",[Op("G",[Var("B"),Op("F",[Var("A"),Var("B")])]),Op("F",[Var("B"),Var("A")])])),Build(Op("F",[Op("G",[Var("A"),Op("F",[Var("A"),Var("A")])]),Op("F",[Var("A"),Var("A")])]))]),Call(SVar("apply-test"),[Build(Str("test2")),Call(SVar("leaves"),[Build(Var("A")),All(Fail),Call(SVar("f"),[])]),Build(Op("F",[Op("G",[Var("B"),Op("F",[Var("B"),Var("B")])]),Op("F",[Var("B"),Var("B")])])),Build(Op("F",[Op("G",[Var("A"),Op("F",[Var("A"),Var("B")])]),Op("F",[Var("B"),Var("B")])]))]))),SDef("test3",[],Seq(Call(SVar("apply-test"),[Build(Str("test3a")),Seq(Where(AM(Call(SVar("new-counter"),[]),Var("c1"))),Seq(Call(SVar("debug"),[]),Call(SVar("bottomup"),[Seq(Call(SVar("debug"),[]),Seq(LRule(Rule(Var("t"),Anno(Var("t"),Op("Cons",[App(Call(SVar("next-counter"),[]),Var("c1")),Op("Nil",[])])),Id)),Call(SVar("debug"),[])))]))),Build(Op("F",[Op("G",[Var("B"),Op("F",[Var("A"),Var("B")])]),Op("F",[Var("B"),Var("A")])])),Build(Anno(Op("F",[Anno(Op("G",[Anno(Var("B"),Op("Cons",[Int(1),Op("Nil",[])])),Anno(Op("F",[Anno(Var("A"),Op("Cons",[Int(2),Op("Nil",[])])),Anno(Var("B"),Op("Cons",[Int(3),Op("Nil",[])]))]),Op("Cons",[Int(4),Op("Nil",[])]))]),Op("Cons",[Int(5),Op("Nil",[])])),Anno(Op("F",[Anno(Var("B"),Op("Cons",[Int(6),Op("Nil",[])])),Anno(Var("A"),Op("Cons",[Int(7),Op("Nil",[])]))]),Op("Cons",[Int(8),Op("Nil",[])]))]),Op("Cons",[Int(9),Op("Nil",[])])))]),Call(SVar("apply-test"),[Build(Str("test3b")),Seq(Where(AM(Call(SVar("new-counter"),[]),Var("c2"))),Call(SVar("topdown"),[LRule(Rule(Var("t"),Anno(Var("t"),Op("Cons",[App(Call(SVar("next-counter"),[]),Var("c2")),Op("Nil",[])])),Id))])),Build(Op("F",[Op("G",[Var("B"),Op("F",[Var("A"),Var("B")])]),Op("F",[Var("B"),Var("A")])])),Build(Anno(Op("F",[Anno(Op("G",[Anno(Var("B"),Op("Cons",[Int(3),Op("Nil",[])])),Anno(Op("F",[Anno(Var("A"),Op("Cons",[Int(5),Op("Nil",[])])),Anno(Var("B"),Op("Cons",[Int(6),Op("Nil",[])]))]),Op("Cons",[Int(4),Op("Nil",[])]))]),Op("Cons",[Int(2),Op("Nil",[])])),Anno(Op("F",[Anno(Var("B"),Op("Cons",[Int(8),Op("Nil",[])])),Anno(Var("A"),Op("Cons",[Int(9),Op("Nil",[])]))]),Op("Cons",[Int(7),Op("Nil",[])]))]),Op("Cons",[Int(1),Op("Nil",[])])))])))])])
