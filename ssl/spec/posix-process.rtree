Specification([Imports(["posix-signal","verbose"]),Strategies([SDef("get-pid",[],Prim("SSL_get_pid",[]))]),Strategies([SDef("fork",[],Prim("SSL_fork",[])),SDef("fork",[DefaultVarDec("child")],Call(SVar("fork"),[Call(SVar("child"),[]),Id])),SDef("fork",[DefaultVarDec("child"),DefaultVarDec("parent")],Seq(Match(Var("t")),Seq(Call(SVar("fork"),[]),Seq(Match(Var("pid")),LChoice(Seq(Match(Int(0)),BA(Call(SVar("child"),[]),Var("t"))),BA(Call(SVar("parent"),[]),Op("",[Var("pid"),Var("t")]))))))),SDef("fork-and-wait",[DefaultVarDec("child")],Call(SVar("fork"),[Call(SVar("child"),[]),Seq(Match(Op("",[RootApp(Call(SVar("waitpid"),[])),Var("t")])),Seq(Call(SVar("warn-ifsignaled"),[]),Seq(Match(Op("WaitStatus",[Int(0),Wld,Wld])),Build(Var("t")))))])),SDef("execvp",[],Seq(Match(Op("",[Var("file"),Var("argv")])),Prim("SSL_execvp",[Var("file"),Var("argv")])))]),Strategies([SDef("waitpid",[],Seq(Match(Var("pid")),Prim("SSL_waitpid",[Var("pid")]))),SDef("exited",[],Seq(Match(Op("WaitStatus",[Var("s"),Wld,Wld])),Seq(Where(BA(Not(Call(SVar("eq"),[])),Op("",[Var("s"),Int(-1)]))),Call(SVar("if-verbose3"),[Call(SVar("debug"),[Build(Str("the process exited: "))])])))),SDef("signaled",[],Seq(Match(Op("WaitStatus",[Wld,Var("s"),Wld])),Seq(Where(BA(Not(Call(SVar("eq"),[])),Op("",[Var("s"),Int(-1)]))),Call(SVar("if-verbose2"),[Call(SVar("debug"),[Build(Str("the process was signaled"))])])))),SDef("stopped",[],Seq(Match(Op("WaitStatus",[Wld,Wld,Var("s")])),Seq(Where(BA(Not(Call(SVar("eq"),[])),Op("",[Var("s"),Int(-1)]))),Call(SVar("if-verbose3"),[Call(SVar("debug"),[Build(Str("the process stopped"))])])))),SDef("warn-ifsignaled",[],Where(Call(SVar("try"),[Seq(Match(Op("WaitStatus",[Wld,RootApp(Id),Wld])),Seq(Not(Match(Int(-1))),Seq(Call(SVar("signal-from-number"),[]),Seq(Call(SVar("signal-to-descr"),[]),BA(Call(SVar("printnl"),[]),Op("",[Var("stderr"),Op("Cons",[Str("** WARNING -- process signaled: "),Op("Cons",[RootApp(Id),Op("Nil",[])])])]))))))])))]),Signature([Constructors([OpDecl("WaitStatus",FunType([ConstType(Var("Int")),ConstType(Var("Int")),ConstType(Var("Int"))],ConstType(Var("WaitStatus"))))])]),Strategies([SDef("exit",[],Seq(Match(Var("n")),Prim("SSL_exit",[Var("n")])))])])
