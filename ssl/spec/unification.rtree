Specification([Imports(["list","term","term-properties","substitution"]),Strategies([SDef("equal",[],Call(SVar("for"),[Id,Call(SVar("Nil"),[]),LChoice(Call(SVar("UfIdem"),[]),Call(SVar("UfDecompose"),[]))]))]),Rules([RDef("UfIdem",[],Rule(Op("Cons",[Op("",[Var("x"),Var("x")]),Var("ps")]),Var("ps"),Id)),RDef("UfDecompose",[],Rule(Op("Cons",[Op("",[Explode(Var("f"),Var("xs")),Explode(Var("f"),Var("ys"))]),Var("ps")]),App(Call(SVar("conc"),[]),Op("",[App(Call(SVar("zip"),[Id]),Op("",[Var("xs"),Var("ys")])),Var("ps")])),Id))]),Strategies([SDef("diff",[],Call(SVar("for"),[LRule(Rule(Var("ps"),Op("",[Op("Nil",[]),Var("ps")]),Id)),Call(SVar(""),[Id,Call(SVar("Nil"),[])]),LChoice(Call(SVar(""),[Id,LChoice(Call(SVar("UfIdem"),[]),Call(SVar("UfDecompose"),[]))]),Call(SVar("UfShift"),[]))]))]),Rules([RDef("UfShift",[],Rule(Op("",[Var("ps1"),Op("Cons",[Var("p"),Var("ps2")])]),Op("",[Op("Cons",[Var("p"),Var("ps1")]),Var("ps2")]),Id))]),Strategies([SDef("pattern-match",[DefaultVarDec("isvar")],Call(SVar("for"),[LRule(Rule(Var("pairs"),Op("",[Var("pairs"),Op("Nil",[])]),Id)),LRule(Rule(Op("",[Op("Nil",[]),Var("sbs")]),Var("sbs"),Id)),LChoice(Call(SVar(""),[Call(SVar("UfIdem"),[]),Id]),Choice(Call(SVar("MatchVar"),[Call(SVar("isvar"),[])]),Call(SVar(""),[Call(SVar("UfDecompose"),[]),Id])))]))]),Rules([RDef("MatchVar",[DefaultVarDec("isvar")],Rule(Op("",[Op("Cons",[Op("",[Var("x"),Var("y")]),Var("ps")]),Var("sbs")]),Op("",[Var("ps"),Op("Cons",[Op("",[Var("x"),Var("y")]),Var("sbs")])]),Seq(BA(Call(SVar("isvar"),[]),Var("x")),BA(Not(Call(SVar("fetch"),[Scope(["z"],Seq(Match(Op("",[Var("x"),Var("z")])),BA(Not(Call(SVar("eq"),[])),Op("",[Var("y"),Var("z")]))))])),Var("sbs")))))]),Strategies([SDef("unify",[DefaultVarDec("isvar")],Call(SVar("for"),[LRule(Rule(Var("pairs"),Op("",[Var("pairs"),Op("Nil",[])]),Id)),LRule(Rule(Op("",[Op("Nil",[]),Var("sbs")]),Var("sbs"),Id)),LChoice(Call(SVar(""),[Call(SVar("UfIdem"),[]),Id]),Choice(Call(SVar("UfVar"),[Call(SVar("isvar"),[])]),LChoice(Call(SVar("UfSwap"),[Call(SVar("isvar"),[])]),Call(SVar(""),[Call(SVar("UfDecompose"),[]),Id]))))]))]),Rules([RDef("UfVar",[DefaultVarDec("isvar")],Rule(Op("",[Op("Cons",[Op("",[Var("x"),Var("y")]),Var("ps")]),Var("sbs")]),Op("",[Var("ps'"),Op("Cons",[Op("",[Var("x"),Var("y")]),Var("sbs''")])]),Seq(BA(Call(SVar("isvar"),[]),Var("x")),Seq(BA(Not(Call(SVar("is-subterm"),[])),Op("",[Var("x"),Var("y")])),AM(BA(Call(SVar("substitute"),[Call(SVar("isvar"),[])]),Op("",[Op("Cons",[Op("",[Var("x"),Var("y")]),Op("Nil",[])]),Op("",[Var("sbs"),Var("ps")])])),Op("",[Var("sbs''"),Var("ps'")])))))),RDef("UfSwap",[DefaultVarDec("isvar")],Rule(Op("",[Op("Cons",[Op("",[Var("x"),Var("y")]),Var("ps")]),Var("sbs")]),Op("",[Op("Cons",[Op("",[Var("y"),Var("x")]),Var("ps")]),Var("sbs")]),Seq(BA(Not(Call(SVar("isvar"),[])),Var("x")),BA(Call(SVar("isvar"),[]),Var("y")))))]),Rules([RDef("in",[],Rule(Op("",[Var("a"),Var("t")]),App(Call(SVar("oncetd"),[Match(Var("a"))]),Var("t")),Call(SVar("obsolete"),[Build(Str("'in: use is-subterm"))])))]),Strategies([SDef("equal",[DefaultVarDec("fltr")],Call(SVar("for"),[Id,Call(SVar("Nil"),[]),LChoice(Call(SVar("UfIdem"),[]),Seq(Call(SVar("try"),[Call(SVar("Cons"),[Call(SVar(""),[Call(SVar("fltr"),[]),Call(SVar("fltr"),[])]),Id])]),Call(SVar("UfDecompose"),[])))]))]),Strategies([SDef("equal",[DefaultVarDec("fltr1"),DefaultVarDec("fltr2")],Call(SVar("for"),[Id,Call(SVar("Nil"),[]),LChoice(Call(SVar("UfIdem"),[]),Seq(Call(SVar("Cons"),[Seq(Call(SVar(""),[Call(SVar("try"),[Call(SVar("fltr1"),[])]),Call(SVar("try"),[Call(SVar("fltr1"),[])])]),Call(SVar("try"),[Call(SVar("fltr2"),[])])),Id]),Call(SVar("UfDecompose"),[])))]))])])