Specification([Imports(["scoped-finite-map","sunit"]),Signature([Constructors([OpDecl("Var",FunType([ConstType(Var("String"))],ConstType(Var("Exp")))),OpDecl("Int",FunType([ConstType(Var("Int"))],ConstType(Var("Exp")))),OpDecl("Plus",FunType([ConstType(Var("Exp")),ConstType(Var("Exp"))],ConstType(Var("Exp")))),OpDecl("Let",FunType([ConstType(Op("List",[Var("Decl")])),ConstType(Var("Exp"))],ConstType(Var("Exp")))),OpDecl("Call",FunType([ConstType(Var("String")),ConstType(Op("List",[Var("Exp")]))],ConstType(Var("Exp")))),OpDecl("Fdec",FunType([ConstType(Var("String")),ConstType(Op("List",[Var("String")])),ConstType(Var("Exp"))],ConstType(Var("Decl")))),OpDecl("Vdec",FunType([ConstType(Var("String")),ConstType(Var("Exp"))],ConstType(Var("Decl"))))])]),Strategies([SDef("exp-rename",[],Id),SDef("inline",[],Seq(Call(SVar("init-name-space"),[Build(Str("var"))]),Seq(Rec("i",Call(SVar("scope"),[Build(Str("var")),LChoice(Seq(Call(SVar("Declare"),[]),All(Call(SVar("i"),[]))),LChoice(Seq(Call(SVar("Call"),[Id,Call(SVar("list"),[Call(SVar("i"),[])])]),Seq(Call(SVar("Inline"),[]),Call(SVar("i"),[]))),LChoice(Call(SVar("Substitute"),[]),All(Call(SVar("i"),[])))))])),Call(SVar("exit-name-space"),[Build(Str("var"))])))),SDef("Declare",[],Call(SVar("Let"),[Call(SVar("list"),[Choice(Call(SVar("DeclareFun"),[]),Call(SVar("DeclareVar"),[]))]),Id])),SDef("DeclareFun",[],Seq(Match(As(Var("fdec"),Op("Fdec",[Var("f"),Wld,Wld]))),Where(BA(Call(SVar("assert"),[Build(Str("var"))]),Op("",[Var("f"),Var("fdec")]))))),SDef("DeclareVar",[],Seq(Match(Op("Vdec",[Var("x"),Var("e")])),Where(BA(Call(SVar("assert"),[Build(Str("var"))]),Op("",[Var("x"),Var("e")])))))]),Rules([RDef("Substitute",[],Rule(Op("Var",[Var("x")]),Var("e"),AM(BA(Call(SVar("rewrite"),[Build(Str("var"))]),Var("x")),Var("e")))),RDef("Inline",[],Rule(Op("Call",[Var("f"),Var("es")]),Var("e"),Seq(AM(BA(Seq(Call(SVar("rewrite"),[Build(Str("var"))]),Call(SVar("exp-rename"),[])),Var("f")),Op("Fdec",[Var("f"),Var("xs"),Var("e")])),BA(Call(SVar("zip"),[Call(SVar("assert"),[Build(Str("var"))])]),Op("",[Var("xs"),Var("es")])))))]),Strategies([SDef("main",[],Call(SVar("test-suite"),[Build(Str("scoped-finite-map-test")),Seq(Call(SVar("test0"),[]),Seq(Call(SVar("test1"),[]),Seq(Call(SVar("test2"),[]),Call(SVar("test3"),[]))))])),SDef("test0",[],Seq(Call(SVar("apply-test"),[Build(Str("test0a")),Call(SVar("assert"),[Build(Str("Bla"))]),Build(Op("",[Op("",[]),Op("",[])])),Build(Op("",[Op("",[]),Op("",[])]))]),Call(SVar("apply-test"),[Build(Str("test0b")),Call(SVar("rewrite"),[Build(Str("Bla"))]),Build(Op("",[])),Build(Op("",[]))]))),SDef("test1",[],Call(SVar("apply-test"),[Build(Str("test1")),Call(SVar("inline"),[]),Build(Op("Let",[Op("Cons",[Op("Vdec",[Str("x"),Int(1)]),Op("Nil",[])]),Op("Call",[Str("g"),Op("Cons",[Op("Var",[Str("x")]),Op("Nil",[])])])])),Build(Op("Let",[Op("Cons",[Op("Vdec",[Str("x"),Int(1)]),Op("Nil",[])]),Op("Call",[Str("g"),Op("Cons",[Int(1),Op("Nil",[])])])]))])),SDef("test2",[],Call(SVar("apply-test"),[Build(Str("test2")),Call(SVar("inline"),[]),Build(Op("Let",[Op("Cons",[Op("Fdec",[Str("f"),Op("Cons",[Str("x"),Op("Nil",[])]),Op("Var",[Str("x")])]),Op("Nil",[])]),Op("Let",[Op("Cons",[Op("Fdec",[Str("g"),Op("Cons",[Str("x"),Op("Nil",[])]),Op("Plus",[Op("Int",[Int(1)]),Op("Call",[Str("f"),Op("Cons",[Op("Var",[Str("x")]),Op("Nil",[])])])])]),Op("Nil",[])]),Op("Let",[Op("Cons",[Op("Vdec",[Str("x"),Op("Int",[Int(1)])]),Op("Nil",[])]),Op("Call",[Str("g"),Op("Cons",[Op("Var",[Str("x")]),Op("Nil",[])])])])])])),Build(Op("Let",[Op("Cons",[Op("Fdec",[Str("f"),Op("Cons",[Str("x"),Op("Nil",[])]),Op("Var",[Str("x")])]),Op("Nil",[])]),Op("Let",[Op("Cons",[Op("Fdec",[Str("g"),Op("Cons",[Str("x"),Op("Nil",[])]),Op("Plus",[Op("Int",[Int(1)]),Op("Var",[Str("x")])])]),Op("Nil",[])]),Op("Let",[Op("Cons",[Op("Vdec",[Str("x"),Op("Int",[Int(1)])]),Op("Nil",[])]),Op("Plus",[Op("Int",[Int(1)]),Op("Int",[Int(1)])])])])]))])),SDef("test3",[],Call(SVar("apply-test"),[Build(Str("test3")),Call(SVar("inline"),[]),Build(Op("Let",[Op("Cons",[Op("Fdec",[Str("f"),Op("Cons",[Str("x"),Op("Nil",[])]),Op("Plus",[Op("Int",[Int(1)]),Op("Var",[Str("x")])])]),Op("Nil",[])]),Op("Let",[Op("Cons",[Op("Fdec",[Str("g"),Op("Cons",[Str("x"),Op("Nil",[])]),Op("Call",[Str("f"),Op("Cons",[Op("Var",[Str("x")]),Op("Nil",[])])])]),Op("Nil",[])]),Op("Call",[Str("g"),Op("Cons",[Op("Int",[Int(2)]),Op("Nil",[])])])])])),Build(Op("Let",[Op("Cons",[Op("Fdec",[Str("f"),Op("Cons",[Str("x"),Op("Nil",[])]),Op("Plus",[Op("Int",[Int(1)]),Op("Var",[Str("x")])])]),Op("Nil",[])]),Op("Let",[Op("Cons",[Op("Fdec",[Str("g"),Op("Cons",[Str("x"),Op("Nil",[])]),Op("Plus",[Op("Int",[Int(1)]),Op("Var",[Str("x")])])]),Op("Nil",[])]),Op("Plus",[Op("Int",[Int(1)]),Op("Int",[Int(2)])])])]))]))])])