Specification([Imports(["sunit","integers"]),Strategies([SDef("main",[],Call(SVar("test-suite"),[Build(Str("integers-test")),Seq(Call(SVar("test1"),[]),Seq(Call(SVar("test2"),[]),Call(SVar("test3"),[])))])),SDef("test1",[],Call(SVar("apply-test"),[Build(Str("test1")),Call(SVar("leq"),[]),Build(Op("",[Int(5),Int(5)])),Build(Op("",[Int(5),Int(5)]))])),SDef("test2",[],Seq(Call(SVar("apply-test"),[Build(Str("test2a")),Build(Op("",[App(Call(SVar("divi"),[]),Op("",[RootApp(Id),Int(2)])),App(Seq(Call(SVar("mod"),[]),Match(Int(0))),Op("",[RootApp(Id),Int(2)]))])),Build(Int(16)),Build(Op("",[Int(8),Int(0)]))]),Seq(Call(SVar("apply-test"),[Build(Str("test2b")),Call(SVar("log2"),[]),Build(Int(16)),Build(Int(4))]),Call(SVar("apply-and-fail"),[Build(Str("test2c")),Call(SVar("log2"),[]),Build(Int(6))])))),SDef("test3",[],Seq(Call(SVar("apply-test"),[Build(Str("test3")),Call(SVar("addS"),[]),Build(Op("",[Str("5"),Str("3")])),Build(Str("8"))]),Call(SVar("apply-test"),[Build(Str("test3")),Call(SVar("ltS"),[]),Build(Op("",[Str("3"),Str("5")])),Build(Op("",[Str("3"),Str("5")]))])))])])
