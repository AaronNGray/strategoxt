Specification([Imports(["sunit","integers"]),Strategies([SDef("main",[],Call(SVar("test-suite"),[Build(Str("integers-test")),Seq(Call(SVar("test1"),[]),Seq(Call(SVar("test2"),[]),Seq(Call(SVar("test3"),[]),Seq(Call(SVar("lt-lt-test"),[]),Seq(Call(SVar("dec-string-test"),[]),Seq(Call(SVar("hex-string-test"),[]),Call(SVar("bin-string-test"),[])))))))])),SDef("test1",[],Call(SVar("apply-test"),[Build(Str("test1")),Call(SVar("leq"),[]),Build(Op("",[Int(5),Int(5)])),Build(Op("",[Int(5),Int(5)]))])),SDef("test2",[],Seq(Call(SVar("apply-test"),[Build(Str("test2a")),Build(Op("",[App(Call(SVar("divi"),[]),Op("",[RootApp(Id),Int(2)])),App(Seq(Call(SVar("mod"),[]),Match(Int(0))),Op("",[RootApp(Id),Int(2)]))])),Build(Int(16)),Build(Op("",[Int(8),Int(0)]))]),Seq(Call(SVar("apply-test"),[Build(Str("test2b")),Call(SVar("log2"),[]),Build(Int(16)),Build(Int(4))]),Call(SVar("apply-and-fail"),[Build(Str("test2c")),Call(SVar("log2"),[]),Build(Int(6))])))),SDef("test3",[],Seq(Call(SVar("apply-test"),[Build(Str("test3")),Call(SVar("addS"),[]),Build(Op("",[Str("5"),Str("3")])),Build(Str("8"))]),Call(SVar("apply-test"),[Build(Str("test3")),Call(SVar("ltS"),[]),Build(Op("",[Str("3"),Str("5")])),Build(Op("",[Str("3"),Str("5")]))]))),SDef("lt-lt-test",[],Seq(Call(SVar("apply-test"),[Build(Str("x <= y <= z a")),Call(SVar("leq-leq"),[]),Build(Op("",[Int(2),Int(3),Int(4)])),Build(Op("",[Int(2),Int(3),Int(4)]))]),Seq(Call(SVar("apply-test"),[Build(Str("x <  y <  z b")),Call(SVar("lt-lt"),[]),Build(Op("",[Int(2),Int(3),Int(4)])),Build(Op("",[Int(2),Int(3),Int(4)]))]),Seq(Call(SVar("apply-test"),[Build(Str("x <= y <= z c")),Call(SVar("leq-leq"),[]),Build(Op("",[Int(2),Int(2),Int(2)])),Build(Op("",[Int(2),Int(2),Int(2)]))]),Seq(Call(SVar("apply-and-fail"),[Build(Str("x <  y <= z d")),Call(SVar("lt-leq"),[]),Build(Op("",[Int(2),Int(2),Int(2)]))]),Seq(Call(SVar("apply-and-fail"),[Build(Str("x <= y <= z e")),Call(SVar("leq-leq"),[]),Build(Op("",[Int(2),Int(1),Int(2)]))]),Call(SVar("apply-and-fail"),[Build(Str("x <= y <= z f")),Call(SVar("leq-leq"),[]),Build(Op("",[Int(1),Int(2),Int(1)]))]))))))),SDef("dec-string-test",[],Seq(Call(SVar("apply-test"),[Build(Str("dec-string-test-a")),Call(SVar("dec-string-to-int"),[]),Build(Str("0")),Build(Int(0))]),Seq(Call(SVar("apply-test"),[Build(Str("dec-string-test-b")),Call(SVar("dec-string-to-int"),[]),Build(Str("1")),Build(Int(1))]),Seq(Call(SVar("apply-test"),[Build(Str("dec-string-test-c")),Call(SVar("dec-string-to-int"),[]),Build(Str("10")),Build(Int(10))]),Seq(Call(SVar("apply-test"),[Build(Str("dec-string-test-d")),Call(SVar("dec-string-to-int"),[]),Build(Str("100")),Build(Int(100))]),Seq(Call(SVar("apply-test"),[Build(Str("dec-string-test-e")),Call(SVar("dec-string-to-int"),[]),Build(Str("101")),Build(Int(101))]),Seq(Call(SVar("apply-test"),[Build(Str("dec-string-test-f")),Call(SVar("dec-string-to-int"),[]),Build(Str("34673")),Build(Int(34673))]),Seq(Call(SVar("apply-test"),[Build(Str("dec-string-test-g")),Call(SVar("dec-string-to-int"),[]),Build(Str("-0")),Build(Int(0))]),Seq(Call(SVar("apply-test"),[Build(Str("dec-string-test-h")),Call(SVar("dec-string-to-int"),[]),Build(Str("-1")),Build(Int(-1))]),Seq(Call(SVar("apply-test"),[Build(Str("dec-string-test-i")),Call(SVar("dec-string-to-int"),[]),Build(Str("-10")),Build(Int(-10))]),Seq(Call(SVar("apply-test"),[Build(Str("dec-string-test-j")),Call(SVar("dec-string-to-int"),[]),Build(Str("-100")),Build(Int(-100))]),Seq(Call(SVar("apply-test"),[Build(Str("dec-string-test-k")),Call(SVar("dec-string-to-int"),[]),Build(Str("-101")),Build(Int(-101))]),Call(SVar("apply-test"),[Build(Str("dec-string-test-l")),Call(SVar("dec-string-to-int"),[]),Build(Str("-34673")),Build(Int(-34673))]))))))))))))),SDef("hex-string-test",[],Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-a")),Call(SVar("hex-string-to-int"),[]),Build(Str("0")),Build(Int(0))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-b")),Call(SVar("hex-string-to-int"),[]),Build(Str("1")),Build(Int(1))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-c")),Call(SVar("hex-string-to-int"),[]),Build(Str("2")),Build(Int(2))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-d")),Call(SVar("hex-string-to-int"),[]),Build(Str("3")),Build(Int(3))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-e")),Call(SVar("hex-string-to-int"),[]),Build(Str("4")),Build(Int(4))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-f")),Call(SVar("hex-string-to-int"),[]),Build(Str("5")),Build(Int(5))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-g")),Call(SVar("hex-string-to-int"),[]),Build(Str("6")),Build(Int(6))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-h")),Call(SVar("hex-string-to-int"),[]),Build(Str("7")),Build(Int(7))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-i")),Call(SVar("hex-string-to-int"),[]),Build(Str("8")),Build(Int(8))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-j")),Call(SVar("hex-string-to-int"),[]),Build(Str("9")),Build(Int(9))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-k")),Call(SVar("hex-string-to-int"),[]),Build(Str("A")),Build(Int(10))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-l")),Call(SVar("hex-string-to-int"),[]),Build(Str("B")),Build(Int(11))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-m")),Call(SVar("hex-string-to-int"),[]),Build(Str("C")),Build(Int(12))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-n")),Call(SVar("hex-string-to-int"),[]),Build(Str("D")),Build(Int(13))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-o")),Call(SVar("hex-string-to-int"),[]),Build(Str("E")),Build(Int(14))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-p")),Call(SVar("hex-string-to-int"),[]),Build(Str("F")),Build(Int(15))]),Seq(Call(SVar("apply-test"),[Build(Str("hex-string-test-q")),Call(SVar("hex-string-to-int"),[]),Build(Str("FF")),Build(Int(255))]),Call(SVar("apply-test"),[Build(Str("hex-string-test-r")),Call(SVar("hex-string-to-int"),[]),Build(Str("FFFF")),Build(Int(65535))]))))))))))))))))))),SDef("bin-string-test",[],Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-0a")),Call(SVar("bin-string-to-int"),[]),Build(Str("0")),Build(Int(0))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-0b")),Call(SVar("bin-string-to-int"),[]),Build(Str("00")),Build(Int(0))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-0c")),Call(SVar("bin-string-to-int"),[]),Build(Str("000")),Build(Int(0))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-0d")),Call(SVar("bin-string-to-int"),[]),Build(Str("0000")),Build(Int(0))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-0e")),Call(SVar("bin-string-to-int"),[]),Build(Str("00000")),Build(Int(0))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-0f")),Call(SVar("bin-string-to-int"),[]),Build(Str("00000000000000")),Build(Int(0))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-1a")),Call(SVar("bin-string-to-int"),[]),Build(Str("1")),Build(Int(1))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-1b")),Call(SVar("bin-string-to-int"),[]),Build(Str("01")),Build(Int(1))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-1c")),Call(SVar("bin-string-to-int"),[]),Build(Str("001")),Build(Int(1))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-1d")),Call(SVar("bin-string-to-int"),[]),Build(Str("0001")),Build(Int(1))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-1e")),Call(SVar("bin-string-to-int"),[]),Build(Str("00001")),Build(Int(1))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-1f")),Call(SVar("bin-string-to-int"),[]),Build(Str("0000000000000001")),Build(Int(1))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2a")),Call(SVar("bin-string-to-int"),[]),Build(Str("11")),Build(Int(3))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2b")),Call(SVar("bin-string-to-int"),[]),Build(Str("111")),Build(Int(7))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2c")),Call(SVar("bin-string-to-int"),[]),Build(Str("1111")),Build(Int(15))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2d")),Call(SVar("bin-string-to-int"),[]),Build(Str("11111")),Build(Int(31))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2e")),Call(SVar("bin-string-to-int"),[]),Build(Str("111111")),Build(Int(63))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2f")),Call(SVar("bin-string-to-int"),[]),Build(Str("1111111")),Build(Int(127))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2g")),Call(SVar("bin-string-to-int"),[]),Build(Str("11111111")),Build(Int(255))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2h")),Call(SVar("bin-string-to-int"),[]),Build(Str("111111111")),Build(Int(511))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2i")),Call(SVar("bin-string-to-int"),[]),Build(Str("1111111111")),Build(Int(1023))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2j")),Call(SVar("bin-string-to-int"),[]),Build(Str("11111111111")),Build(Int(2047))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2k")),Call(SVar("bin-string-to-int"),[]),Build(Str("10")),Build(Int(2))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2l")),Call(SVar("bin-string-to-int"),[]),Build(Str("100")),Build(Int(4))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2m")),Call(SVar("bin-string-to-int"),[]),Build(Str("1000")),Build(Int(8))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2n")),Call(SVar("bin-string-to-int"),[]),Build(Str("10000")),Build(Int(16))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2o")),Call(SVar("bin-string-to-int"),[]),Build(Str("100000")),Build(Int(32))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2p")),Call(SVar("bin-string-to-int"),[]),Build(Str("1000000")),Build(Int(64))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2q")),Call(SVar("bin-string-to-int"),[]),Build(Str("10000000")),Build(Int(128))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2r")),Call(SVar("bin-string-to-int"),[]),Build(Str("100000000")),Build(Int(256))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2s")),Call(SVar("bin-string-to-int"),[]),Build(Str("1000000000")),Build(Int(512))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2t")),Call(SVar("bin-string-to-int"),[]),Build(Str("10000000000")),Build(Int(1024))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-2u")),Call(SVar("bin-string-to-int"),[]),Build(Str("100000000000")),Build(Int(2048))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-a")),Call(SVar("bin-string-to-int"),[]),Build(Str("1010")),Build(Int(10))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-c")),Call(SVar("bin-string-to-int"),[]),Build(Str("10110000")),Build(Int(176))]),Seq(Call(SVar("apply-test"),[Build(Str("bin-string-test-b")),Call(SVar("bin-string-to-int"),[]),Build(Str("111100011")),Build(Int(483))]),Call(SVar("apply-test"),[Build(Str("bin-string-test-d")),Call(SVar("bin-string-to-int"),[]),Build(Str("101010101")),Build(Int(341))]))))))))))))))))))))))))))))))))))))))])])
