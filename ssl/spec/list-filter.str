module list-filter
imports list
strategies

 /**
  * @inc test1
  */
  filter(s) = 
    [] + [s | filter(s)] <+ ?[_ | <filter(s)> ]

  reverse-filter(s) = 
    [] + [id | filter(s)]; ([s | id] <+ ?[_  | <id>])

  filter-gen(pred, cont : (term -> term) * term -> term) =
    rec x([] + (pred; cont(x)) <+ Tl; x)

  (* filter(s) = filter-gen([s | id], at-tail) *)

  skip1(s) = at-tail(s)
  skip2(s) = at-tail(at-tail(s))

  filter-option-args(flag) = 
    filter-gen([flag | id]; Tl, skip1)

  filter-options(flag) = 
    filter-gen([flag | id], skip2)

  // partition(s) = split(filter(s), filter(not(s)))

 /**
  * @inc test2
  */
  partition(s) = rec part(
    \ [] -> ([],[]) \
    + ({[s => x | id]; ?[_|<part>]; !([x | <Fst>], <Snd>)} <+
       {[id =>x | id]; ?[_|<part>]; !(<Fst>, [x | <Snd>])})
  )

  partition'(s) = rec part(
    \ [] -> ([],[]) \
    + \ [z | zs] -> <!([<s> z | xs], ys) <+ !(xs, [z | ys])>
        where <part> zs => (xs, ys) \
  )

