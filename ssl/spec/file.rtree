Specification([Imports(["posix-file","io","list-basic","list-misc","string"]),Strategies([SDef("open-stream",[],Seq(Match(Op("",[Wld,Wld])),LChoice(Seq(Call(SVar("Fst"),[]),Call(SVar("stdio-stream"),[])),LChoice(Seq(Call(SVar(""),[Match(Op("Path",[RootApp(Id)])),Id]),Call(SVar("fopen"),[])),Seq(Call(SVar(""),[Call(SVar("is-string"),[]),Id]),Call(SVar("fopen"),[])))))),SDef("stdio-stream",[],Seq(Match(Op("stdin",[])),Call(SVar("stdin-stream"),[]))),SDef("stdio-stream",[],Seq(Match(Op("stdout",[])),Call(SVar("stdout-stream"),[]))),SDef("stdio-stream",[],Seq(Match(Op("stderr",[])),Call(SVar("stderr-stream"),[])))]),Strategies([SDef("close-file",[],Seq(Match(Var("name")),Prim("SSL_close_file",[Var("name")]))),SDef("open-file",[],Seq(Match(Op("",[Var("name"),Var("mode")])),Prim("SSL_open_file",[Var("name"),Var("mode")]))),SDef("open-file",[],Seq(Match(Var("name")),Seq(Not(Match(Op("",[Wld,Wld]))),Seq(Call(SVar("obsolete"),[Build(Str("<open-file> file; use <open-file> (file, mode)"))]),BA(Call(SVar("open-file"),[]),Op("",[Var("name"),Str("w")])))))),SDef("append-file",[],BA(Call(SVar("open-file"),[]),Op("",[RootApp(Id),Str("a")])))]),Strategies([SDef("file-exists",[],BA(Call(SVar("access"),[]),Op("",[RootApp(Id),Op("Cons",[Op("F_OK",[]),Op("Nil",[])])]))),SDef("can-read-file",[],BA(Call(SVar("access"),[]),Op("",[RootApp(Id),Op("Cons",[Op("R_OK",[]),Op("Nil",[])])]))),SDef("is-readable",[],Call(SVar("can-read-file"),[])),SDef("can-write-file",[],BA(Call(SVar("access"),[]),Op("",[RootApp(Id),Op("Cons",[Op("W_OK",[]),Op("Nil",[])])]))),SDef("is-writable",[],Call(SVar("can-write-file"),[])),SDef("can-execute-file",[],BA(Call(SVar("access"),[]),Op("",[RootApp(Id),Op("Cons",[Op("X_OK",[]),Op("Nil",[])])]))),SDef("is-executable",[],Call(SVar("can-exutable-file"),[])),SDef("can-create-file",[],Where(Seq(Call(SVar("dirname"),[]),Call(SVar("can-write-file"),[]))))]),Strategies([SDef("dirname",[],Call(SVar("string-as-chars"),[Seq(Call(SVar("try"),[Seq(Call(SVar("split-init-last"),[]),Match(Op("",[RootApp(Id),Int(47)])))]),GuardedLChoice(Match(Op("Nil",[])),Build(Op("Cons",[Int(47),Op("Nil",[])])),Seq(Call(SVar("init"),[]),Seq(Call(SVar("repeat"),[Seq(Call(SVar("split-init-last"),[]),Seq(Call(SVar(""),[Id,Not(Match(Int(47)))]),Call(SVar("Fst"),[])))]),GuardedLChoice(Match(Op("Nil",[])),Build(Op("Cons",[Int(46),Op("Nil",[])])),Seq(Call(SVar("repeat"),[Seq(Call(SVar("split-init-last"),[]),Match(Op("",[RootApp(Id),Int(47)])))]),GuardedLChoice(Match(Op("Nil",[])),Build(Op("Cons",[Int(47),Op("Nil",[])])),Id)))))))]))]),Strategies([SDef("new-file",[],Rec("x",Seq(BA(Call(SVar("conc-strings"),[]),Op("",[App(Call(SVar("new"),[]),Op("",[])),Str(".tmp")])),Call(SVar("try"),[Seq(Call(SVar("file-exists"),[]),Call(SVar("x"),[]))])))),SDef("temp-file",[DefaultVarDec("s")],Seq(Where(AM(Call(SVar("new-file"),[]),Var("f"))),BA(Call(SVar("finally"),[Call(SVar("s"),[]),Call(SVar("try"),[BA(Call(SVar("remove-file"),[]),Var("f"))])]),Op("",[Var("f"),RootApp(Id)])))),SDef("new-temp-file",[],Seq(BA(Call(SVar("conc-strings"),[]),Op("",[RootApp(Call(SVar("temp-dir"),[])),Str("/StrategoXT")])),Call(SVar("mkstemp"),[])))]),Strategies([SDef("find-in-path",[],Seq(Match(Op("",[Var("file"),RootApp(Id)])),Call(SVar("fetch-elem"),[BA(Seq(Call(SVar("concat-strings"),[]),Call(SVar("file-exists"),[])),Op("Cons",[RootApp(Id),Op("Cons",[Str("/"),Op("Cons",[Var("file"),Op("Nil",[])])])]))]))),SDef("find-in-path",[DefaultVarDec("mkpath")],LChoice(Call(SVar("file-exists"),[]),LChoice(Seq(Call(SVar("split"),[Id,Call(SVar("mkpath"),[])]),Call(SVar("find-in-path"),[])),BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("no such file: "),Op("Cons",[RootApp(Id),Op("Nil",[])])]))))),SDef("find-file",[DefaultVarDec("mkpath"),DefaultVarDec("ext")],Seq(Call(SVar("guarantee-extension"),[Call(SVar("ext"),[])]),Call(SVar("find-in-path"),[Call(SVar("mkpath"),[])]))),SDef("find-file",[DefaultVarDec("ext")],Seq(Call(SVar(""),[Call(SVar("guarantee-extension"),[Call(SVar("ext"),[])]),Id]),Call(SVar("find-in-path"),[])))])])
