Specification([Imports(["list-basic","list-misc","term","collect"]),Strategies([SDef("collect-all",[DefaultVarDec("s")],LChoice(Build(Op("Cons",[RootApp(Call(SVar("s"),[])),RootApp(Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("collect-all"),[Call(SVar("s"),[])])]))])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("collect-all"),[Call(SVar("s"),[])])]))),SDef("collect-all",[DefaultVarDec("s"),DefaultVarDec("un")],Rec("x",LChoice(Build(Op("Cons",[RootApp(Call(SVar("s"),[])),RootApp(Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("un"),[]),Call(SVar("x"),[])]))])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("un"),[]),Call(SVar("x"),[])])))),SDef("postorder-collect",[DefaultVarDec("s")],Call(SVar("postorder-collect"),[Call(SVar("s"),[]),Build(Op("Nil",[]))])),SDef("postorder-collect",[DefaultVarDec("s"),DefaultVarDec("acc")],Seq(Where(AM(LChoice(Build(Op("Cons",[RootApp(Call(SVar("s"),[])),RootApp(Call(SVar("acc"),[]))])),Call(SVar("acc"),[])),Var("ys"))),Call(SVar("crush"),[Build(Var("ys")),LRule(Rule(Op("",[Var("x"),Var("xs")]),App(Call(SVar("postorder-collect"),[Call(SVar("s"),[]),Build(Var("xs"))]),Var("x")),Id))]))),SDef("collect-om",[DefaultVarDec("s")],LChoice(Build(Op("Cons",[RootApp(Call(SVar("s"),[])),Op("Nil",[])])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("collect-om"),[Call(SVar("s"),[])])]))),SDef("collect",[DefaultVarDec("s")],Call(SVar("collect-om"),[Call(SVar("s"),[])])),SDef("collect-set",[DefaultVarDec("s")],LChoice(Build(Op("Cons",[RootApp(Call(SVar("s"),[])),Op("Nil",[])])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("conc"),[]),Call(SVar("collect-set"),[Call(SVar("s"),[])])]))),SDef("collect",[DefaultVarDec("s"),VarDec("skip",FunType([ConstType(Var("a")),FunType([ConstType(Var("a"))],ConstType(Var("a"))),FunType([ConstType(Var("a"))],ConstType(Var("a")))],ConstType(Var("a"))))],LChoice(Build(Op("Cons",[RootApp(Call(SVar("s"),[])),Op("Nil",[])])),LChoice(Seq(Call(SVar("skip"),[Call(SVar("collect"),[Call(SVar("s"),[]),Call(SVar("skip"),[])]),Build(Op("Nil",[]))]),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Id])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("collect"),[Call(SVar("s"),[]),Call(SVar("skip"),[])])])))),SDef("collect-exc",[DefaultVarDec("base"),VarDec("special",FunType([ConstType(Var("a")),FunType([ConstType(Var("a"))],ConstType(Var("b")))],ConstType(Var("b"))))],Rec("coll",LChoice(LChoice(Call(SVar("base"),[]),Call(SVar("special"),[Call(SVar("coll"),[])])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("coll"),[])])))),SDef("bu-collect",[DefaultVarDec("s")],LChoice(Rec("x",LChoice(Seq(Some(Call(SVar("x"),[])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Build(Op("Nil",[])))])),Build(Op("Cons",[RootApp(Call(SVar("s"),[])),Op("Nil",[])])))),Build(Op("Nil",[])))),SDef("collect-split",[DefaultVarDec("splitter")],Rec("x",Call(SVar("CollectSplit"),[Call(SVar("x"),[]),LChoice(Call(SVar("splitter"),[]),Build(Op("",[RootApp(Id),Op("Nil",[])])))]))),SDef("collect-split'",[DefaultVarDec("splitter")],Rec("x",LChoice(Seq(Choice(Call(SVar("is-string"),[]),Call(SVar("is-int"),[])),Call(SVar("splitter"),[])),Call(SVar("CollectSplit"),[Call(SVar("x"),[]),Call(SVar("splitter"),[])])))),SDef("collect-split",[DefaultVarDec("f"),DefaultVarDec("g")],Rec("x",Call(SVar("CollectSplit"),[Call(SVar("x"),[]),Build(Op("",[RootApp(Call(SVar("try"),[Call(SVar("f"),[])])),RootApp(LChoice(Call(SVar("g"),[]),Build(Op("Nil",[]))))]))])))]),Strategies([SDef("collect-kids",[DefaultVarDec("s")],Seq(Call(SVar("obsolete"),[Build(Str("collect-kids(s); use crush(![],union,s)"))]),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("s"),[])])))]),Strategies([RDef("CollectSplit",[DefaultVarDec("s"),DefaultVarDec("splitter")],Rule(Anno(Explode(Var("c"),Var("as")),Op("Cons",[Var(ListVar("annos*")),Op("Nil",[])])),Op("",[Var("t"),App(Call(SVar("union"),[]),Op("",[Var("ys"),App(Call(SVar("unions"),[]),Var("xs"))]))]),Seq(AM(BA(Call(SVar("unzip"),[Call(SVar("s"),[])]),Var("as")),Op("",[Var("bs"),Var("xs")])),AM(BA(Call(SVar("splitter"),[]),Anno(Explode(Var("c"),Var("bs")),Op("Cons",[Var(ListVar("annos*")),Op("Nil",[])]))),Op("",[Var("t"),Var("ys")]))))),SDef("CollectSplit",[DefaultVarDec("s"),DefaultVarDec("f"),DefaultVarDec("g")],Call(SVar("CollectSplit"),[Call(SVar("s"),[]),Build(Op("",[RootApp(Call(SVar("try"),[Call(SVar("f"),[])])),RootApp(LChoice(Call(SVar("g"),[]),Build(Op("Nil",[]))))]))]))]),Strategies([SDef("twicetd",[DefaultVarDec("s")],Call(SVar("oncetd"),[Seq(Call(SVar("explode-term"),[]),Seq(Call(SVar(""),[Id,Call(SVar("at-suffix"),[Call(SVar("Cons"),[Call(SVar("oncetd"),[Call(SVar("s"),[])]),Call(SVar("oncetd"),[Call(SVar("s"),[])])])])]),Call(SVar("mkterm"),[])))])),SDef("atmostonce",[DefaultVarDec("s")],Not(Call(SVar("twicetd"),[Call(SVar("s"),[])]))),SDef("atmostonce'",[DefaultVarDec("s")],Scope(["n"],Seq(AM(Call(SVar("nrofoccs"),[Call(SVar("s"),[])]),Var("n")),BA(Call(SVar("leq"),[]),Op("",[Var("n"),Int(1)])))))])])
