Specification([Imports(["lib","config"]),Signature([Sorts([Sort("Option",[])]),Constructors([OpDecl("Program",FunType([ConstType(Var("String"))],ConstType(Var("Option")))),OpDecl("Undefined",FunType([ConstType(Var("String"))],ConstType(Var("Option"))))])]),Strategies([SDef("system-usage-switch",[],Call(SVar("Option"),[Choice(Match(Str("--help")),Choice(Match(Str("-h")),Match(Str("-?")))),Seq(BA(Call(SVar("set-config"),[]),Op("",[Str("--help"),Op("",[])])),Build(Op("Help",[]))),Build(Str("-h|-?|--help     Display usage information"))])),SDef("short-description",[DefaultVarDec("s")],Fail),SDef("long-description",[DefaultVarDec("s")],Fail),SDef("parse-options",[DefaultVarDec("s")],Seq(Where(BA(Call(SVar("table-put"),[]),Op("",[Str("usage-table"),Str("usage"),Op("Nil",[])]))),Seq(Call(SVar("parse-options'"),[Choice(Call(SVar("s"),[]),Call(SVar("system-usage-switch"),[]))]),Seq(Call(SVar("try"),[LChoice(Seq(Where(LChoice(BA(Call(SVar("get-config"),[]),Str("--help")),Call(SVar("option-defined"),[Call(SVar("Help"),[])]))),Seq(Call(SVar("system-usage"),[]),BA(Call(SVar("exit"),[]),Int(0)))),Seq(Call(SVar("option-defined"),[Call(SVar("Undefined"),[Match(Var("option"))])]),Seq(BA(Call(SVar("printnl"),[]),Op("",[Op("stderr",[]),Op("Cons",[Str("Invalid option: "),Op("Cons",[Var("option"),Op("Nil",[])])])])),Seq(Call(SVar("system-usage"),[]),BA(Call(SVar("exit"),[]),Int(1))))))]),Where(BA(Call(SVar("table-destroy"),[]),Str("usage-table"))))))),SDef("parse-options'",[DefaultVarDec("s")],Seq(Where(Call(SVar("try"),[BA(Call(SVar("s"),[]),Str("register-usage-info"))])),Call(SVar("Cons"),[Seq(Where(BA(Call(SVar("set-config"),[]),Op("",[Str("program"),RootApp(Id)]))),Build(Op("Program",[RootApp(Id)]))),Rec("x",LChoice(Choice(Call(SVar("Nil"),[]),Seq(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])]))),Call(SVar("UndefinedOption"),[])))]))),SDef("register-usage",[DefaultVarDec("s")],Seq(BA(Call(SVar("table-push"),[]),Op("",[Str("usage-table"),Str("usage"),App(Call(SVar("s"),[]),Op("",[]))])),Fail)),SDef("system-usage",[],Seq(LChoice(AM(BA(Call(SVar("get-config"),[]),Str("program")),Var("p")),Call(SVar("option-defined"),[Call(SVar("Program"),[Match(Var("p"))])])),Seq(Call(SVar("try"),[Seq(Call(SVar("short-description"),[Build(Var("p"))]),Call(SVar("echo"),[]))]),Seq(BA(Call(SVar("echo"),[]),Str("\nOptions:")),Seq(BA(Seq(Call(SVar("table-get"),[]),Call(SVar("reverse"),[])),Op("",[Str("usage-table"),Str("usage")])),Seq(Call(SVar("map"),[BA(Call(SVar("echo"),[]),Op("Cons",[Str("   "),Op("Cons",[RootApp(Id),Op("Nil",[])])]))]),Call(SVar("try"),[BA(Call(SVar("echo"),[]),Op("Cons",[Str("\n"),RootApp(Call(SVar("long-description"),[Build(Var("p"))]))]))])))))))]),Rules([RDef("Option",[DefaultVarDec("is-flag"),DefaultVarDec("label"),DefaultVarDec("s")],Rule(Op("Cons",[Var("flag"),Var("rest")]),Op("Cons",[App(Call(SVar("label"),[]),Op("",[])),Var("rest")]),BA(Call(SVar("is-flag"),[]),Var("flag")))),SDef("Option",[DefaultVarDec("is-flag"),DefaultVarDec("label")],Call(SVar("Option"),[Call(SVar("is-flag"),[]),Call(SVar("label"),[]),Build(Str(""))])),SDef("Option",[DefaultVarDec("is-flag"),DefaultVarDec("label"),DefaultVarDec("s")],Seq(Match(Str("register-usage-info")),Call(SVar("register-usage"),[Call(SVar("s"),[])]))),RDef("ArgOption",[DefaultVarDec("is-flag"),DefaultVarDec("label"),DefaultVarDec("s")],Rule(Op("Cons",[Var("flag"),Op("Cons",[Var("arg"),Var("rest")])]),Op("Cons",[App(Call(SVar("label"),[]),Var("arg")),Var("rest")]),BA(Call(SVar("is-flag"),[]),Var("flag")))),SDef("ArgOption",[DefaultVarDec("is-flag"),DefaultVarDec("label"),DefaultVarDec("s")],Seq(Match(Str("register-usage-info")),Call(SVar("register-usage"),[Call(SVar("s"),[])]))),SDef("Arg2Option",[DefaultVarDec("is-flag"),DefaultVarDec("label"),DefaultVarDec("s")],Seq(Match(Str("register-usage-info")),Call(SVar("register-usage"),[Call(SVar("s"),[])]))),SDef("ArgOption",[DefaultVarDec("is-flag"),DefaultVarDec("label")],Call(SVar("ArgOption"),[Call(SVar("is-flag"),[]),Call(SVar("label"),[]),Build(Str(""))])),RDef("Arg2Option",[DefaultVarDec("is-flag"),DefaultVarDec("label")],Rule(Op("Cons",[Var("flag"),Op("Cons",[Var("arg1"),Op("Cons",[Var("arg2"),Var("rest")])])]),Op("Cons",[App(Call(SVar("label"),[]),Op("",[Var("arg1"),Var("arg2")])),Var("rest")]),BA(Call(SVar("is-flag"),[]),Var("flag")))),RDef("Arg2Option",[DefaultVarDec("is-flag"),DefaultVarDec("label"),DefaultVarDec("s")],Rule(Op("Cons",[Var("flag"),Op("Cons",[Var("arg1"),Op("Cons",[Var("arg2"),Var("rest")])])]),Op("Cons",[App(Call(SVar("label"),[]),Op("",[Var("arg1"),Var("arg2")])),Var("rest")]),BA(Call(SVar("is-flag"),[]),Var("flag")))),RDef("UndefinedOption",[],Rule(Op("Cons",[Var("x"),Var("rest")]),Op("Cons",[Op("Undefined",[Var("x")]),Var("rest")]),Id))]),Strategies([SDef("defined-option",[DefaultVarDec("s")],Call(SVar("fetch"),[Call(SVar("s"),[])])),SDef("option-defined",[DefaultVarDec("s")],Call(SVar("fetch"),[Call(SVar("s"),[])])),SDef("arg-option-value",[DefaultVarDec("s")],Call(SVar("fetch"),[Call(SVar("s"),[])]))])])
