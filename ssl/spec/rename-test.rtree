Specification([Imports(["sunit","rename"]),Strategies([SDef("main",[],Call(SVar("test-suite"),[Build(Str("rename-test")),Seq(Call(SVar("test1"),[]),Call(SVar("test2"),[]))]))]),Signature([Sorts([Sort("Exp",[])]),Constructors([OpDecl("Abs",FunType([ConstType(Var("String")),ConstType(Var("Exp"))],ConstType(Var("Exp")))),OpDecl("Var",FunType([ConstType(Var("String"))],ConstType(Var("Exp")))),OpDecl("App",FunType([ConstType(Var("Exp")),ConstType(Var("Exp"))],ConstType(Var("Exp"))))])]),Rules([RDef("EBnd",[],Rule(Op("Abs",[Var("x"),Var("e")]),Op("Cons",[Var("x"),Op("Nil",[])]),Id))]),Strategies([SDef("is-evar",[DefaultVarDec("s")],Call(SVar("Var"),[Call(SVar("s"),[])])),SDef("EPaste",[DefaultVarDec("nwvars")],Call(SVar("Abs"),[Seq(Call(SVar("nwvars"),[]),Call(SVar("Hd"),[])),Id])),SDef("EBoundIn",[DefaultVarDec("bndvars"),DefaultVarDec("ubndvars"),DefaultVarDec("ignore")],Call(SVar("Abs"),[Call(SVar("ignore"),[]),Call(SVar("bndvars"),[])])),SDef("erename",[],Call(SVar("rename"),[Call(SVar("is-evar"),[]),Call(SVar("EBnd"),[]),Call(SVar("EBoundIn"),[]),Call(SVar("EPaste"),[])])),SDef("test1",[],Call(SVar("apply-and-check"),[Build(Str("test1")),Call(SVar("erename"),[]),Build(Op("App",[Op("Abs",[Str("x"),Op("Var",[Str("x")])]),Op("Var",[Str("x")])])),ScopeDefault(Seq(Match(Op("App",[Op("Abs",[Var("a_0"),Op("Var",[Var("a_0")])]),Op("Var",[Str("x")])])),Where(BA(Not(Call(SVar("eq"),[])),Op("",[Var("a_0"),Str("x")])))))]))]),Signature([Sorts([Sort("Exp",[])]),Constructors([OpDecl("Abs",FunType([ConstType(Var("String")),ConstType(Var("Type")),ConstType(Var("Exp"))],ConstType(Var("Exp")))),OpDecl("Var",FunType([ConstType(Var("String")),ConstType(Var("Type"))],ConstType(Var("Exp")))),OpDecl("Letrec",FunType([ConstType(Op("List",[Var("Fdec")])),ConstType(Var("Exp"))],ConstType(Var("Exp")))),OpDecl("Fdec",FunType([ConstType(Var("String")),ConstType(Var("Type")),ConstType(Var("Exp"))],ConstType(Var("Fdec"))))])]),Rules([RDef("TBnd",[],Rule(Op("Abs",[Var("x"),Var("t"),Var("e")]),Op("Cons",[Var("x"),Op("Nil",[])]),Id)),RDef("TBnd",[],Rule(Op("Letrec",[Var("fdecs"),Var("e")]),App(Call(SVar("map"),[Call(SVar("Name"),[])]),Var("fdecs")),Id)),RDef("Name",[],Rule(Op("Fdec",[Var("f"),Var("t"),Var("e")]),Var("f"),Id))]),Strategies([SDef("is-var",[DefaultVarDec("s")],Call(SVar("Var"),[Seq(Call(SVar("debug"),[]),Seq(Call(SVar("s"),[]),Call(SVar("debug"),[]))),Id])),SDef("TBoundIn",[DefaultVarDec("bndvars"),DefaultVarDec("ubndvars"),DefaultVarDec("ignore")],Choice(Call(SVar("Abs"),[Call(SVar("ignore"),[]),Call(SVar("ignore"),[]),Call(SVar("bndvars"),[])]),Call(SVar("Letrec"),[Call(SVar("bndvars"),[]),Call(SVar("bndvars"),[])]))),SDef("TPaste",[DefaultVarDec("nwvars")],Seq(Call(SVar("debug"),[]),Seq(Choice(Call(SVar("Abs"),[Seq(Call(SVar("nwvars"),[]),Call(SVar("Hd"),[])),Id,Id]),Call(SVar("Letrec"),[Seq(Call(SVar("split"),[Id,Call(SVar("nwvars"),[])]),Call(SVar("zip"),[Call(SVar("PasteFdec"),[])])),Id])),Call(SVar("debug"),[])))),RDef("PasteFdec",[],Rule(Op("",[Op("Fdec",[Var("f"),Var("t"),Var("e")]),Var("g")]),Op("Fdec",[Var("g"),Var("t"),Var("e")]),Id)),SDef("trename",[],Call(SVar("rename"),[Call(SVar("is-var"),[]),Call(SVar("TBnd"),[]),Call(SVar("TBoundIn"),[]),Call(SVar("TPaste"),[])])),SDef("test2",[],Call(SVar("apply-and-check"),[Build(Str("test2")),Call(SVar("trename"),[]),Build(Op("App",[Op("Abs",[Str("x"),Str("a"),Op("Var",[Str("x"),Str("a")])]),Op("Var",[Str("x"),Str("a")])])),ScopeDefault(Seq(Match(Op("App",[Op("Abs",[Var("b_0"),Str("a"),Op("Var",[Var("b_0"),Str("a")])]),Op("Var",[Str("x"),Str("a")])])),Where(BA(Not(Call(SVar("eq"),[])),Op("",[Var("b_0"),Str("a")])))))]))])])