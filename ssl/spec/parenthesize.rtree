Specification([Imports(["list-basic"]),Strategies([SDef("parenthesize",[DefaultVarDec("paren"),DefaultVarDec("prios")],Seq(Where(Seq(Call(SVar("prios"),[]),Call(SVar("init-parenthesation-rules"),[]))),Call(SVar("bottomup"),[Call(SVar("try"),[Call(SVar("Disambiguate"),[Call(SVar("paren"),[])])])]))),SDef("parenthesize",[DefaultVarDec("paren")],Call(SVar("bottomup"),[Call(SVar("try"),[Call(SVar("Disambiguate"),[Call(SVar("paren"),[])])])])),RDef("Disambiguate",[DefaultVarDec("paren")],Rule(As(Var("e"),Explode(Var("op"),Op("Cons",[Var("l"),Var("args")]))),Explode(Var("op"),Op("Cons",[Var("l'"),App(Call(SVar("conc"),[]),Op("",[Var("mid'"),Op("Cons",[Var("r'"),Op("Nil",[])])]))])),Seq(AM(BA(Call(SVar("split-init-last"),[]),Var("args")),Op("",[Var("mid"),Var("r")])),Seq(AM(BA(Call(SVar("try"),[Seq(Test(BA(Call(SVar("RightAssoc"),[]),Op("",[Var("e"),RootApp(Id)]))),Call(SVar("paren"),[]))]),Var("l")),Var("l'")),Seq(AM(BA(Call(SVar("map"),[Seq(Test(BA(Call(SVar("GreaterThan"),[]),Op("",[Var("e"),RootApp(Id)]))),Call(SVar("paren"),[]))]),Var("mid")),Var("mid'")),AM(BA(Call(SVar("try"),[Seq(Test(BA(Call(SVar("LeftAssoc"),[]),Op("",[Var("e"),RootApp(Id)]))),Call(SVar("paren"),[]))]),Var("r")),Var("r'")))))))]),Strategies([SDef("init-parenthesation-rules",[],Seq(Build(Op("",[Op("Nil",[]),RootApp(Id)])),Call(SVar("repeat"),[Choice(Call(SVar("gen-left"),[]),Choice(Call(SVar("gen-right"),[]),Choice(Call(SVar("gen-non-assoc"),[]),Call(SVar("gen-none"),[]))))]))),RDef("gen-left",[],Rule(Op("",[Var("greater"),Op("Cons",[Op("",[Op("Some",[Str("left")]),Var("ops")]),Var("rest")])]),Op("",[App(Call(SVar("conc"),[]),Op("",[Var("ops"),Var("greater")])),Var("rest")]),Seq(BA(Call(SVar("for-each-pair"),[Call(SVar("GenLeftAssoc"),[])]),Op("",[Var("ops"),Var("ops")])),BA(Call(SVar("for-each-pair"),[Seq(Call(SVar("GenGreaterThan"),[]),Seq(Call(SVar("GenLeftAssoc"),[]),Call(SVar("GenRightAssoc"),[])))]),Op("",[Var("greater"),Var("ops")]))))),RDef("gen-right",[],Rule(Op("",[Var("greater"),Op("Cons",[Op("",[Op("Some",[Str("right")]),Var("ops")]),Var("rest")])]),Op("",[App(Call(SVar("conc"),[]),Op("",[Var("ops"),Var("greater")])),Var("rest")]),Seq(BA(Call(SVar("for-each-pair"),[Call(SVar("GenLeftAssoc"),[])]),Op("",[Var("ops"),Var("ops")])),BA(Call(SVar("for-each-pair"),[Seq(Call(SVar("GenGreaterThan"),[]),Seq(Call(SVar("GenLeftAssoc"),[]),Call(SVar("GenRightAssoc"),[])))]),Op("",[Var("greater"),Var("ops")]))))),RDef("gen-non-assoc",[],Rule(Op("",[Var("greater"),Op("Cons",[Op("",[Op("Some",[Str("non-assoc")]),Var("ops")]),Var("rest")])]),Op("",[App(Call(SVar("conc"),[]),Op("",[Var("ops"),Var("greater")])),Var("rest")]),Seq(BA(Call(SVar("for-each-pair"),[Seq(Call(SVar("GenLeftAssoc"),[]),Call(SVar("GenRightAssoc"),[]))]),Op("",[Var("ops"),Var("ops")])),BA(Call(SVar("for-each-pair"),[Seq(Call(SVar("GenGreaterThan"),[]),Seq(Call(SVar("GenLeftAssoc"),[]),Call(SVar("GenRightAssoc"),[])))]),Op("",[Var("greater"),Var("ops")]))))),RDef("gen-none",[],Rule(Op("",[Var("greater"),Op("Cons",[Op("",[Var("None"),Var("ops")]),Var("rest")])]),Op("",[App(Call(SVar("conc"),[]),Op("",[Var("ops"),Var("greater")])),Var("rest")]),BA(Call(SVar("for-each-pair"),[Seq(Call(SVar("GenGreaterThan"),[]),Seq(Call(SVar("GenLeftAssoc"),[]),Call(SVar("GenRightAssoc"),[])))]),Op("",[Var("greater"),Var("ops")])))),SDef("GenLeftAssoc",[],Seq(Match(Op("",[Var("op1"),Var("op2")])),DynamicRules([RDef("LeftAssoc",[],Rule(Op("",[Explode(Var("op1"),Wld),Explode(Var("op2"),Wld)]),Op("",[]),Id))]))),SDef("GenRightAssoc",[],Seq(Match(Op("",[Var("op1"),Var("op2")])),DynamicRules([RDef("RightAssoc",[],Rule(Op("",[Explode(Var("op1"),Wld),Explode(Var("op2"),Wld)]),Op("",[]),Id))]))),SDef("GenGreaterThan",[],Seq(Match(Op("",[Var("op1"),Var("op2")])),DynamicRules([RDef("GreaterThan",[],Rule(Op("",[Explode(Var("op1"),Wld),Explode(Var("op2"),Wld)]),Op("",[]),Id))])))])])
