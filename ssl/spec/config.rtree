Specification([Imports(["dir","verbose"]),Signature([Constructors([OpDecl("Var",FunType([ConstType(Var("String"))],ConstType(Var("Config")))),OpDecl("Path",FunType([ConstType(Var("String"))],ConstType(Var("Config")))),OpDecl("Prefix",FunType([ConstType(Var("Config")),ConstType(Var("Config"))],ConstType(Var("Config"))))])]),Strategies([SDef("find-config-file",[DefaultVarDec("dirs"),DefaultVarDec("file")],LChoice(Seq(Call(SVar("dirs"),[]),Call(SVar("fetch-elem"),[BA(Seq(Call(SVar("concat-strings"),[]),Call(SVar("file-exists"),[])),Op("Cons",[RootApp(Id),Op("Cons",[Str("/"),Op("Cons",[RootApp(Call(SVar("file"),[])),Op("Nil",[])])])]))])),Seq(BA(Call(SVar("debug"),[Call(SVar("file"),[])]),Str(" not found")),Fail))),SDef("find-config-file",[DefaultVarDec("prefix"),DefaultVarDec("dirs"),DefaultVarDec("file")],LChoice(Seq(Call(SVar("dirs"),[]),Call(SVar("fetch-elem"),[BA(Seq(Call(SVar("concat-strings"),[]),Call(SVar("file-exists"),[])),Op("Cons",[RootApp(Call(SVar("prefix"),[])),Op("Cons",[Str("/"),Op("Cons",[RootApp(Id),Op("Cons",[Str("/"),Op("Cons",[RootApp(Call(SVar("file"),[])),Op("Nil",[])])])])])]))])),Seq(BA(Call(SVar("debug"),[Call(SVar("file"),[])]),Str(" not found")),Fail))),SDef("find-plugins",[DefaultVarDec("prefix"),DefaultVarDec("dirs"),DefaultVarDec("ext")],Call(SVar("find-plugins"),[Seq(Call(SVar("dirs"),[]),Call(SVar("map"),[LRule(Rule(Var("d"),App(Call(SVar("concat-strings"),[]),Op("Cons",[RootApp(Call(SVar("prefix"),[])),Op("Cons",[Str("/"),Op("Cons",[Var("d"),Op("Cons",[Str("/"),Op("Nil",[])])])])])),Id))])),Call(SVar("ext"),[])])),SDef("find-plugins",[DefaultVarDec("dirs"),DefaultVarDec("ext")],Seq(Call(SVar("dirs"),[]),Seq(Call(SVar("filter"),[ScopeDefault(Seq(Match(Var("dir")),Seq(Call(SVar("readdir"),[]),Call(SVar("filter"),[Seq(Call(SVar("has-extension"),[Call(SVar("ext"),[])]),BA(Call(SVar("concat-strings"),[]),Op("Cons",[Var("dir"),Op("Cons",[Str("/"),Op("Cons",[RootApp(Id),Op("Nil",[])])])])))]))))]),Call(SVar("concat"),[])))),SDef("import-config-file",[DefaultVarDec("file")],Where(Seq(Call(SVar("file"),[]),Seq(Call(SVar("if-verbose2"),[Call(SVar("debug"),[Build(Str("importing: "))])]),Seq(Call(SVar("ReadFromFile"),[]),BA(Call(SVar("table-putlist"),[]),Op("",[Str("config"),RootApp(Id)]))))))),SDef("import-config-files",[DefaultVarDec("files")],Where(Seq(Call(SVar("files"),[]),Call(SVar("map"),[Seq(Call(SVar("if-verbose2"),[Call(SVar("debug"),[Build(Str("importing: "))])]),Seq(Call(SVar("ReadFromFile"),[]),BA(Call(SVar("table-putlist"),[]),Op("",[Str("config"),RootApp(Id)]))))])))),SDef("export-config",[],BA(Call(SVar("WriteToTextFile"),[]),Op("",[RootApp(Id),App(Call(SVar("table-getlist"),[]),Str("config"))]))),SDef("merge-configs",[],Id),SDef("set-config",[],Seq(Match(Op("",[Var("key"),Var("val")])),BA(Call(SVar("table-put"),[]),Op("",[Str("config"),Var("key"),Var("val")])))),SDef("rm-config",[],Seq(Match(Var("key")),BA(Call(SVar("table-remove"),[]),Op("",[Str("config"),Var("key")])))),SDef("toggle-config",[],Seq(Match(Op("",[Var("key"),Var("val")])),LChoice(Seq(BA(Call(SVar("get-config"),[]),Var("key")),BA(Call(SVar("table-remove"),[]),Op("",[Str("config"),Var("key")]))),BA(Call(SVar("set-config"),[]),Op("",[Var("key"),Var("val")]))))),SDef("extend-config",[],Seq(Match(Op("",[Var("key"),Var("val")])),BA(Call(SVar("table-put"),[]),Op("",[Str("config"),Var("key"),App(Call(SVar("conc"),[]),Op("",[Var("val"),App(LChoice(Call(SVar("get-config"),[]),Build(Op("Nil",[]))),Var("key"))]))])))),SDef("post-extend-config",[],Seq(Match(Op("",[Var("key"),Var("val")])),BA(Call(SVar("table-put"),[]),Op("",[Str("config"),Var("key"),App(Call(SVar("conc"),[]),Op("",[App(LChoice(Call(SVar("get-config"),[]),Build(Op("Nil",[]))),Var("key")),Var("val")]))])))),SDef("get-config",[],Seq(Match(Var("key")),BA(Seq(Call(SVar("table-get"),[]),Call(SVar("try"),[Seq(Call(SVar("eval-config"),[]),Where(BA(Call(SVar("table-put"),[]),Op("",[Str("config"),Var("key"),RootApp(Id)]))))])),Op("",[Str("config"),Var("key")])))),SDef("get-configs",[DefaultVarDec("pred")],Seq(BA(Call(SVar("table-getlist"),[]),Str("config")),Call(SVar("filter"),[Seq(Call(SVar(""),[Call(SVar("pred"),[]),Id]),Call(SVar("Snd"),[]))]))),SDef("get-config-keys",[DefaultVarDec("pred")],Seq(BA(Call(SVar("table-getlist"),[]),Str("config")),Call(SVar("filter"),[Seq(Call(SVar(""),[Call(SVar("pred"),[]),Id]),Call(SVar("Fst"),[]))]))),RDef("eval-config",[],Rule(Op("Prefix",[Var("x"),Var("y")]),App(Call(SVar("conc-strings"),[]),Op("",[App(Call(SVar("eval-config"),[]),Var("x")),App(Call(SVar("eval-config"),[]),Var("y"))])),Id)),RDef("eval-config",[],Rule(Op("Var",[Var("x")]),App(LChoice(Call(SVar("get-config"),[]),Seq(Call(SVar("debug"),[Build(Str("No configuration for variable: "))]),Fail)),Var("x")),Id)),RDef("eval-config",[],Rule(Op("Path",[Var("x")]),Var("x"),Id)),SDef("eval-config",[],Call(SVar("map"),[Call(SVar("try"),[Call(SVar("eval-config"),[])])])),SDef("eval-config",[],Call(SVar("is-string"),[]))])])