module char-io
imports io

/**
 * character based output
 */
strategies

  // <printascii> (file, [i1, ..., in])
  // Prints integers ij as characters to file (using ASCII encoding).

  printascii = 
    ?(name, strs); where(prim("SSL_printascii", name, strs))

/**
 * character based input
 */
strategies

  // <getchar> file => Int
  // 
  // Reads the next character from file. 
  // The file should have been opened; a warning is issued if this is not the case
  // Fails if EOF is reached.
  // Returns the ascii code of the character.

  getchar = 
      dissuader(!"getchar; use fgetc");
    ?file; prim("SSL_getchar", file)

  // <readline> file => List(Int)
  // 
  // Returns the next line in file.
  // Returns a list of ascii codes.
  // Line is ended by newline or EOF.

  readline = ?file;
    rec x(![<getchar; not(10)> file | <x>()] <+ ![])

  /**
   * Reads all characters until EOF.
   *
   * :: Stream -> String
   */
  read-text-from-stream = 
      ?stream
    ; rec x(![<fgetc> stream | <x> ()] <+ ![])
    ; implode-string


  /**
   * Reads the contents of a textfile.
   *
   * :: String -> String
   */
  read-text-file =
    ?file
    ; <fopen> (file,"r") => stream
    ; read-text-from-stream
    ; where(<fclose> stream)

/**
 * Copyright (C) 1998-2003 Eelco Visser <visser@acm.org>
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA.
 */