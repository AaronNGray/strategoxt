/**
 * Character based in-/output.
 */
module char-io
imports io

/**
 * character based output
 */
strategies

 /**
  * Prints integers ij as characters to file (using ASCII encoding).
  * 
  * E.g. <printascii> (file, [i1, ..., in])
  */
  printascii = 
    ?(name, strs); where(prim("SSL_printascii", name, strs))

/**
 * character based input
 */
strategies

 /**
  * Reads the next character from file. 
  * 
  * The file should have been opened; a warning is issued if this is not the case
  * Fails if EOF is reached. Returns the ascii code of the character.
  *
  * E.g. <getchar> file => Int
  */
  getchar = 
      dissuader(!"getchar; use fgetc");
    ?file; prim("SSL_getchar", file)

 /**
  * Returns the next line in file, a list of ascii codes.
  * Line is ended by newline or EOF.
  * 
  * E.g. <readline> file => List(Int)
  */
  readline = ?file;
    rec x(![<getchar; not(10)> file | <x>()] <+ ![])

  /**
   * Reads all characters until EOF.
   *
   * @type Stream -> String
   */
  read-text-from-stream = 
      ?stream
    ; rec x(![<fgetc> stream | <x> ()] <+ ![])
    ; implode-string


  /**
   * Reads the contents of a textfile.
   *
   * @type String -> String
   */
  read-text-file =
    ?file
    ; <fopen> (file,"r") => stream
    ; read-text-from-stream
    ; where(<fclose> stream)

