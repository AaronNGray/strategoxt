Specification([Imports(["list-set","sunit"]),Strategies([SDef("main",[],Call(SVar("test-suite"),[Build(Str("list-set-test")),Seq(Call(SVar("test1"),[]),Seq(Call(SVar("test2"),[]),Seq(Call(SVar("test3"),[]),Seq(Call(SVar("test4"),[]),Seq(Call(SVar("test5"),[]),Seq(Call(SVar("test6"),[]),Seq(Call(SVar("test7"),[]),Seq(Call(SVar("test8"),[]),Seq(Call(SVar("test9"),[]),Call(SVar("test10"),[]))))))))))])),SDef("test1",[],Call(SVar("apply-test"),[Build(Str("test1")),Call(SVar("union"),[]),Build(Op("",[Op("Cons",[Str("a"),Op("Cons",[Str("b"),Op("Nil",[])])]),Op("Cons",[Str("c"),Op("Cons",[Str("d"),Op("Nil",[])])])])),Build(Op("Cons",[Str("a"),Op("Cons",[Str("b"),Op("Cons",[Str("c"),Op("Cons",[Str("d"),Op("Nil",[])])])])]))])),SDef("test2",[],Call(SVar("apply-test"),[Build(Str("test2")),Call(SVar("union"),[]),Build(Op("",[Op("Cons",[Str("a"),Op("Cons",[Str("b"),Op("Nil",[])])]),Op("Cons",[Str("b"),Op("Cons",[Str("d"),Op("Nil",[])])])])),Build(Op("Cons",[Str("a"),Op("Cons",[Str("b"),Op("Cons",[Str("d"),Op("Nil",[])])])]))])),SDef("test3",[],Call(SVar("apply-test"),[Build(Str("test3")),Call(SVar("diff"),[]),Build(Op("",[Op("Cons",[Str("a"),Op("Cons",[Str("b"),Op("Nil",[])])]),Op("Cons",[Str("c"),Op("Cons",[Str("d"),Op("Nil",[])])])])),Build(Op("Cons",[Str("a"),Op("Cons",[Str("b"),Op("Nil",[])])]))])),SDef("test4",[],Seq(Call(SVar("apply-test"),[Build(Str("test4a")),Call(SVar("diff"),[]),Build(Op("",[Op("Cons",[Str("a"),Op("Cons",[Str("b"),Op("Nil",[])])]),Op("Cons",[Str("b"),Op("Cons",[Str("d"),Op("Nil",[])])])])),Build(Op("Cons",[Str("a"),Op("Nil",[])]))]),Call(SVar("apply-test"),[Build(Str("test4b")),Call(SVar("isect"),[]),Build(Op("",[Op("Cons",[Str("a"),Op("Cons",[Str("b"),Op("Nil",[])])]),Op("Cons",[Str("b"),Op("Cons",[Str("d"),Op("Nil",[])])])])),Build(Op("Cons",[Str("b"),Op("Nil",[])]))])))]),Signature([Constructors([OpDecl("F",FunType([ConstType(Var("A")),ConstType(Var("A"))],ConstType(Var("A")))),OpDecl("G",FunType([ConstType(Var("A")),ConstType(Var("A"))],ConstType(Var("A")))),OpDecl("H",FunType([ConstType(Var("A")),ConstType(Var("A"))],ConstType(Var("A")))),OpDecl("I",FunType([ConstType(Var("A"))],ConstType(Var("A")))),OpDecl("A",ConstType(Var("A"))),OpDecl("B",ConstType(Var("A"))),OpDecl("C",ConstType(Var("A")))])]),Strategies([SDef("test5",[],Call(SVar("apply-test"),[Build(Str("test5")),Call(SVar("collect-split"),[LRule(Rule(Op("H",[Var("x"),Var("y")]),Op("I",[Var("x")]),Id)),LRule(Rule(Op("H",[Var("x"),Var("y")]),Op("Cons",[Op("H",[Var("x"),Var("y")]),Op("Nil",[])]),Id))]),Build(Op("F",[Op("G",[Var("A"),Op("H",[Var("A"),Var("B")])]),Op("H",[Var("B"),Var("C")])])),Build(Op("",[Op("F",[Op("G",[Var("A"),Op("I",[Var("A")])]),Op("I",[Var("B")])]),Op("Cons",[Op("H",[Var("A"),Var("B")]),Op("Cons",[Op("H",[Var("B"),Var("C")]),Op("Nil",[])])])]))])),SDef("test6",[],Call(SVar("apply-test"),[Build(Str("test6")),Call(SVar("collect-split"),[LRule(Rule(Op("H",[Var("x"),Var("y")]),Op("I",[Var("x")]),Id)),LRule(Rule(Op("H",[Var("x"),Var("y")]),Op("Cons",[Op("H",[Var("x"),Var("y")]),Op("Nil",[])]),Id))]),Build(Op("F",[Op("G",[Str("a"),Op("H",[Var("A"),Real(3.000000000000000e+00)])]),Op("H",[Int(1),Var("C")])])),Build(Op("",[Op("F",[Op("G",[Str("a"),Op("I",[Var("A")])]),Op("I",[Int(1)])]),Op("Cons",[Op("H",[Var("A"),Real(3.000000000000000e+00)]),Op("Cons",[Op("H",[Int(1),Var("C")]),Op("Nil",[])])])]))])),SDef("test7",[],Seq(Call(SVar("apply-test"),[Build(Str("test7a")),Call(SVar("occurrences"),[Match(Var("A"))]),Build(Op("F",[Op("G",[Var("A"),Op("H",[Var("A"),Real(3.000000000000000e+00)])]),Op("H",[Int(1),Var("C")])])),Build(Int(2))]),Call(SVar("apply-test"),[Build(Str("test7b")),Call(SVar("occurrences"),[Match(Op("H",[Wld,Wld]))]),Build(Op("F",[Op("G",[Var("A"),Op("H",[Var("A"),Op("H",[Var("A"),Var("A")])])]),Op("H",[Int(1),Var("C")])])),Build(Int(3))]))),SDef("test8",[],Seq(Call(SVar("apply-test"),[Build(Str("test8a")),Call(SVar("node-size"),[]),Build(Op("F",[Op("G",[Var("A"),Op("H",[Var("A"),Real(3.000000000000000e+00)])]),Op("H",[Int(1),Var("C")])])),Build(Int(2))]),Call(SVar("apply-test"),[Build(Str("test8b")),Call(SVar("term-size"),[]),Build(Op("F",[Op("G",[Var("A"),Op("H",[Var("A"),Real(3.000000000000000e+00)])]),Op("H",[Int(1),Var("C")])])),Build(Int(9))]))),SDef("test9",[],Seq(Call(SVar("apply-test"),[Build(Str("test9a")),Call(SVar("collect-om"),[Call(SVar("G"),[Id,Id])]),Build(Op("F",[Op("G",[Var("A"),Op("G",[Var("A"),Var("B")])]),Op("G",[Var("B"),Var("C")])])),Build(Op("Cons",[Op("G",[Var("A"),Op("G",[Var("A"),Var("B")])]),Op("Cons",[Op("G",[Var("B"),Var("C")]),Op("Nil",[])])]))]),Call(SVar("apply-test"),[Build(Str("test9b")),Call(SVar("collect-all"),[Call(SVar("G"),[Id,Id])]),Build(Op("F",[Op("G",[Var("A"),Op("G",[Var("A"),Var("B")])]),Op("G",[Var("B"),Var("C")])])),Build(Op("Cons",[Op("G",[Var("A"),Op("G",[Var("A"),Var("B")])]),Op("Cons",[Op("G",[Var("A"),Var("B")]),Op("Cons",[Op("G",[Var("B"),Var("C")]),Op("Nil",[])])])]))]))),SDef("test10",[],Seq(Call(SVar("apply-test"),[Build(Str("test10a")),Call(SVar("crush"),[Id,Build(Op("Cons",[RootApp(Call(SVar("Fst"),[])),RootApp(Call(SVar("Snd"),[]))]))]),Build(Op("F",[Op("G",[Var("A"),Op("G",[Var("A"),Var("B")])]),Op("G",[Var("B"),Var("C")])])),Build(Op("Cons",[Op("G",[Var("A"),Op("G",[Var("A"),Var("B")])]),Op("Cons",[Op("G",[Var("B"),Var("C")]),Op("Nil",[])])]))]),Call(SVar("apply-test"),[Build(Str("test10b")),Rec("x",Call(SVar("crush"),[Id,Build(Op("Cons",[RootApp(Call(SVar("Fst"),[])),RootApp(Call(SVar("Snd"),[]))])),Call(SVar("x"),[])])),Build(Op("F",[Op("G",[Var("A"),Op("G",[Var("A"),Var("B")])]),Op("G",[Var("B"),Var("C")])])),Build(Op("Cons",[Op("Cons",[Op("Nil",[]),Op("Cons",[Op("Cons",[Op("Nil",[]),Op("Cons",[Op("Nil",[]),Op("Nil",[])])]),Op("Nil",[])])]),Op("Cons",[Op("Cons",[Op("Nil",[]),Op("Cons",[Op("Nil",[]),Op("Nil",[])])]),Op("Nil",[])])]))])))])])