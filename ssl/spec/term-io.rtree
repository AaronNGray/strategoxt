Specification([Imports(["io","list","string","integers","conditional"]),Strategies([SDef("ReadFromFile",[],Seq(LChoice(BA(Call(SVar("open-stream"),[]),Op("",[RootApp(Id),Str("r")])),Seq(Call(SVar("debug"),[Build(Str("** WARNING: Cannot open file: "))]),Fail)),Seq(Where(AM(Call(SVar("read-from-stream"),[]),Var("trm"))),Seq(Call(SVar("fclose"),[]),Build(Var("trm")))))),SDef("WriteToBinaryFile",[],Call(SVar("WriteToFile"),[Call(SVar("write-in-baf-to-stream"),[])])),SDef("WriteToTextFile",[],Call(SVar("WriteToFile"),[Seq(Call(SVar("write-in-text-to-stream"),[]),BA(Call(SVar("fputc"),[]),Op("",[Int(10),RootApp(Id)])))])),SDef("WriteToFile",[DefaultVarDec("writer")],Seq(Match(Op("",[RootApp(Id),Var("trm")])),Seq(BA(Call(SVar("open-stream"),[]),Op("",[RootApp(Id),Str("w")])),Seq(BA(Call(SVar("writer"),[]),Op("",[RootApp(Id),Var("trm")])),Seq(Call(SVar("fclose"),[]),Build(Var("trm"))))))),SDef("open",[DefaultVarDec("file")],Seq(Call(SVar("file"),[]),Call(SVar("ReadFromFile"),[]))),SDef("save",[DefaultVarDec("file")],BA(Call(SVar("WriteToTextFile"),[]),Op("",[RootApp(Call(SVar("file"),[])),RootApp(Id)])))]),Strategies([SDef("write-to-stream",[],Call(SVar("write-in-baf-to-stream"),[])),SDef("write-in-baf-to-stream",[],Seq(Match(Op("",[Op("Stream",[Var("stream")]),Var("term")])),Seq(Prim("SSL_write_term_to_stream_baf",[Var("stream"),Var("term")]),Build(Op("Stream",[RootApp(Id)]))))),SDef("write-in-taf-to-stream",[],Seq(Match(Op("",[Op("Stream",[Var("stream")]),Var("term")])),Seq(Prim("SSL_write_term_to_stream_taf",[Var("stream"),Var("term")]),Build(Op("Stream",[RootApp(Id)]))))),SDef("write-in-text-to-stream",[],Seq(Match(Op("",[Op("Stream",[Var("stream")]),Var("term")])),Seq(Prim("SSL_write_term_to_stream_text",[Var("stream"),Var("term")]),Build(Op("Stream",[RootApp(Id)]))))),SDef("read-from-stream",[],Seq(Match(Op("Stream",[Var("stream")])),Prim("SSL_read_term_from_stream",[Var("stream")])))]),Strategies([SDef("fprint",[],Seq(Match(Op("",[Var("stream"),RootApp(Id)])),Seq(Call(SVar("map"),[Where(GuardedLChoice(Call(SVar("is-string"),[]),BA(Call(SVar("fputs"),[]),Op("",[RootApp(Id),Var("stream")])),BA(Call(SVar("write-in-text-to-stream"),[]),Op("",[Var("stream"),RootApp(Id)]))))]),Build(Var("stream"))))),SDef("fprintnl",[],Seq(Call(SVar("fprint"),[]),BA(Call(SVar("fputc"),[]),Op("",[Int(10),RootApp(Id)])))),SDef("print",[],Seq(Match(Op("",[Var("name"),Var("strs")])),Where(Prim("SSL_print",[Var("name"),Var("strs")])))),SDef("printnl",[],Seq(Match(Op("",[Var("name"),Var("strs")])),Where(Prim("SSL_printnl",[Var("name"),Var("strs")])))),SDef("print-stack",[],Call(SVar("obsolete"),[Build(Str("print-stack; use debug or gdb"))]))]),Strategies([SDef("print-strings-nl",[DefaultVarDec("out")],Where(BA(Call(SVar("printnl"),[]),Op("",[RootApp(Call(SVar("out"),[])),RootApp(Id)]))))]),Strategies([SDef("debug",[],Where(BA(Call(SVar("printnl"),[]),Op("",[Var("stderr"),Op("Cons",[RootApp(Id),Op("Nil",[])])])))),SDef("debug",[DefaultVarDec("msg")],Where(BA(Call(SVar("printnl"),[]),Op("",[Var("stderr"),Op("Cons",[RootApp(Call(SVar("msg"),[])),Op("Cons",[RootApp(Id),Op("Nil",[])])])])))),SDef("debug-depth",[],Call(SVar("debug-depth"),[Build(Int(4)),Build(Str(""))])),SDef("debug-depth",[DefaultVarDec("depth")],Call(SVar("debug-depth"),[Call(SVar("depth"),[]),Build(Str(""))])),SDef("debug-depth",[DefaultVarDec("depth"),DefaultVarDec("s")],Where(Seq(Call(SVar("at-depth"),[Call(SVar("depth"),[]),Build(Str("..."))]),Call(SVar("debug"),[Call(SVar("s"),[])])))),SDef("say",[DefaultVarDec("msg")],Where(Seq(Call(SVar("msg"),[]),Call(SVar("debug"),[])))),SDef("trace",[DefaultVarDec("msg"),DefaultVarDec("s")],Seq(Call(SVar("debug"),[Call(SVar("msg"),[])]),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("debug"),[Build(Str("succeeded: "))])),Call(SVar("debug"),[Build(Str("failed: "))])))),SDef("error",[],Where(BA(Call(SVar("printnl"),[]),Op("",[Var("stderr"),RootApp(Id)])))),SDef("fatal-error",[],Where(Seq(Call(SVar("error"),[]),BA(Call(SVar("exit"),[]),Int(1))))),SDef("giving-up",[],BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("giving-up"),Op("Nil",[])]))),SDef("obsolete",[DefaultVarDec("msg")],Where(Seq(Call(SVar("msg"),[]),Call(SVar("debug"),[Build(Str("obsolete library strategy: "))])))),SDef("dissuader",[DefaultVarDec("msg")],Where(Call(SVar("if-verbose2"),[Seq(Call(SVar("msg"),[]),Call(SVar("debug"),[Build(Str("dissuasive library strategy: "))]))]))),SDef("Assert",[DefaultVarDec("s"),DefaultVarDec("msg")],LChoice(Test(Call(SVar("s"),[])),Call(SVar("debug"),[Call(SVar("msg"),[])]))),SDef("risky",[DefaultVarDec("msg"),DefaultVarDec("s")],Call(SVar("restore"),[Call(SVar("s"),[]),Call(SVar("debug"),[Call(SVar("msg"),[])])]))]),Strategies([SDef("echo",[],Where(BA(Call(SVar("printnl"),[]),Op("",[Var("stdout"),RootApp(LChoice(Call(SVar("is-list"),[]),Build(Op("Cons",[RootApp(Id),Op("Nil",[])]))))])))),SDef("echo",[DefaultVarDec("msg")],Where(BA(Call(SVar("printnl"),[]),Op("",[Var("stdout"),Op("Cons",[RootApp(Call(SVar("msg"),[])),Op("Cons",[RootApp(Id),Op("Nil",[])])])])))),SDef("printchar",[],Where(BA(Call(SVar("printascii"),[]),Op("",[Var("stdout"),Op("Cons",[RootApp(Id),Op("Nil",[])])])))),SDef("printstring",[],Where(BA(Call(SVar("print"),[]),Op("",[Var("stdout"),Op("Cons",[RootApp(Id),Op("Nil",[])])])))),SDef("debug-stdout",[DefaultVarDec("msg")],Seq(Call(SVar("obsolete"),[Build(Str("debug-stdout; use echo"))]),Call(SVar("echo"),[Call(SVar("msg"),[])])))]),Strategies([SDef("stdio",[DefaultVarDec("s")],LChoice(Seq(BA(Call(SVar("ReadFromFile"),[]),Op("stdin",[])),Seq(Call(SVar("s"),[]),BA(Call(SVar("WriteToTextFile"),[]),Op("",[Op("stdout",[]),RootApp(Id)])))),BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("** rewriting failed"),Op("Nil",[])]))))]),Strategies([SDef("stdioO",[DefaultVarDec("s")],LChoice(Seq(BA(Call(SVar("s"),[]),Op("",[RootApp(Id),App(Call(SVar("ReadFromFile"),[]),Op("stdin",[]))])),BA(Call(SVar("WriteToTextFile"),[]),Op("",[Op("stdout",[]),RootApp(Id)]))),BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("** rewriting failed"),Op("Nil",[])]))))])])
