Specification([Imports(["abox"]),Overlays([Overlay("EmptyBox",[],Op("H",[Op("Nil",[]),Op("Nil",[])])),Overlay("H0",["xs"],Op("H",[Op("Cons",[Op("SOpt",[Op("HS",[]),Str("0")]),Op("Nil",[])]),Var("xs")])),Overlay("H1",["xs"],Op("H",[Op("Nil",[]),Var("xs")])),Overlay("H2",["xs"],Op("H",[Op("Cons",[Op("SOpt",[Op("HS",[]),Str("2")]),Op("Nil",[])]),Var("xs")])),Overlay("V0",["xs"],Op("V",[Op("Cons",[Op("SOpt",[Op("VS",[]),Str("0")]),Op("Nil",[])]),Var("xs")])),Overlay("V1",["xs"],Op("V",[Op("Cons",[Op("SOpt",[Op("VS",[]),Str("1")]),Op("Nil",[])]),Var("xs")])),Overlay("HV1",["xs"],Op("HV",[Op("Nil",[]),Var("xs")])),Overlay("Keyword",["x"],Op("FBOX",[Op("KW",[]),Var("x")])),Overlay("Parens",["x"],Op("H0",[Op("Cons",[Op("S",[Str("(")]),Op("Cons",[Var("x"),Op("Cons",[Op("S",[Str(")")]),Op("Nil",[])])])])])),Overlay("Indent",["x"],Op("H0",[Op("Cons",[Op("S",[Str("  ")]),Op("Cons",[Var("x"),Op("Nil",[])])])]))]),Rules([RDef("MkS",[],Rule(Var("x"),Op("S",[Var("x")]),Id)),RDef("MkParens",[],Rule(Var("x"),Op("Parens",[Var("x")]),Id))]),Strategies([SDef("sep-list",[DefaultVarDec("s1"),DefaultVarDec("s2")],Seq(Call(SVar("map"),[Call(SVar("s1"),[])]),Call(SVar("separate-by"),[Build(Op("S",[App(Call(SVar("s2"),[]),Op("",[]))]))]))),SDef("hpref-sep-list",[DefaultVarDec("s1"),DefaultVarDec("s2"),DefaultVarDec("s3")],Seq(Call(SVar("map"),[Call(SVar("s1"),[])]),Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[LRule(Rule(Var("x"),Op("H1",[Op("Cons",[App(Call(SVar("s2"),[]),Op("",[])),Op("Cons",[Var("x"),Op("Nil",[])])])]),Id)),Call(SVar("hpref"),[Call(SVar("s3"),[])])])))),SDef("hpref",[DefaultVarDec("s")],Call(SVar("map"),[LRule(Rule(Var("x"),Op("H1",[Op("Cons",[App(Call(SVar("s"),[]),Op("",[])),Op("Cons",[Var("x"),Op("Nil",[])])])]),Id))])),SDef("hpost-sep-list",[DefaultVarDec("s1"),DefaultVarDec("s2")],Rec("y",Choice(Call(SVar("Nil"),[]),LChoice(Call(SVar("Cons"),[Call(SVar("s1"),[]),Call(SVar("Nil"),[])]),Call(SVar("Cons"),[LRule(Rule(Var("x"),Op("H0",[Op("Cons",[App(Call(SVar("s1"),[]),Var("x")),Op("Cons",[App(Call(SVar("s2"),[]),Op("",[])),Op("Nil",[])])])]),Id)),Call(SVar("y"),[])]))))),SDef("semicolons",[],Call(SVar("hpost-sep-list"),[Id,Build(Op("S",[Str(";")]))])),SDef("presemicolons",[DefaultVarDec("s")],Call(SVar("hpref-sep-list"),[Id,Call(SVar("s"),[]),Build(Op("S",[Str(";")]))])),SDef("prebars",[DefaultVarDec("s")],Call(SVar("hpref-sep-list"),[Id,Call(SVar("s"),[]),Build(Op("S",[Str("|")]))])),SDef("commas",[],Call(SVar("sep-list"),[Id,Build(Str(","))])),SDef("post-commas",[],Call(SVar("hpost-sep-list"),[Id,Build(Op("S",[Str(",")]))]))]),Rules([RDef("HPost",[DefaultVarDec("s")],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("Cons",[Op("H0",[Op("Cons",[Var("x"),Op("Cons",[App(Call(SVar("s"),[]),Op("",[])),Op("Nil",[])])])]),Var("xs")]),Id)),RDef("Quote",[],Rule(Var("x"),Op("H0",[Op("Cons",[Op("S",[Var("quote")]),Op("Cons",[Var("x"),Op("Cons",[Op("S",[Var("quote")]),Op("Nil",[])])])])]),AM(BA(Call(SVar("implode-string"),[]),Op("Cons",[Int(34),Op("Nil",[])])),Var("quote")))),RDef("Quote'",[],Rule(Var("x"),Op("H0",[Op("Cons",[Op("S",[Var("quote")]),Op("Cons",[Var("x"),Op("Cons",[Op("S",[Var("quote")]),Op("Nil",[])])])])]),AM(BA(Call(SVar("implode-string"),[]),Op("Cons",[Int(92),Op("Cons",[Int(34),Op("Nil",[])])])),Var("quote")))),RDef("CommaList",[DefaultVarDec("s")],Rule(Var("x"),Op("H0",[App(Call(SVar("sep-list"),[Call(SVar("s"),[]),Build(Str(", "))]),Var("x"))]),Id)),RDef("MkParens",[],Rule(Var("x"),Op("Parens",[Var("x")]),Id))])])