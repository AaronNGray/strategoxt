Specification([Imports(["lib"]),Signature([Constructors([OpDecl("TNil",ConstType(Op("Tuple",[]))),OpDecl("TCons",FunType([ConstType(Var("a")),ConstType(Op("Tuple",[Var("as")]))],ConstType(Op("Tuple",[Op("Cons",[Var("a"),Var("as")])]))))])]),Strategies([SDef("main",[],Seq(Call(SVar("Tl"),[]),Seq(Call(SVar("map"),[Call(SVar("try"),[Call(SVar("migrate-file"),[])])]),BA(Call(SVar("exit"),[]),Int(0))))),SDef("migrate-file",[],Seq(Build(Op("",[RootApp(Call(SVar("debug"),[Build(Str("processing: "))])),RootApp(LChoice(Seq(Call(SVar("ReadFromFile"),[]),Call(SVar("migrate-term"),[])),Seq(Call(SVar("debug"),[Build(Str("Warning: not an ATerm: "))]),Fail)))])),Call(SVar("WriteToTextFile"),[]))),SDef("migrate-term",[],Call(SVar("bottomup"),[Call(SVar("try"),[Choice(Call(SVar("TNtoTuple"),[]),Call(SVar("CNtoList"),[]))])]))]),Rules([RDef("CNtoList",[],Rule(Explode(Str("Nil"),Op("Nil",[])),Op("Nil",[]),Id)),RDef("CNtoList",[],Rule(Explode(Str("Cons"),Op("Cons",[Var("x"),Op("Cons",[Var("y"),Op("Nil",[])])])),Op("Cons",[Var("x"),Var("y")]),Id)),RDef("TNtoTuple",[],Rule(Var("TNil"),Op("",[]),Id)),RDef("TNtoTuple",[],Rule(Op("TCons",[Var("x"),Explode(Str(""),Var("xs"))]),Explode(Str(""),Op("Cons",[Var("x"),Var("xs")])),Id))])])