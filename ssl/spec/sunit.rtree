Specification([Imports(["io","exec"]),Strategies([SDef("init-record",[],Build(Op("",[Int(0),Int(0)]))),SDef("record-success",[],Call(SVar(""),[LRule(Rule(Var("x"),App(Call(SVar("add"),[]),Op("",[Var("x"),Int(1)])),Id)),Id])),SDef("record-failure",[],Call(SVar(""),[Id,LRule(Rule(Var("x"),App(Call(SVar("add"),[]),Op("",[Var("x"),Int(1)])),Id))])),SDef("check-for-failures",[],Call(SVar(""),[Id,Match(Int(0))])),SDef("report-test",[],Call(SVar(""),[Call(SVar("debug"),[Build(Str("successes: "))]),Call(SVar("debug"),[Build(Str("failures: "))])])),SDef("test-suite",[DefaultVarDec("name"),DefaultVarDec("tests")],Seq(Call(SVar("name"),[]),Seq(Call(SVar("debug"),[Build(Str("test suite: "))]),Seq(Call(SVar("init-record"),[]),Seq(Call(SVar("tests"),[]),Seq(Call(SVar("report-test"),[]),Call(SVar("check-for-failures"),[]))))))),SDef("do-test",[DefaultVarDec("nr"),DefaultVarDec("s")],Seq(Where(Seq(Call(SVar("nr"),[]),Call(SVar("debug"),[]))),LChoice(Seq(Where(Call(SVar("s"),[])),Call(SVar("record-success"),[])),Call(SVar("record-failure"),[])))),SDef("testing",[DefaultVarDec("nr"),DefaultVarDec("s")],Call(SVar("do-test"),[Call(SVar("nr"),[]),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("debug"),[Build(Str("  succeeded: "))])),Seq(Call(SVar("debug"),[Build(Str("  failed: "))]),Fail))])),SDef("apply-test",[DefaultVarDec("name"),DefaultVarDec("s"),DefaultVarDec("in"),DefaultVarDec("out")],Call(SVar("do-test"),[Call(SVar("name"),[]),Seq(LChoice(Seq(Call(SVar("in"),[]),AM(Call(SVar("s"),[]),Var("tmp"))),Seq(BA(Call(SVar("debug"),[]),Str("  failed")),Fail)),Seq(AM(Call(SVar("out"),[]),Var("tmp'")),LChoice(AM(Build(Var("tmp'")),Var("tmp")),Seq(Seq(BA(Call(SVar("debug"),[Build(Str("  result not equal: "))]),Var("tmp")),BA(Call(SVar("debug"),[Build(Str("  expected: "))]),Var("tmp'"))),Fail))))])),SDef("apply-test",[DefaultVarDec("name"),DefaultVarDec("s"),DefaultVarDec("in")],Call(SVar("do-test"),[Call(SVar("name"),[]),LChoice(Seq(Call(SVar("in"),[]),AM(Call(SVar("s"),[]),Var("tmp"))),Seq(BA(Call(SVar("debug"),[]),Str("  failed")),Fail))])),SDef("apply-and-check",[DefaultVarDec("name"),DefaultVarDec("s"),DefaultVarDec("in"),DefaultVarDec("check")],Call(SVar("do-test"),[Call(SVar("name"),[]),Seq(LChoice(Seq(Call(SVar("in"),[]),AM(Call(SVar("s"),[]),Var("tmp"))),Seq(BA(Call(SVar("debug"),[]),Str("  application failed")),Fail)),LChoice(BA(Call(SVar("check"),[]),Var("tmp")),Seq(BA(Call(SVar("debug"),[Build(Str("  check failed: "))]),Var("tmp")),Fail)))])),SDef("apply-and-fail",[DefaultVarDec("name"),DefaultVarDec("s"),DefaultVarDec("in")],Call(SVar("apply-and-fail"),[Call(SVar("name"),[]),Call(SVar("s"),[]),Call(SVar("in"),[]),Build(Op("",[]))])),SDef("apply-and-fail",[DefaultVarDec("name"),DefaultVarDec("s"),DefaultVarDec("in"),DefaultVarDec("out")],Call(SVar("do-test"),[Call(SVar("name"),[]),LChoice(Seq(Call(SVar("in"),[]),Not(Call(SVar("s"),[]))),Seq(BA(Call(SVar("debug"),[]),Str("  succeeded (should fail)")),Fail))])),SDef("apply-and-show",[DefaultVarDec("name"),DefaultVarDec("s"),DefaultVarDec("in")],Call(SVar("do-test"),[Call(SVar("name"),[]),Seq(LChoice(Seq(Call(SVar("in"),[]),AM(Call(SVar("s"),[]),Var("tmp"))),Seq(BA(Call(SVar("debug"),[]),Str("  failed")),Fail)),BA(Call(SVar("debug"),[]),Op("Cons",[Str("  succeeded; result: "),Op("Cons",[Var("tmp"),Op("Nil",[])])])))]))])])