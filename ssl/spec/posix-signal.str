module posix-signal

/**
 * Information in this module is taken from the GNU core-utils 
 * manual, process control section.
 *
 *   http://www.gnu.org/manual/coreutils-4.5.4/coreutils.html
 */

signature
  constructors
    Signal:        String * Int * String -> Signal
    UnknownSignal: Int -> Signal
    
strategies    

  // :: Int -> Signal
  signal-from-number = ?i;
    ( <fetch-elem(?Signal(_, i, _))> AllSignals
    <+ !UnknownSignal(i))
    
  // :: Signal -> Int    
  number-from-signal :
    Signal(_, i, _) -> i   
    
  number-from-signal :    
    UnknownSignal(i) -> i  
    
  // :: Signal -> String
  signal-to-descr :
    Signal(n, i, s) -> <concat-strings> [n, " (", <int-to-string> i, "): ", s]
    
  signal-to-descr :
    UnknownSignal(i) -> <concat-strings> ["Unknown signal (", <int-to-string> i, ")"]
    
overlays

  AllSignals = 
    [ HUP(),  INT(),  QUIT(), ABRT(), KILL(), ALRM(), TERM()
    , BUS(),  CHLD(), CONT(), FPE(),  ILL(),  PIPE(), SEGV() 
    , STOP(), TSTP(), TTIN(), TTOU(), URG(),  USR1(), USR2()
    , POLL(), PROF(), SYS(), TRAP(), VTALRM(), XCPU(), XFSZ()
    ]

  /**
   * POSIX
   */
  HUP  = Signal("HUP",   1, "Hangup")
  INT  = Signal("INT",   2, "Terminal interrupt")
  QUIT = Signal("QUIT",  3, "Terminal quit")
  ABRT = Signal("ABRT",  6, "Process abort")
  KILL = Signal("KILL",  9, "Kill")
  ALRM = Signal("ALRM", 14, "Alarm Clock")
  TERM = Signal("TERM", 15, "Termination")
  
  /**
   * POSIX 1003.1-2001
   */
  BUS  = Signal("BUS",   7, "Access to an undefined portion of a memory object")
  CHLD = Signal("CHLD", 17, "Child process terminated, stopped, or continued")
  CONT = Signal("CONT", 18, "Continue executing, if stopped") 
  FPE  = Signal("FPE",   8, "Erroneous arithmetic operation")
  ILL  = Signal("ILL",   4, "Illegal Instruction")
  PIPE = Signal("PIPE", 13, "Write on a pipe with no one to read it")
  SEGV = Signal("SEGV", 11, "Invalid memory reference")
  STOP = Signal("STOP", 19, "Stop executing")
  TSTP = Signal("TSTP", 20, "Terminal stop")
  TTIN = Signal("TTIN", 21, "Background process attempting read")
  TTOU = Signal("TTOU", 22, "Background process attempting write")
  URG  = Signal("URG",  23, "High bandwidth data is available at a socket")
  USR1 = Signal("USR1", 10, "User-defined signal 1")
  USR2 = Signal("USR2", 12, "User-defined signal 2")
  
  /**
   * POSIX 1003.1-2001, XSI extension
   */
  POLL   = Signal("POLL",    29, "Pollable event")
  PROF   = Signal("PROF",    27, "Profiling timer expired")
  SYS    = Signal("SYS",     31, "Bad system call")
  TRAP   = Signal("TRAP",     5, "Trace/breakpoint trap")
  VTALRM = Signal("VTALRM",  26, "Virtual timer expired")
  XCPU   = Signal("XCPU",    24, "CPU time limit exceeded")
  XFSZ   = Signal("XFSZ",    25, "File size limit exceeded")