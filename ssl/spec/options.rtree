Specification([Imports(["io","parse-options","config","time","verbose","keep"]),Signature([Constructors([OpDecl("Silent",ConstType(Var("Option"))),OpDecl("Verbose",FunType([ConstType(Var("Int"))],ConstType(Var("Option")))),OpDecl("Version",ConstType(Var("Option"))),OpDecl("Input",FunType([ConstType(Var("String"))],ConstType(Var("Option")))),OpDecl("Output",FunType([ConstType(Var("String"))],ConstType(Var("Option")))),OpDecl("Binary",ConstType(Var("Option"))),OpDecl("Statistics",ConstType(Var("Option"))),OpDecl("Help",ConstType(Var("Option"))),OpDecl("Runtime",FunType([ConstType(Var("Real"))],ConstType(Var("Option")))),OpDecl("DeclVersion",FunType([ConstType(Var("String"))],ConstType(Var("Option"))))])]),Strategies([SDef("option-wrap",[DefaultVarDec("opts"),DefaultVarDec("usage"),DefaultVarDec("announce"),DefaultVarDec("s")],Seq(Call(SVar("parse-options"),[Call(SVar("opts"),[])]),Seq(Call(SVar("store-options"),[]),Seq(Call(SVar("announce"),[]),LChoice(Call(SVar("need-help"),[Call(SVar("usage"),[])]),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("report-success"),[])),Call(SVar("report-failure"),[]))))))),SDef("option-wrap",[DefaultVarDec("opts"),DefaultVarDec("s")],Call(SVar("option-wrap"),[Call(SVar("opts"),[]),Call(SVar("default-usage"),[]),Id,Call(SVar("s"),[])])),SDef("iowrap",[DefaultVarDec("strat")],Call(SVar("iowrap"),[Call(SVar(""),[Id,Call(SVar("strat"),[])]),Fail])),SDef("iowrapO",[DefaultVarDec("strat"),DefaultVarDec("extra-options")],Seq(Call(SVar("obsolete"),[Build(Str("iowrapO/2: use iowrap/2"))]),Call(SVar("iowrap"),[Call(SVar("strat"),[]),Call(SVar("extra-options"),[])]))),SDef("iowrap",[DefaultVarDec("strat"),DefaultVarDec("extra-options")],Call(SVar("iowrap"),[Call(SVar("strat"),[]),Call(SVar("extra-options"),[]),Call(SVar("default-usage"),[])])),SDef("iowrap",[DefaultVarDec("strat"),DefaultVarDec("extra-options"),DefaultVarDec("usage")],Call(SVar("iowrap"),[Call(SVar("strat"),[]),Call(SVar("extra-options"),[]),Call(SVar("usage"),[]),Call(SVar("if-verbose2"),[Where(BA(Call(SVar("printnl"),[]),Op("",[Var("stderr"),Op("Cons",[App(Call(SVar("get-config"),[]),Str("program")),Op("Nil",[])])])))])])),SDef("iowrapO",[DefaultVarDec("strat"),DefaultVarDec("extra-options"),DefaultVarDec("usage")],Seq(Call(SVar("obsolete"),[Build(Str("iowrapO/3: use iowrap/3"))]),Call(SVar("iowrap"),[Call(SVar("strat"),[]),Call(SVar("extra-options"),[]),Call(SVar("usage"),[])]))),SDef("iowrap",[DefaultVarDec("strat"),DefaultVarDec("extra-options"),DefaultVarDec("usage"),DefaultVarDec("announce")],Call(SVar("option-wrap"),[LChoice(Call(SVar("extra-options"),[]),Call(SVar("io-options"),[])),Call(SVar("usage"),[]),Call(SVar("announce"),[]),Seq(Call(SVar("input-file"),[]),Seq(Call(SVar("apply-strategy"),[Call(SVar("strat"),[])]),Call(SVar("output-file"),[])))])),SDef("iowrapNoOutput",[DefaultVarDec("strat"),DefaultVarDec("extra-options")],Call(SVar("iowrapNoOutput"),[Call(SVar("strat"),[]),Call(SVar("extra-options"),[]),Call(SVar("default-usage"),[])])),SDef("iowrapNoOutput",[DefaultVarDec("strat"),DefaultVarDec("extra-options"),DefaultVarDec("usage")],Call(SVar("option-wrap"),[LChoice(Call(SVar("extra-options"),[]),Call(SVar("io-options"),[])),Call(SVar("usage"),[]),Id,Seq(Call(SVar("input-file"),[]),Call(SVar("apply-strategy"),[Call(SVar("strat"),[])]))]))]),Strategies([SDef("store-options",[],Seq(Match(Var("options")),Where(Seq(BA(Call(SVar("table-create"),[]),Str("option-table")),BA(Call(SVar("table-put"),[]),Op("",[Str("option-table"),Str("options"),Var("options")])))))),SDef("get-options",[],BA(Call(SVar("table-get"),[]),Op("",[Str("option-table"),Str("options")]))),SDef("has-option",[DefaultVarDec("s")],Test(BA(Seq(Call(SVar("s"),[]),Call(SVar("check-option"),[])),Op("",[])))),SDef("option-value",[DefaultVarDec("s"),DefaultVarDec("default")],LChoice(Seq(Call(SVar("get-options"),[]),Call(SVar("fetch-elem"),[Call(SVar("s"),[])])),Call(SVar("default"),[]))),RDef("check-option",[],Rule(Var("option"),Op("",[]),Seq(AM(Call(SVar("get-options"),[]),Var("ops")),BA(Call(SVar("is-subterm"),[]),Op("",[Var("option"),Var("ops")])))))]),Strategies([SDef("io-options",[],Choice(Call(SVar("input-option"),[]),Choice(Call(SVar("aterm-output-option"),[]),Call(SVar("general-options"),[])))),SDef("input-options",[],Choice(Call(SVar("input-option"),[]),Call(SVar("general-options"),[]))),SDef("output-options",[],Choice(Call(SVar("aterm-output-option"),[]),Call(SVar("general-options"),[]))),SDef("general-options",[],Choice(Call(SVar("verbose-option"),[]),Choice(Call(SVar("keep-option"),[]),Call(SVar("version-option"),[])))),SDef("keep-option",[],Call(SVar("ArgOption"),[Choice(Match(Str("-k")),Match(Str("--keep"))),Where(BA(Call(SVar("set-config"),[]),Op("",[Str("--keep"),RootApp(Call(SVar("string-to-int"),[]))]))),Build(Str("--keep i | -k i  Keep intermediates (default 0)"))])),SDef("version-option",[],Call(SVar("Option"),[Choice(Match(Str("-v")),Match(Str("--version"))),Seq(Where(BA(Call(SVar("set-config"),[]),Op("",[Str("-v"),Op("",[])]))),Build(Op("Version",[]))),Build(Str("-v|--version     Display prgram's version"))])),SDef("input-option",[],Call(SVar("ArgOption"),[Choice(Match(Str("-i")),Match(Str("--input"))),Seq(Where(BA(Call(SVar("set-config"),[]),Op("",[Str("-i"),RootApp(Id)]))),Build(Op("Input",[RootApp(Id)]))),Build(Str("-i f|--input f   Read input from f"))])),SDef("output-option",[],Call(SVar("ArgOption"),[Choice(Match(Str("-o")),Match(Str("--output"))),Seq(Where(BA(Call(SVar("set-config"),[]),Op("",[Str("-o"),RootApp(Id)]))),Build(Op("Output",[RootApp(Id)]))),Build(Str("-o f|--output f  Write output to f"))])),SDef("aterm-output-option",[],Choice(Call(SVar("output-option"),[]),Call(SVar("Option"),[Match(Str("-b")),Seq(Where(BA(Call(SVar("set-config"),[]),Op("",[Str("-b"),Op("",[])]))),Build(Op("Binary",[]))),Build(Str("-b               Write binary output"))]))),SDef("verbose-option",[],Choice(Call(SVar("Option"),[Choice(Match(Str("-S")),Match(Str("--silent"))),Seq(Where(BA(Call(SVar("set-config"),[]),Op("",[Str("--verbose"),Int(0)]))),Build(Op("Verbose",[Int(0)]))),Build(Str("-S|--silent      Silent execution (same as --verbose 0)"))]),Choice(Call(SVar("ArgOption"),[Match(Str("--verbose")),Seq(Where(BA(Call(SVar("set-config"),[]),Op("",[Str("--verbose"),RootApp(Call(SVar("string-to-int"),[]))]))),Build(Op("Verbose",[RootApp(Id)]))),Build(Str("--verbose i      Verbosity level i (default 1)"))]),Call(SVar("Option"),[Match(Str("-s")),Seq(Where(BA(Call(SVar("set-config"),[]),Op("",[Str("-s"),Op("",[])]))),Build(Op("Statistics",[]))),Build(Str("-s               Turn on statisctics"))])))),SDef("usage'",[],Call(SVar("obsolete"),[Build(Str("usage': use default-usage"))])),SDef("default-usage",[],Where(Seq(Call(SVar("option-defined"),[Match(Op("Program",[Var("prog")]))]),Seq(BA(Call(SVar("printnl"),[]),Op("",[Var("stderr"),Op("Cons",[Str("usage : "),Op("Cons",[Var("prog"),Op("Cons",[Str(" [-S] [-i file] [-o file] [-b] [-s] [--help|-h|-?]"),Op("Nil",[])])])])])),BA(Call(SVar("exit"),[]),Int(1)))))),SDef("need-help",[DefaultVarDec("u")],Seq(Call(SVar("option-defined"),[Choice(Call(SVar("Help"),[]),Choice(Call(SVar("Undefined"),[Id]),Call(SVar("Version"),[])))]),Call(SVar("u"),[]))),SDef("need-help",[],Call(SVar("need-help"),[Call(SVar("default-usage"),[])])),SDef("if-not-silent",[DefaultVarDec("s")],LChoice(Test(BA(Call(SVar("get-config"),[]),Str("-S"))),Call(SVar("s"),[]))),SDef("input-file'",[],Seq(Call(SVar("obsolete"),[Build(Str("input-file'; use input-file"))]),Call(SVar("input-file"),[]))),SDef("input-file",[],Seq(Where(LChoice(Call(SVar("option-defined"),[Match(Op("Input",[Var("infile")]))]),AM(Build(Var("stdin")),Var("infile")))),Call(SVar("split"),[Id,BA(Call(SVar("ReadFromFile"),[]),Var("infile"))]))),SDef("apply-strategy",[DefaultVarDec("strat")],Seq(Where(Call(SVar("dtime"),[])),Seq(Call(SVar("strat"),[]),Seq(Where(AM(Call(SVar("dtime"),[]),Var("runtime"))),LRule(Rule(Op("",[Var("options"),Var("trm")]),Op("",[Op("Cons",[Op("Runtime",[Var("runtime")]),Var("options")]),Var("trm")]),Id)))))),SDef("output-file'",[],Seq(Call(SVar("obsolete"),[Build(Str("output-file'; use output-file"))]),Call(SVar("output-file"),[]))),SDef("output-file",[],Seq(Where(Call(SVar(""),[LChoice(Call(SVar("option-defined"),[Match(Op("Output",[Var("outfile")]))]),AM(Build(Var("stdout")),Var("outfile"))),Id])),Seq(Call(SVar(""),[Id,Call(SVar("split"),[Build(Var("outfile")),Id])]),LChoice(Call(SVar(""),[Call(SVar("option-defined"),[Match(Op("Binary",[]))]),Call(SVar("WriteToBinaryFile"),[])]),Call(SVar(""),[Id,Call(SVar("WriteToTextFile"),[])]))))),SDef("report-success",[],Seq(Call(SVar("if-verbose1"),[BA(Call(SVar("printnl"),[]),Op("",[Var("stderr"),Op("Cons",[App(Call(SVar("get-config"),[]),Str("program")),Op("Cons",[Str(" ("),Op("Cons",[RootApp(Call(SVar("run-time"),[])),Op("Cons",[Str(" secs)"),Op("Nil",[])])])])])]))]),BA(Call(SVar("exit"),[]),Int(0)))),SDef("report-failure",[],Seq(BA(Call(SVar("printnl"),[]),Op("",[Var("stderr"),Op("Cons",[Str("rewriting failed"),Op("Nil",[])])])),BA(Call(SVar("exit"),[]),Int(1))))])])
