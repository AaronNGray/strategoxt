Specification([Imports(["string","list"]),Rules([RDef("GnInit",[],Rule(Op("",[Var("root"),Var("graph"),Var("nodes")]),Op("",[Op("Cons",[Var("root"),Op("Nil",[])]),Op("Cons",[Var("root"),Op("Nil",[])]),Var("graph"),Var("nodes"),Op("Nil",[])]),Id)),RDef("GnInitRoots",[],Rule(Op("",[Var("roots"),Var("graph"),Var("nodes")]),Op("",[Var("roots"),Var("roots"),Var("graph"),Var("nodes"),Op("Nil",[])]),Id)),RDef("GnNext",[DefaultVarDec("get-node"),DefaultVarDec("out-edges"),DefaultVarDec("add-node")],Rule(Op("",[Op("Cons",[Var("name"),Var("todo")]),Var("done"),Var("graph"),Var("nodes"),Var("undef")]),Op("",[App(Call(SVar("conc"),[]),Op("",[Var("todo'"),Var("todo")])),App(Call(SVar("conc"),[]),Op("",[Var("todo'"),Var("done")])),Var("graph"),App(Call(SVar("add-node"),[]),Op("",[Var("name"),Var("node"),Var("nodes")])),Var("undef")]),Seq(AM(BA(Call(SVar("get-node"),[]),Op("",[Var("name"),Var("graph")])),Var("node")),Seq(AM(BA(Call(SVar("out-edges"),[]),Var("node")),Var("names")),AM(BA(Call(SVar("diff"),[]),Op("",[Var("names"),Var("done")])),Var("todo'")))))),RDef("GnNextChangeGraph",[DefaultVarDec("get-node"),DefaultVarDec("out-edges"),DefaultVarDec("add-node")],Rule(Op("",[Op("Cons",[Var("name"),Var("todo")]),Var("done"),Var("graph"),Var("nodes"),Var("undef")]),Op("",[App(Call(SVar("conc"),[]),Op("",[Var("todo'"),Var("todo")])),App(Call(SVar("conc"),[]),Op("",[Var("todo'"),Var("done")])),Var("graph'"),App(Call(SVar("add-node"),[]),Op("",[Var("name"),Var("node"),Var("nodes")])),Var("undef")]),Seq(AM(BA(Call(SVar("get-node"),[]),Op("",[Var("name"),Var("graph")])),Op("",[Var("node"),Var("graph'")])),Seq(AM(BA(Call(SVar("out-edges"),[]),Var("node")),Var("names")),AM(BA(Call(SVar("diff"),[]),Op("",[Var("names"),Var("done")])),Var("todo'")))))),RDef("GnUndefined",[],Rule(Op("",[Op("Cons",[Var("name"),Var("todo")]),Var("done"),Var("graph"),Var("nodes"),Var("undef")]),Op("",[Var("todo"),Var("done"),Var("graph"),Var("nodes"),Op("Cons",[Var("name"),Var("undef")])]),Id)),RDef("GnExit",[],Rule(Op("",[Op("Nil",[]),Var("done"),Var("graph"),Var("nodes"),Var("undef")]),Op("",[Var("nodes"),Var("undef")]),Id))]),Strategies([SDef("graph-nodes-undef-roots",[DefaultVarDec("get-node"),DefaultVarDec("out-edges"),DefaultVarDec("add-node")],Call(SVar("for"),[Call(SVar("GnInitRoots"),[]),Call(SVar("GnExit"),[]),LChoice(Call(SVar("GnNext"),[Call(SVar("get-node"),[]),Call(SVar("out-edges"),[]),Call(SVar("add-node"),[])]),Call(SVar("GnUndefined"),[]))])),SDef("graph-nodes-undef",[DefaultVarDec("get-node"),DefaultVarDec("out-edges"),DefaultVarDec("add-node")],Call(SVar("for"),[Call(SVar("GnInit"),[]),Call(SVar("GnExit"),[]),LChoice(Call(SVar("GnNext"),[Call(SVar("get-node"),[]),Call(SVar("out-edges"),[]),Call(SVar("add-node"),[])]),Call(SVar("GnUndefined"),[]))])),SDef("graph-nodes-undef-roots-chgr",[DefaultVarDec("get-node"),DefaultVarDec("out-edges"),DefaultVarDec("add-node")],Call(SVar("for"),[Call(SVar("GnInitRoots"),[]),Call(SVar("GnExit"),[]),LChoice(Call(SVar("GnNextChangeGraph"),[Call(SVar("get-node"),[]),Call(SVar("out-edges"),[]),Call(SVar("add-node"),[])]),Call(SVar("GnUndefined"),[]))])),SDef("graph-nodes-undef-chgr",[DefaultVarDec("get-node"),DefaultVarDec("out-edges"),DefaultVarDec("add-node")],Call(SVar("for"),[Call(SVar("GnInit"),[]),Call(SVar("GnExit"),[]),LChoice(Call(SVar("GnNextChangeGraph"),[Call(SVar("get-node"),[]),Call(SVar("out-edges"),[]),Call(SVar("add-node"),[])]),Call(SVar("GnUndefined"),[]))])),SDef("graph-nodes",[DefaultVarDec("get-node"),DefaultVarDec("out-edges"),DefaultVarDec("add-node")],Seq(Call(SVar("graph-nodes-undef"),[Call(SVar("get-node"),[]),Call(SVar("out-edges"),[]),Call(SVar("add-node"),[])]),LRule(Rule(Op("",[Var("nodes"),Var("undef")]),Var("nodes"),Id)))),SDef("graph-nodes-roots",[DefaultVarDec("get-node"),DefaultVarDec("out-edges"),DefaultVarDec("add-node")],Seq(Call(SVar("graph-nodes-undef-roots"),[Call(SVar("get-node"),[]),Call(SVar("out-edges"),[]),Call(SVar("add-node"),[])]),LRule(Rule(Op("",[Var("nodes"),Var("undef")]),Var("nodes"),Id))))])])