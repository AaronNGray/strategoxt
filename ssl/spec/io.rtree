Specification([Imports(["list","string","tuple","integers","time","exec","dir","posix-file","file"]),Signature([Sorts([Sort("File",[])]),Constructors([OpDecl("stdin",ConstType(Var("File"))),OpDecl("stdout",ConstType(Var("File"))),OpDecl("stderr",ConstType(Var("File")))])]),Strategies([SDef("close-file",[],Seq(Match(Var("name")),Prim("SSL_close_file",[Var("name")]))),SDef("open-file",[],GuardedLChoice(Match(Op("",[Var("name"),Var("mode")])),Prim("SSL_open_file",[Var("name"),Var("mode")]),Seq(Call(SVar("obsolete"),[Build(Str("<open-file> file; use <open-file>(file, mode)"))]),Seq(Match(Var("name")),Prim("SSL_open_file",[Var("name"),Str("w")]))))),SDef("append-file",[],Seq(Match(Var("name")),Prim("SSL_open_file",[Var("name"),Str("a")]))),SDef("print",[],Seq(Match(Op("",[Var("name"),Var("strs")])),Where(Prim("SSL_print",[Var("name"),Var("strs")])))),SDef("printnl",[],Seq(Match(Op("",[Var("name"),Var("strs")])),Where(Prim("SSL_printnl",[Var("name"),Var("strs")])))),SDef("printascii",[],Seq(Match(Op("",[Var("name"),Var("strs")])),Where(Prim("SSL_printascii",[Var("name"),Var("strs")])))),SDef("getchar",[],Seq(Call(SVar("dissuader"),[Build(Str("getchar; use fgetc"))]),Seq(Match(Var("file")),Prim("SSL_getchar",[Var("file")])))),SDef("readline",[],Seq(Match(Var("file")),Rec("x",LChoice(Build(Op("Cons",[App(Seq(Call(SVar("getchar"),[]),Not(Match(Int(10)))),Var("file")),App(Call(SVar("x"),[]),Op("",[]))])),Build(Op("Nil",[])))))),SDef("ReadFromFile",[],LChoice(Seq(Match(Var("file")),Prim("SSL_ReadFromFile",[Var("file")])),Seq(Call(SVar("debug"),[Build(Str("** WARNING: file doesn't exist or doesn't contain a valid term: "))]),Fail))),SDef("WriteToBinaryFile",[],Seq(Match(Op("",[Var("file"),Var("t")])),Prim("SSL_WriteToBinaryFile",[Var("file"),Var("t")]))),SDef("WriteToTextFile",[],Seq(Match(Op("",[Var("file"),Var("t")])),Prim("SSL_WriteToTextFile",[Var("file"),Var("t")]))),SDef("WriteToFile",[DefaultVarDec("writer")],Seq(Match(Op("",[RootApp(Id),Var("trm")])),Seq(LChoice(Match(Op("Stream",[Wld])),BA(Call(SVar("open-stream"),[]),Op("",[RootApp(Id),Str("w")]))),Seq(BA(Call(SVar("writer"),[]),Op("",[RootApp(Id),Var("trm")])),Seq(Call(SVar("fclose"),[]),Build(Var("trm"))))))),SDef("open",[DefaultVarDec("file")],Seq(Call(SVar("file"),[]),Call(SVar("ReadFromFile"),[]))),SDef("save",[DefaultVarDec("file")],BA(Call(SVar("WriteToTextFile"),[]),Op("",[RootApp(Call(SVar("file"),[])),RootApp(Id)]))),SDef("print-stack",[],Call(SVar("obsolete"),[Build(Str("print-stack; use debug or gdb"))]))]),Strategies([SDef("debug",[],Where(BA(Call(SVar("printnl"),[]),Op("",[Var("stderr"),Op("Cons",[RootApp(Id),Op("Nil",[])])])))),SDef("debug",[DefaultVarDec("msg")],Where(BA(Call(SVar("printnl"),[]),Op("",[Var("stderr"),Op("Cons",[RootApp(Call(SVar("msg"),[])),Op("Cons",[RootApp(Id),Op("Nil",[])])])])))),SDef("debug-depth",[],Call(SVar("debug-depth"),[Build(Int(4)),Build(Str(""))])),SDef("debug-depth",[DefaultVarDec("depth")],Call(SVar("debug-depth"),[Call(SVar("depth"),[]),Build(Str(""))])),SDef("debug-depth",[DefaultVarDec("depth"),DefaultVarDec("s")],Where(Seq(Call(SVar("at-depth"),[Call(SVar("depth"),[]),Build(Str("..."))]),Call(SVar("debug"),[Call(SVar("s"),[])])))),SDef("say",[DefaultVarDec("msg")],Where(Seq(Call(SVar("msg"),[]),Call(SVar("debug"),[])))),SDef("echo",[],Where(BA(Call(SVar("printnl"),[]),Op("",[Var("stdout"),RootApp(LChoice(Call(SVar("is-list"),[]),Build(Op("Cons",[RootApp(Id),Op("Nil",[])]))))])))),SDef("echo",[DefaultVarDec("msg")],Where(BA(Call(SVar("printnl"),[]),Op("",[Var("stdout"),Op("Cons",[RootApp(Call(SVar("msg"),[])),Op("Cons",[RootApp(Id),Op("Nil",[])])])])))),SDef("debug-stdout",[DefaultVarDec("msg")],Seq(Call(SVar("obsolete"),[Build(Str("debug-stdout; use echo"))]),Where(BA(Call(SVar("printnl"),[]),Op("",[Var("stdout"),Op("Cons",[RootApp(Call(SVar("msg"),[])),Op("Cons",[RootApp(Id),Op("Nil",[])])])]))))),SDef("trace",[DefaultVarDec("msg"),DefaultVarDec("s")],Seq(Call(SVar("debug"),[Call(SVar("msg"),[])]),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("debug"),[Build(Str("succeeded: "))])),Call(SVar("debug"),[Build(Str("failed: "))])))),SDef("error",[],Where(BA(Call(SVar("printnl"),[]),Op("",[Var("stderr"),RootApp(Id)])))),SDef("fatal-error",[],Where(Seq(Call(SVar("error"),[]),BA(Call(SVar("exit"),[]),Int(1))))),SDef("giving-up",[],BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("giving-up"),Op("Nil",[])]))),SDef("printchar",[],Where(BA(Call(SVar("printascii"),[]),Op("",[Var("stdout"),Op("Cons",[RootApp(Id),Op("Nil",[])])])))),SDef("printstring",[],Where(BA(Call(SVar("print"),[]),Op("",[Var("stdout"),Op("Cons",[RootApp(Id),Op("Nil",[])])])))),SDef("print-strings-nl",[DefaultVarDec("out")],Where(BA(Call(SVar("printnl"),[]),Op("",[RootApp(Call(SVar("out"),[])),RootApp(Id)])))),SDef("obsolete",[DefaultVarDec("msg")],Where(Seq(Call(SVar("msg"),[]),Call(SVar("debug"),[Build(Str("obsolete library strategy: "))])))),SDef("dissuader",[DefaultVarDec("msg")],Where(Call(SVar("if-verbose2"),[Seq(Call(SVar("msg"),[]),Call(SVar("debug"),[Build(Str("dissuasive library strategy: "))]))]))),SDef("Assert",[DefaultVarDec("s"),DefaultVarDec("msg")],LChoice(Test(Call(SVar("s"),[])),Call(SVar("debug"),[Call(SVar("msg"),[])]))),SDef("risky",[DefaultVarDec("msg"),DefaultVarDec("s")],Call(SVar("restore"),[Call(SVar("s"),[]),Call(SVar("debug"),[Call(SVar("msg"),[])])]))]),Strategies([SDef("stdio",[DefaultVarDec("s")],LChoice(Seq(BA(Call(SVar("ReadFromFile"),[]),Var("stdin")),Seq(Call(SVar("s"),[]),Seq(Call(SVar("split"),[Build(Var("stdout")),Id]),Call(SVar("WriteToTextFile"),[])))),BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("** rewriting failed"),Op("Nil",[])]))))]),Strategies([SDef("stdioO",[DefaultVarDec("s")],LChoice(Seq(Call(SVar("split"),[Id,BA(Call(SVar("ReadFromFile"),[]),Var("stdin"))]),Seq(Call(SVar("s"),[]),Seq(Call(SVar("split"),[Build(Var("stdout")),Id]),Call(SVar("WriteToTextFile"),[])))),BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("** rewriting failed"),Op("Nil",[])]))))]),Strategies([SDef("new-file",[],Rec("x",Seq(BA(Call(SVar("conc-strings"),[]),Op("",[App(Call(SVar("new"),[]),Op("",[])),Str(".tmp")])),Call(SVar("try"),[Seq(Call(SVar("file-exists"),[]),Call(SVar("x"),[]))])))),SDef("temp-file",[DefaultVarDec("s")],Seq(Where(AM(Call(SVar("new-file"),[]),Var("f"))),BA(Call(SVar("finally"),[Call(SVar("s"),[]),Call(SVar("try"),[BA(Call(SVar("remove-file"),[]),Var("f"))])]),Op("",[Var("f"),RootApp(Id)])))),SDef("new-temp-file",[],Seq(BA(Call(SVar("conc-strings"),[]),Op("",[RootApp(Call(SVar("temp-dir"),[])),Str("/StrategoXT")])),Call(SVar("mkstemp"),[])))])])
