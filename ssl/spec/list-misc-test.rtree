Specification([Imports(["sunit","list-misc"]),Strategies([SDef("main",[],Call(SVar("test-suite"),[Build(Str("list-misc-test")),Seq(Call(SVar("test1"),[]),Call(SVar("copy-test"),[]))])),SDef("test1",[],Call(SVar("apply-test"),[Build(Str("test1")),Rec("flat",Call(SVar("mapfoldr"),[Id,LChoice(Seq(Call(SVar("is-list"),[]),Call(SVar("flat"),[])),LRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id))),Call(SVar("conc"),[])])),Build(Op("Cons",[Str("a"),Op("Cons",[Op("Cons",[Str("b"),Op("Cons",[Op("Cons",[Str("c"),Op("Cons",[Str("d"),Op("Nil",[])])]),Op("Nil",[])])]),Op("Cons",[Str("e"),Op("Nil",[])])])])),Build(Op("Cons",[Str("a"),Op("Cons",[Str("b"),Op("Cons",[Str("c"),Op("Cons",[Str("d"),Op("Cons",[Str("e"),Op("Nil",[])])])])])]))])),SDef("copy-test",[],Call(SVar("apply-test"),[Build(Str("copy-test")),Call(SVar("copy"),[]),Build(Op("",[Int(4),Str("a")])),Build(Op("Cons",[Str("a"),Op("Cons",[Str("a"),Op("Cons",[Str("a"),Op("Cons",[Str("a"),Op("Nil",[])])])])]))]))])])