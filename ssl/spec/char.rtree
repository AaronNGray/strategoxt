Specification([Strategies([SDef("is-alphanum",[],Choice(Call(SVar("is-num"),[]),Call(SVar("is-alpha"),[]))),SDef("is-alpha",[],Choice(Call(SVar("is-upper"),[]),Call(SVar("is-lower"),[]))),SDef("is-num",[],Seq(Match(Var("c")),Where(Seq(BA(Call(SVar("geq"),[]),Op("",[Var("c"),Int(48)])),BA(Call(SVar("leq"),[]),Op("",[Var("c"),Int(57)])))))),SDef("is-upper",[],Seq(Match(Var("c")),Where(Seq(BA(Call(SVar("geq"),[]),Op("",[Var("c"),Int(65)])),BA(Call(SVar("leq"),[]),Op("",[Var("c"),Int(90)])))))),SDef("is-lower",[],Seq(Match(Var("c")),Where(Seq(BA(Call(SVar("geq"),[]),Op("",[Var("c"),Int(97)])),BA(Call(SVar("leq"),[]),Op("",[Var("c"),Int(122)])))))),SDef("is-ascii",[],Seq(Match(Var("c")),Where(Seq(BA(Call(SVar("geq"),[]),Op("",[Var("c"),Int(32)])),BA(Call(SVar("leq"),[]),Op("",[Var("c"),Int(127)])))))),SDef("case-char",[DefaultVarDec("s")],Seq(Call(SVar(""),[Call(SVar("to-upper"),[]),Call(SVar("to-upper"),[])]),Call(SVar("s"),[]))),SDef("to-upper",[],Call(SVar("try"),[Seq(Call(SVar("is-lower"),[]),LRule(Rule(Var("x"),App(Call(SVar("subt"),[]),Op("",[Var("x"),Int(32)])),Id)))])),SDef("to-lower",[],Call(SVar("try"),[Seq(Call(SVar("is-upper"),[]),LRule(Rule(Var("x"),App(Call(SVar("add"),[]),Op("",[Var("x"),Int(32)])),Id)))]))])])