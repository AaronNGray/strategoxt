Specification([Imports(["verbose"]),Signature([Constructors([OpDecl("WaitStatus",FunType([ConstType(Var("Int")),ConstType(Var("Int")),ConstType(Var("Int"))],ConstType(Var("WaitStatus")))),OpDecl("Pipe",FunType([ConstType(Var("Int")),ConstType(Var("Int"))],ConstType(Var("Pipe"))))])]),Strategies([SDef("exit",[],Seq(Match(Var("n")),Prim("SSL_exit",[Var("n")]))),SDef("get-pid",[],Prim("SSL_get_pid",[])),SDef("fork",[],Prim("SSL_fork",[])),SDef("fork",[DefaultVarDec("child")],Seq(Match(Var("t")),Seq(Call(SVar("fork"),[]),Seq(Match(Var("pid")),LChoice(Seq(Match(Int(0)),BA(Call(SVar("child"),[]),Var("t"))),Build(Op("",[Var("pid"),Var("t")]))))))),SDef("fork",[DefaultVarDec("child"),DefaultVarDec("parent")],Seq(Match(Var("t")),Seq(Call(SVar("fork"),[]),Seq(Match(Var("pid")),LChoice(Seq(Match(Int(0)),BA(Call(SVar("child"),[]),Var("t"))),BA(Call(SVar("parent"),[]),Op("",[Var("pid"),Var("t")]))))))),SDef("fork-and-wait",[DefaultVarDec("child")],Seq(Match(Var("t")),Seq(Call(SVar("fork"),[]),Seq(Match(Var("pid")),LChoice(Seq(Match(Int(0)),BA(Call(SVar("child"),[]),Var("t"))),Seq(BA(Call(SVar("waitpid"),[]),Var("pid")),Build(Var("t")))))))),SDef("execvp",[],Seq(Match(Op("",[Var("file"),Var("argv")])),Prim("SSL_execvp",[Var("file"),Var("argv")]))),SDef("waitpid",[],Seq(Match(Var("pid")),Prim("SSL_waitpid",[Var("pid")]))),SDef("pipe",[],Prim("SSL_pipe",[])),SDef("close",[],Seq(Match(Var("fd")),Prim("SSL_close",[Var("fd")]))),SDef("dup",[],Seq(Match(Var("fd")),Prim("SSL_dup",[Var("fd")]))),SDef("STDIN_FILENO",[],Prim("SSL_STDIN_FILENO",[])),SDef("STDOUT_FILENO",[],Prim("SSL_STDOUT_FILENO",[])),SDef("STDERR_FILENO",[],Prim("SSL_STDERR_FILENO",[])),SDef("fdopen",[],Seq(Match(Op("",[Var("fd"),Var("mode")])),Prim("SSL_fdopen",[Var("fd"),Var("mode")]))),SDef("fclose",[],Seq(Match(Var("stream")),Prim("SSL_fclose",[Var("stream")]))),SDef("call",[],Seq(Match(Op("",[Var("prog"),Var("args")])),Prim("SSL_call",[Var("prog"),Var("args")]))),SDef("call-noisy",[],Seq(Match(Op("",[Var("prog"),Var("args")])),Prim("SSL_call_noisy",[Var("prog"),Var("args")]))),SDef("pipe-term-to-child",[DefaultVarDec("prog"),DefaultVarDec("args")],Seq(Match(Var("t")),Seq(Where(Seq(AM(Call(SVar("prog"),[]),Var("prog-trm")),AM(Call(SVar("args"),[]),Var("args-trm")))),Prim("SSL_pipe_term_to_child",[Var("t"),Var("prog-trm"),Var("args-trm")]))))]),Strategies([SDef("rm-files",[],Seq(Match(Var("files")),Where(BA(Call(SVar("call"),[]),Op("",[Str("rm"),Op("Cons",[Str("-f"),Var("files")])]))))),SDef("pipe",[DefaultVarDec("c"),DefaultVarDec("suf2")],Call(SVar("pipe"),[Call(SVar("c"),[]),Call(SVar("suf2"),[]),Build(Op("Nil",[]))])),SDef("pipe",[DefaultVarDec("c"),DefaultVarDec("suf2"),DefaultVarDec("args")],Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("in"))),Seq(Call(SVar(""),[Id,Call(SVar("suf2"),[])]),Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("out"))),Where(BA(Call(SVar("call"),[]),Op("",[RootApp(Call(SVar("c"),[])),Op("Cons",[Str("-i"),Op("Cons",[Var("in"),Op("Cons",[Str("-o"),Op("Cons",[Var("out"),RootApp(Call(SVar("args"),[]))])])])])]))))))),SDef("pipe'",[DefaultVarDec("c"),DefaultVarDec("suf2"),DefaultVarDec("args")],Seq(Call(SVar("obsolete"),[Build(Str("pipe'/3; use pipe/3"))]),Call(SVar("pipe"),[Call(SVar("c"),[]),Call(SVar("suf2"),[]),Call(SVar("args"),[])]))),SDef("call-tmp",[DefaultVarDec("comm"),DefaultVarDec("args"),DefaultVarDec("cont")],Seq(Match(Var("filein")),Call(SVar("temp-file"),[LRule(Rule(Op("",[Var("fileout"),Wld]),RootApp(Seq(BA(Seq(Call(SVar("if-verbose5"),[Call(SVar("debug"),[])]),Call(SVar("call"),[])),Op("",[RootApp(Call(SVar("comm"),[])),Op("Cons",[Str("-i"),Op("Cons",[Var("filein"),Op("Cons",[Str("-o"),Op("Cons",[Var("fileout"),RootApp(Call(SVar("args"),[]))])])])])])),Seq(Build(Var("fileout")),Call(SVar("cont"),[])))),Id))]))),SDef("call-out",[DefaultVarDec("comm"),DefaultVarDec("args"),DefaultVarDec("out"),DefaultVarDec("cont")],Seq(Match(Var("filein")),Seq(BA(Call(SVar("call"),[]),Op("",[RootApp(Call(SVar("comm"),[])),Op("Cons",[Str("-i"),Op("Cons",[Var("filein"),Op("Cons",[Str("-o"),Op("Cons",[RootApp(Call(SVar("out"),[])),RootApp(Call(SVar("args"),[]))])])])])])),Seq(Call(SVar("out"),[]),Call(SVar("cont"),[]))))),SDef("transform-file",[DefaultVarDec("s"),DefaultVarDec("suf")],Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("in"))),Seq(Call(SVar(""),[Id,Call(SVar("suf"),[])]),Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("out"))),Where(BA(Call(SVar("apply-to-file"),[Call(SVar("s"),[])]),Op("",[Var("in"),Var("out")]))))))),SDef("apply-to-file",[DefaultVarDec("s")],Seq(Match(Op("",[Var("in"),Var("out")])),Seq(Where(AM(BA(Seq(Call(SVar("ReadFromFile"),[]),Call(SVar("s"),[])),Var("in")),Var("trm"))),Where(BA(Call(SVar("WriteToBinaryFile"),[]),Op("",[Var("out"),Var("trm")])))))),SDef("copy-file",[DefaultVarDec("s"),DefaultVarDec("new-base"),DefaultVarDec("new-suf")],Seq(Match(Op("",[Var("base"),Var("suf")])),Seq(Call(SVar(""),[Call(SVar("new-base"),[]),Call(SVar("new-suf"),[])]),Seq(Match(Op("",[Var("nbase"),Var("nsuf")])),Where(BA(Call(SVar("apply-to-file"),[Call(SVar("s"),[])]),Op("",[App(Call(SVar("conc-strings"),[]),Op("",[Var("base"),Var("suf")])),App(Call(SVar("conc-strings"),[]),Op("",[Var("nbase"),Var("nsuf")]))]))))))),SDef("apply-program",[DefaultVarDec("name")],Call(SVar("apply-program"),[Call(SVar("name"),[]),Build(Op("Nil",[]))])),SDef("apply-program",[DefaultVarDec("name"),DefaultVarDec("args")],Call(SVar("temp-file"),[Seq(Match(Op("",[Var("infile"),Wld])),Seq(Call(SVar("WriteToBinaryFile"),[]),Call(SVar("temp-file"),[Seq(Match(Op("",[Var("outfile"),Wld])),Seq(BA(Call(SVar("call"),[]),Op("",[App(Call(SVar("name"),[]),Op("",[])),Op("Cons",[Str("-i"),Op("Cons",[Var("infile"),Op("Cons",[Str("-o"),Op("Cons",[Var("outfile"),App(Call(SVar("args"),[]),Op("",[]))])])])])])),BA(Call(SVar("ReadFromFile"),[]),Var("outfile"))))])))]))])])