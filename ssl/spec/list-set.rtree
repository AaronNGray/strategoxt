Specification([Imports(["list-basic","term"]),Rules([RDef("HdMember",[DefaultVarDec("mklst")],Rule(Op("Cons",[Var("x"),Var("xs")]),Var("xs"),Seq(Call(SVar("mklst"),[]),Call(SVar("fetch"),[Match(Var("x"))])))),RDef("HdMember'",[DefaultVarDec("eq"),DefaultVarDec("mklst")],Rule(Op("Cons",[Var("x"),Var("xs")]),Var("xs"),Seq(Call(SVar("mklst"),[]),Call(SVar("fetch"),[LRule(Rule(Var("y"),App(Call(SVar("eq"),[]),Op("",[Var("x"),Var("y")])),Id))])))),SDef("make-set",[],Call(SVar("foldr"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Build(Op("Cons",[RootApp(Id),Op("Nil",[])]))]))]),Strategies([SDef("union",[],Call(SVar("union"),[Call(SVar("eq"),[])])),RDef("union",[DefaultVarDec("eq")],Rule(Op("",[Var("l1"),Var("l2")]),App(Rec("x",LChoice(Seq(Call(SVar("Nil"),[]),Build(Var("l2"))),LChoice(Seq(Call(SVar("HdMember'"),[Call(SVar("eq"),[]),Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id)),SDef("unions",[],Call(SVar("unions"),[Call(SVar("eq"),[])])),SDef("unions",[DefaultVarDec("eq")],Call(SVar("foldr"),[Build(Op("Nil",[])),Call(SVar("union"),[Call(SVar("eq"),[])])]))]),Rules([SDef("diff",[],Call(SVar("diff"),[Call(SVar("eq"),[])])),RDef("diff",[DefaultVarDec("eq")],Rule(Op("",[Var("l1"),Var("l2")]),App(Rec("x",LChoice(Call(SVar("Nil"),[]),LChoice(Seq(Call(SVar("HdMember'"),[Call(SVar("eq"),[]),Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id)),SDef("diff'",[DefaultVarDec("eq")],Seq(Call(SVar("obsolete"),[Build(Str("diff'/1; use diff/1"))]),Call(SVar("diff"),[Call(SVar("eq"),[])]))),SDef("sym-diff",[],Call(SVar("sym-diff"),[Call(SVar("eq"),[])])),SDef("sym-diff",[DefaultVarDec("eq")],BA(Call(SVar("union"),[]),Op("",[RootApp(Call(SVar("diff"),[Call(SVar("eq"),[])])),RootApp(Seq(Call(SVar("Swap"),[]),Call(SVar("diff"),[Call(SVar("eq"),[])])))])))]),Strategies([SDef("isect",[],Call(SVar("isect"),[Call(SVar("eq"),[])])),RDef("isect",[DefaultVarDec("eq")],Rule(Op("",[Var("l1"),Var("l2")]),App(Rec("x",LChoice(Call(SVar("Nil"),[]),LChoice(Seq(Where(Call(SVar("HdMember'"),[Call(SVar("eq"),[]),Build(Var("l2"))])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Match(Op("Cons",[Wld,RootApp(Call(SVar("x"),[]))]))))),Var("l1")),Id))]),Imports(["tuple"]),Rules([RDef("crush",[DefaultVarDec("nul"),DefaultVarDec("sum")],Rule(Explode(Wld,Var("xs")),App(Call(SVar("foldr"),[Call(SVar("nul"),[]),Call(SVar("sum"),[])]),Var("xs")),Id)),RDef("crush",[DefaultVarDec("nul"),DefaultVarDec("sum"),DefaultVarDec("s")],Rule(Explode(Wld,Var("xs")),App(Call(SVar("foldr"),[Call(SVar("nul"),[]),Call(SVar("sum"),[]),Call(SVar("s"),[])]),Var("xs")),Id))]),Strategies([SDef("foldr-kids",[DefaultVarDec("nul"),DefaultVarDec("sum")],Seq(Call(SVar("obsolete"),[Build(Str("foldr-kids/2; use crush/2"))]),Call(SVar("crush"),[Call(SVar("nul"),[]),Call(SVar("sum"),[])]))),SDef("foldr-kids",[DefaultVarDec("nul"),DefaultVarDec("sum"),DefaultVarDec("s")],Seq(Call(SVar("obsolete"),[Build(Str("foldr-kids/3; use crush/3"))]),Call(SVar("crush"),[Call(SVar("nul"),[]),Call(SVar("sum"),[]),Call(SVar("s"),[])]))),SDef("node-size",[],Call(SVar("crush"),[Build(Int(0)),Call(SVar("add"),[]),Build(Int(1))])),SDef("term-size",[],Call(SVar("crush"),[Build(Int(1)),Call(SVar("add"),[]),Call(SVar("term-size"),[])]))]),Strategies([SDef("collect-kids",[DefaultVarDec("s")],Seq(Call(SVar("obsolete"),[Build(Str("collect-kids(s); use crush(![],union,s)"))]),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("s"),[])]))),SDef("collect-all",[DefaultVarDec("s")],Rec("x",LChoice(Build(Op("Cons",[RootApp(Call(SVar("s"),[])),RootApp(Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("x"),[])]))])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("x"),[])])))),SDef("collect-all",[DefaultVarDec("s"),DefaultVarDec("un")],Rec("x",LChoice(Build(Op("Cons",[RootApp(Call(SVar("s"),[])),RootApp(Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("un"),[]),Call(SVar("x"),[])]))])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("un"),[]),Call(SVar("x"),[])])))),SDef("postorder-collect",[DefaultVarDec("s")],Call(SVar("postorder-collect"),[Call(SVar("s"),[]),Build(Op("Nil",[]))])),SDef("postorder-collect",[DefaultVarDec("s"),DefaultVarDec("acc")],Seq(Where(AM(LChoice(Build(Op("Cons",[RootApp(Call(SVar("s"),[])),RootApp(Call(SVar("acc"),[]))])),Call(SVar("acc"),[])),Var("ys"))),Call(SVar("crush"),[Build(Var("ys")),LRule(Rule(Op("",[Var("x"),Var("xs")]),App(Call(SVar("postorder-collect"),[Call(SVar("s"),[]),Build(Var("xs"))]),Var("x")),Id))]))),SDef("collect-om",[DefaultVarDec("s")],Rec("x",LChoice(Build(Op("Cons",[RootApp(Call(SVar("s"),[])),Op("Nil",[])])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("x"),[])])))),SDef("collect",[DefaultVarDec("s")],Call(SVar("collect-om"),[Call(SVar("s"),[])])),SDef("collect-set",[DefaultVarDec("s")],Rec("x",LChoice(Build(Op("Cons",[RootApp(Call(SVar("s"),[])),Op("Nil",[])])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("conc"),[]),Call(SVar("x"),[])])))),SDef("collect",[DefaultVarDec("s"),VarDec("skip",FunType([ConstType(Var("a")),FunType([ConstType(Var("a"))],ConstType(Var("a"))),FunType([ConstType(Var("a"))],ConstType(Var("a")))],ConstType(Var("a"))))],Rec("x",LChoice(Build(Op("Cons",[RootApp(Call(SVar("s"),[])),Op("Nil",[])])),LChoice(Seq(Call(SVar("skip"),[Call(SVar("x"),[]),Build(Op("Nil",[]))]),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Id])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("x"),[])]))))),SDef("collect-exc",[DefaultVarDec("base"),VarDec("special",FunType([ConstType(Var("a")),FunType([ConstType(Var("a"))],ConstType(Var("b")))],ConstType(Var("b"))))],Rec("coll",LChoice(LChoice(Call(SVar("base"),[]),Call(SVar("special"),[Call(SVar("coll"),[])])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("coll"),[])])))),SDef("bu-collect",[DefaultVarDec("s")],LChoice(Rec("x",LChoice(Seq(Some(Call(SVar("x"),[])),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Build(Op("Nil",[])))])),Build(Op("Cons",[RootApp(Call(SVar("s"),[])),Op("Nil",[])])))),Build(Op("Nil",[])))),SDef("collect-split",[DefaultVarDec("splitter")],Rec("x",Call(SVar("CollectSplit"),[Call(SVar("x"),[]),LChoice(Call(SVar("splitter"),[]),Build(Op("",[RootApp(Id),Op("Nil",[])])))]))),SDef("collect-split'",[DefaultVarDec("splitter")],Rec("x",LChoice(Seq(Choice(Call(SVar("is-string"),[]),Call(SVar("is-int"),[])),Call(SVar("splitter"),[])),Call(SVar("CollectSplit"),[Call(SVar("x"),[]),Call(SVar("splitter"),[])])))),SDef("collect-split",[DefaultVarDec("f"),DefaultVarDec("g")],Rec("x",Call(SVar("CollectSplit"),[Call(SVar("x"),[]),Build(Op("",[RootApp(Call(SVar("try"),[Call(SVar("f"),[])])),RootApp(LChoice(Call(SVar("g"),[]),Build(Op("Nil",[]))))]))])))]),Rules([RDef("CollectSplit",[DefaultVarDec("s"),DefaultVarDec("splitter")],Rule(Anno(Explode(Var("c"),Var("as")),Op("Cons",[Var(ListVar("annos*")),Op("Nil",[])])),Op("",[Var("t"),App(Call(SVar("union"),[]),Op("",[Var("ys"),App(Call(SVar("unions"),[]),Var("xs"))]))]),Seq(AM(BA(Call(SVar("unzip"),[Call(SVar("s"),[])]),Var("as")),Op("",[Var("bs"),Var("xs")])),AM(BA(Call(SVar("splitter"),[]),Anno(Explode(Var("c"),Var("bs")),Op("Cons",[Var(ListVar("annos*")),Op("Nil",[])]))),Op("",[Var("t"),Var("ys")]))))),SDef("CollectSplit",[DefaultVarDec("s"),DefaultVarDec("f"),DefaultVarDec("g")],Call(SVar("CollectSplit"),[Call(SVar("s"),[]),Build(Op("",[RootApp(Call(SVar("try"),[Call(SVar("f"),[])])),RootApp(LChoice(Call(SVar("g"),[]),Build(Op("Nil",[]))))]))]))]),Strategies([SDef("nrofoccs",[DefaultVarDec("s")],Seq(Call(SVar("obsolete"),[Build(Str("nrofoccs/1; use occurrences/1"))]),Call(SVar("occurrences"),[Call(SVar("s"),[])]))),SDef("om-occurrences",[DefaultVarDec("s")],LChoice(Seq(Call(SVar("s"),[]),Build(Int(1))),Call(SVar("crush"),[Build(Int(0)),Call(SVar("add"),[]),Call(SVar("occurrences"),[Call(SVar("s"),[])])]))),SDef("occurrences",[DefaultVarDec("s")],Seq(Call(SVar("split"),[LChoice(Seq(Call(SVar("s"),[]),Build(Int(1))),Build(Int(0))),Call(SVar("crush"),[Build(Int(0)),Call(SVar("add"),[]),Call(SVar("occurrences"),[Call(SVar("s"),[])])])]),Call(SVar("add"),[]))),SDef("twicetd",[DefaultVarDec("s")],Call(SVar("oncetd"),[Seq(Call(SVar("explode-term"),[]),Seq(Call(SVar(""),[Id,Call(SVar("at-suffix"),[Call(SVar("Cons"),[Call(SVar("oncetd"),[Call(SVar("s"),[])]),Call(SVar("oncetd"),[Call(SVar("s"),[])])])])]),Call(SVar("mkterm"),[])))])),SDef("atmostonce",[DefaultVarDec("s")],Not(Call(SVar("twicetd"),[Call(SVar("s"),[])]))),SDef("atmostonce'",[DefaultVarDec("s")],Scope(["n"],Seq(AM(Call(SVar("nrofoccs"),[Call(SVar("s"),[])]),Var("n")),BA(Call(SVar("leq"),[]),Op("",[Var("n"),Int(1)])))))])])
