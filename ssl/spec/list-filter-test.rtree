Specification([Imports(["sunit","list-filter"]),Strategies([SDef("main",[],Call(SVar("test-suite"),[Build(Str("list-filter-test")),Seq(Call(SVar("test1"),[]),Call(SVar("test2"),[]))])),SDef("test1",[],Call(SVar("apply-test"),[Build(Str("test1")),Call(SVar("filter"),[Match(Op("",[Str("a"),Wld]))]),Build(Op("Cons",[Op("",[Str("b"),Int(0)]),Op("Cons",[Op("",[Str("a"),Str("b")]),Op("Cons",[Op("",[Str("b"),Str("c")]),Op("Cons",[Op("",[Str("a"),Int(1)]),Op("Nil",[])])])])])),Build(Op("Cons",[Op("",[Str("a"),Str("b")]),Op("Cons",[Op("",[Str("a"),Int(1)]),Op("Nil",[])])]))])),SDef("test2",[],Call(SVar("apply-test"),[Build(Str("test2")),Call(SVar("partition"),[Call(SVar("is-string"),[])]),Build(Op("Cons",[Int(0),Op("Cons",[Str("a"),Op("Cons",[Str("b"),Op("Cons",[Int(1),Op("Nil",[])])])])])),Build(Op("",[Op("Cons",[Str("a"),Op("Cons",[Str("b"),Op("Nil",[])])]),Op("Cons",[Int(0),Op("Cons",[Int(1),Op("Nil",[])])])]))]))])])