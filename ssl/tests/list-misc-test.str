module list-misc-test
imports sunit list-misc

strategies

  main =
    test-suite(!"list-misc-test",
	test1;
	copy-test;
	number-test;
	flatten-test;
	init-last-test;
	take-test;
	drop-test
    )

  test1 =
    apply-test(!"test1"
	, rec flat(mapfoldr(id
		           ,is-list; flat <+ \ x -> [x] \
			   ,conc
			   ))
	, !["a",["b",["c","d"]],"e"]
	, !["a","b","c","d","e"]
	)

  copy-test = 
    apply-test(!"copy-test"
	, copy
	, !(4, "a")
	, !["a", "a", "a", "a"]
	)


  number-test = 
    apply-test(!"number-test"
	, number(id)
	, !["a", "b", "c", "d"]
	, ![("a",0),("b",1),("c",2),("d",3)]
	)

  init-last-test = 
      apply-test(!"init"
      , init
      , ![1, 2, 3, 4]
      , ![1, 2, 3]
      )
    ; apply-test(!"empty init"
      , init
      , ![1]
      , ![]
      )
    ; apply-test(!"split-last"
      , split-last
      , ![1, 2, 3, 4]
      , !([1, 2, 3], 4)
      )
    ; apply-test(!"split-last"
      , split-last
      , ![1]
      , !([], 1)
      )

  flatten-test =
      apply-test(!"flatten-test 1", flatten-list
      , !["a",["b",["c","d"]],"e"]
      , !["a","b","c","d","e"]
      )
    ; apply-test(!"flatten-test 2", flatten-list
      , !["a",["b",[]],"e"]
      , !["a","b", "e"]
      )
    ; apply-test(!"flatten-test 3", flatten-list
      , ![]
      , ![]
      )
    ; apply-test(!"flatten-test 4", flatten-list
      , ![[]]
      , ![]
      )
    ; apply-test(!"flatten-test 5", flatten-list
      , !["a", "b", "c"]
      , !["a", "b", "c"]
      )
    ; apply-test(!"flatten-test 5", flatten-list
      , !["a", [("b", [1, 2]), "d"], "c"]
      , !["a", ("b", [1, 2]), "d", "c"]
      )

  take-test =
    apply-test(!"take-test"
        , take(!3)
	, !["a","b","c","d","e"]
	, !["a","b","c"]
    )

  drop-test =
    apply-test(!"drop-test"
        , drop(!3)
	, !["a","b","c","d","e"]
	, !["d","e"]
    )