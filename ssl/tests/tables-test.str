/**
 * Unit tests for table strategies
 */
module tables-test
imports sunit tables
strategies

  main = 
    test-suite(!"tables-test",
      test1
    ; test2
    ; test3

    ; test-create
    ; test-put
    ; test-get
    ; test-remove
    ; test-keys

    ; test-stack
    )

strategies
  test1 =
    apply-and-check(!"legacy table-put"
    , table-put
    , !("bla", "key", "value")
    , <table-get> ("bla", "key") => "value"
    )

  test2 =
    apply-and-fail(!"legacy table-get"
    , table-get
    , !("blabla", "key")
    )

  test3 =
    apply-test(!"legacy table_keys"
    , table-keys
    , !"blablabla"
    , ![]
    )

strategies

  test-create =
    apply-and-check(!"new-hashtable", new-hashtable, !(), ?Hashtable(_); destroy-hashtable)

  test-put =
    where(new-hashtable => tbl)
    ; apply-and-check(!"hashtable-put"
      , hashtable-put(|"key", "value")
      , !tbl
      , <hashtable-get(|"key")> tbl => "value"
      )

  test-get =
      apply-and-fail(!"hashtable-get on not a hashtable"
      , hashtable-get(|"key")
      , !()
      )
    ; apply-and-fail(!"hashtable-get on not a hashtable"
      , hashtable-get(|"key")
      , !Hashtable("1")
      )

  test-remove =
    where(new-hashtable => tbl)
    ; apply-and-check(!"hashtable-remove"
      , hashtable-put(|"key", "value"); hashtable-remove(|"key")
      , !tbl
      , not(<hashtable-get(|"key")> tbl)
      )

  test-keys =
    where(new-hashtable => tbl)
    ; apply-test(!"hashtable-keys"
      , hashtable-keys
      , !tbl
      , ![]
      )
    ; apply-test(!"hashtable-keys"
      , hashtable-put(|"key", "value"); hashtable-keys
      , !tbl
      , !["key"]
      )

  test-stack =
    where(new-hashtable => tbl)
    ; apply-test(!"hashtable-push"
      , hashtable-push(|"keyA", "value1")
        ; hashtable-push(|"keyA", "value2")
        ; hashtable-push(|"keyA", "value3")
        ; hashtable-push(|"keyB", "value4")
      , !tbl
      , !tbl
      )
    ; apply-and-fail(!"hashtable-peek-invalidstack"
      , hashtable-peek(|"keyZ")
      , !tbl
      )
    ; apply-test(!"hashtable-peek"
      , hashtable-peek(|"keyA")
      , !tbl
      , !"value3"
      )
    ; apply-test(!"hashtable-peek-again"
      , hashtable-peek(|"keyA")
      , !tbl
      , !"value3"
      )
    ; apply-test(!"hashtable-peek-singleton"
      , hashtable-peek(|"keyB")
      , !tbl
      , !"value4"
      )
    ; apply-test(!"hashtable-pop"
      , hashtable-pop(|"keyA")
        ; hashtable-pop(|"keyA")
      , !tbl
      , !tbl
      )
    ; apply-test(!"hashtable-peekpop"
      , hashtable-peekpop(|"keyA")
      , !tbl
      , !"value1"
      )
    ; apply-and-fail(!"hashtable-pop-empty"
      , hashtable-pop(|"keyA")
      , !tbl
      )
