regular hedge grammar
  start DocType
  productions
    DocType ->
        doctype (Decl*)

    Decl ->
        Def
      | element (NameSpec ModelGroup)
      | attlist (NameSpec AttElem*)
      | overridden      (Def DuplicateDef)
      | externalIdRef   (Decl*)      .name (<string>)
      | includedSection (Decl*)      .flag (<string>)
      | ignoredSection  (<string>)   .flag (<string>)
      | internalEntity  (<string>)   .name (<string>)
      | externalEntity  (ExternalId) .name (<string>)
      | notation        (ExternalId) .name (<string>)
      | comment         (<string>)
      | processingInstruction (<string>) .target (<string>)

    Def ->
        modelGroup       (ModelGroup) .name (<string>)
      | attributeGroup   (AttElem*)   .name (<string>)
      | enumGroup        (EnumElem*)  .name (<string>)
      | datatype         (DataType)   .name (<string>)
      | attributeDefault (AttDefault) .name (<string>)
      | flag             (Flag)       .name (<string>)
      | nameSpec         (NameSpec)   .name (<string>)
      | externalId       (/)          .name (<string>) .system? (<string>) .public? (<string>)
      | param            (<string>)   .name (<string>)
      
    DuplicateDef ->
        duplicate (/) .name (<string>)

    Flag ->
        include (/)
      | ignore  (/)
      | flagRef (/) .name (<string>)

    DataType ->
        tokenized (EnumElem*) .name? (<string>)
      | datatyperef (/)       .name  (<string>)
      | cdata (/)

    EnumElem ->
        enum (<string>)
      | enumGroupRef (/) .name (<string>)

    AttElem  ->
        attribute (NameSpec DataType AttDefault)
      | attributeGroupRef (/) .name (<string>)

    AttDefault -> 
        implied  (/)
      | required (/)          
      | default  (<string>)
      | fixed    (<string>)
      | attributeDefaultRef (/) .name (<string>)

    ModelGroup ->
        modelGroupRef (/) .name (<string>)
      | elementRef    (NameSpec)
      | oneOrMore     (ModelGroup)
      | zeroOrMore    (ModelGroup)
      | optional      (ModelGroup)
      | pcdata        (/)
      | choice        ((ModelGroup ModelGroup+)?)
      | sequence      ((ModelGroup ModelGroup+)?)

    NameSpec ->
        name (<string>)
      | nameSpecRef (/) .name (<string>)