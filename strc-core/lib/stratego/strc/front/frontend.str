/**
 * An xtc-less implementation of the compiler front-end.
 */

module frontend

strategies

  frontend = id
    ; if-not-lib(add-main)
    ; repair-types		
    ; pre-desugar			
    ; combine-sections	
    ; variables-to-constructors	
    ; raise-annotations	
    ; define-lrules		
    ; LiftDynamicRules
    ; stratego-desugar			
    ; raise-annotations
    ; spec-use-def				
    ; CheckConstructors	
    ; ExpandOverlays		
    ; rules-to-sdefs		
    ; desugar-list-matching
    ; desugar-DefaultVarDec
    ; introduce-congdefs
    ; strename // rename-vars
    ; desugar-top
    ; if-lib(extract-all, extract)
 // ; stratego-warnings
    ; rename-defs
    ; simplify1
    ; define-congruences

    // use-def			= comp(|"use-def", <pass-maybe-unbound-warnings>)
    // stratego-warnings	= comp(|"stratego-warnings", <pass-warnings>)

strategies

  /**
   * Adding main strategy
   * 
   * What happens if the specification already contains a main strategy? 
   */

  add-main =
    try(
      where(
        <get-config> "-m" => m
      ; log(|Notice(),["Main strategy is : ",m])
      )
      ; if-not-lib(
          try(AddMain(|m))
        )
    )

  AddMain(|main) : 
    Specification(sects) -> 
    Specification([ Strategies([SDef("main", [], Call(SVar(main), []))]) 
                  | sects ])
      where
        <not("main")>main
      ; <try(check-other-main)>sects

  check-other-main =
    fetch-elem( Strategies(fetch-elem(is-main)) + Rules(fetch-elem(is-main)) )
  ; say(!"Adding main strategy even though one is already present!")

  is-main =
    ?SDef("main", [], _)
  + ?RDef("main", [], _)

    // note: check not exhaustive (also test SDefT)

strategies

  // building a library

  if-lib(s1, s2) = if <get-config>"--library" then s1 else s2 end
  if-lib(s)      = if-lib(s, id)
  if-not-lib(s)  = if-lib(id, s)
  pass-library   = if-lib(!["--library"], ![])
