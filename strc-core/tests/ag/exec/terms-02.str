module terms-02
imports
  libstratego-lib
  libstratego-lazy

signature
  constructors
    Root: Node -> Root
    Node: Node * Node -> Node
    Leaf: Integer -> Node

attributes
  @ left-to-right env

  @ Root(n):
    n.env_inh := []
    root.env_syn := n.env_syn

  @ Node(Node(ll, lr /*1*/), Node(rl /*2*/, rr)):
    lr.env_inh := root.env_inh
    rl.env_inh := lr.env_syn
    root.env_syn := rl.env_syn

  @ Leaf(_):
    root.env_syn := [<?Leaf(<id>)> | default]

strategies
  get-lazy-attribute(|name) =
    id{one( ?(name, v) )} => tree
  ; !v

  get-attribute(|name) =
    get-lazy-attribute(|name) => v
  ; get-value(!v)

  get-env =
    debug(!"input: ")
  ; compute-Root
  ; get-attribute(|"env_syn")
  ; debug(!"output: ")

  terms-02 =
    <get-env> Root(Leaf(1)) => [1]
  ; <get-env> Root(Node(Leaf(1),Leaf(2))) => [2,1]
  ; <get-env> Root(Node(Node(Leaf(1),Leaf(2)),Leaf(3))) => [3,2,1]
  ; <get-env> Root(Node(Leaf(1),Node(Leaf(2),Leaf(3)))) => [3,2,1]
  ; <get-env> Root(Node(Node(Leaf(1),Leaf(2)),Node(Leaf(3),Leaf(4)))) => [3,2]
  ; <get-env> Root(Node(Leaf(0),Node(Node(Leaf(1),Leaf(2)),Node(Leaf(3),Leaf(4))))) => [3,2,0]
  ; <exit> 0
